(global["webpackJsonp"] = global["webpackJsonp"] || []).push([ [ "common/vendor" ], {
    "088b": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0;
        var r = o(n("a13e"));
        function o(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var i = {
            SDKAppID: 1400508505
        }, a = r.default.create(i), s = r.default;
        function c(e) {
            var t = 1400508505, n = 604800, r = "bfbcd634d7f677487afbdacad5936a2494fd86723a6482d55bd72c7bf88bc272";
            "" !== t && "" !== r || alert("请先配置好您的账号信息： SDKAPPID 及 SECRETKEY \r\n\r\nPlease configure your SDKAPPID/SECRETKEY in js/debug/GenerateTestUserSig.js");
            var o = new LibGenerateTestUserSig(t, r, n), i = o.genTestUserSig(e);
            return {
                sdkAppId: t,
                userSig: i
            };
        }
        var u = {
            tim: a,
            TIMData: s,
            genTestUserSig: c
        };
        t.default = u;
    },
    "19bd": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0;
        var r = {
            emojiList: [ [ {
                url: "100.gif",
                alt: "[微笑]"
            }, {
                url: "101.gif",
                alt: "[伤心]"
            }, {
                url: "102.gif",
                alt: "[美女]"
            }, {
                url: "103.gif",
                alt: "[发呆]"
            }, {
                url: "104.gif",
                alt: "[墨镜]"
            }, {
                url: "105.gif",
                alt: "[哭]"
            }, {
                url: "106.gif",
                alt: "[羞]"
            }, {
                url: "107.gif",
                alt: "[哑]"
            }, {
                url: "108.gif",
                alt: "[睡]"
            }, {
                url: "109.gif",
                alt: "[哭]"
            }, {
                url: "110.gif",
                alt: "[囧]"
            }, {
                url: "111.gif",
                alt: "[怒]"
            }, {
                url: "112.gif",
                alt: "[调皮]"
            }, {
                url: "113.gif",
                alt: "[笑]"
            }, {
                url: "114.gif",
                alt: "[惊讶]"
            }, {
                url: "115.gif",
                alt: "[难过]"
            }, {
                url: "116.gif",
                alt: "[酷]"
            }, {
                url: "117.gif",
                alt: "[汗]"
            }, {
                url: "118.gif",
                alt: "[抓狂]"
            }, {
                url: "119.gif",
                alt: "[吐]"
            }, {
                url: "120.gif",
                alt: "[笑]"
            }, {
                url: "121.gif",
                alt: "[快乐]"
            }, {
                url: "122.gif",
                alt: "[奇]"
            }, {
                url: "123.gif",
                alt: "[傲]"
            } ], [ {
                url: "124.gif",
                alt: "[饿]"
            }, {
                url: "125.gif",
                alt: "[累]"
            }, {
                url: "126.gif",
                alt: "[吓]"
            }, {
                url: "127.gif",
                alt: "[汗]"
            }, {
                url: "128.gif",
                alt: "[高兴]"
            }, {
                url: "129.gif",
                alt: "[闲]"
            }, {
                url: "130.gif",
                alt: "[努力]"
            }, {
                url: "131.gif",
                alt: "[骂]"
            }, {
                url: "132.gif",
                alt: "[疑问]"
            }, {
                url: "133.gif",
                alt: "[秘密]"
            }, {
                url: "134.gif",
                alt: "[乱]"
            }, {
                url: "135.gif",
                alt: "[疯]"
            }, {
                url: "136.gif",
                alt: "[哀]"
            }, {
                url: "137.gif",
                alt: "[鬼]"
            }, {
                url: "138.gif",
                alt: "[打击]"
            }, {
                url: "139.gif",
                alt: "[bye]"
            }, {
                url: "140.gif",
                alt: "[汗]"
            }, {
                url: "141.gif",
                alt: "[抠]"
            }, {
                url: "142.gif",
                alt: "[鼓掌]"
            }, {
                url: "143.gif",
                alt: "[糟糕]"
            }, {
                url: "144.gif",
                alt: "[恶搞]"
            }, {
                url: "145.gif",
                alt: "[什么]"
            }, {
                url: "146.gif",
                alt: "[什么]"
            }, {
                url: "147.gif",
                alt: "[累]"
            } ], [ {
                url: "148.gif",
                alt: "[看]"
            }, {
                url: "149.gif",
                alt: "[难过]"
            }, {
                url: "150.gif",
                alt: "[难过]"
            }, {
                url: "151.gif",
                alt: "[坏]"
            }, {
                url: "152.gif",
                alt: "[亲]"
            }, {
                url: "153.gif",
                alt: "[吓]"
            }, {
                url: "154.gif",
                alt: "[可怜]"
            }, {
                url: "155.gif",
                alt: "[刀]"
            }, {
                url: "156.gif",
                alt: "[水果]"
            }, {
                url: "157.gif",
                alt: "[酒]"
            }, {
                url: "158.gif",
                alt: "[篮球]"
            }, {
                url: "159.gif",
                alt: "[乒乓]"
            }, {
                url: "160.gif",
                alt: "[咖啡]"
            }, {
                url: "161.gif",
                alt: "[美食]"
            }, {
                url: "162.gif",
                alt: "[动物]"
            }, {
                url: "163.gif",
                alt: "[鲜花]"
            }, {
                url: "164.gif",
                alt: "[枯]"
            }, {
                url: "165.gif",
                alt: "[唇]"
            }, {
                url: "166.gif",
                alt: "[爱]"
            }, {
                url: "167.gif",
                alt: "[分手]"
            }, {
                url: "168.gif",
                alt: "[生日]"
            }, {
                url: "169.gif",
                alt: "[电]"
            }, {
                url: "170.gif",
                alt: "[炸弹]"
            }, {
                url: "171.gif",
                alt: "[刀子]"
            } ], [ {
                url: "172.gif",
                alt: "[足球]"
            }, {
                url: "173.gif",
                alt: "[瓢虫]"
            }, {
                url: "174.gif",
                alt: "[翔]"
            }, {
                url: "175.gif",
                alt: "[月亮]"
            }, {
                url: "176.gif",
                alt: "[太阳]"
            }, {
                url: "177.gif",
                alt: "[礼物]"
            }, {
                url: "178.gif",
                alt: "[抱抱]"
            }, {
                url: "179.gif",
                alt: "[拇指]"
            }, {
                url: "180.gif",
                alt: "[贬低]"
            }, {
                url: "181.gif",
                alt: "[握手]"
            }, {
                url: "182.gif",
                alt: "[剪刀手]"
            }, {
                url: "183.gif",
                alt: "[抱拳]"
            }, {
                url: "184.gif",
                alt: "[勾引]"
            }, {
                url: "185.gif",
                alt: "[拳头]"
            }, {
                url: "186.gif",
                alt: "[小拇指]"
            }, {
                url: "187.gif",
                alt: "[拇指八]"
            }, {
                url: "188.gif",
                alt: "[食指]"
            }, {
                url: "189.gif",
                alt: "[ok]"
            }, {
                url: "190.gif",
                alt: "[情侣]"
            }, {
                url: "191.gif",
                alt: "[爱心]"
            }, {
                url: "192.gif",
                alt: "[蹦哒]"
            }, {
                url: "193.gif",
                alt: "[颤抖]"
            }, {
                url: "194.gif",
                alt: "[怄气]"
            }, {
                url: "195.gif",
                alt: "[跳舞]"
            } ], [ {
                url: "196.gif",
                alt: "[发呆]"
            }, {
                url: "197.gif",
                alt: "[背着]"
            }, {
                url: "198.gif",
                alt: "[伸手]"
            }, {
                url: "199.gif",
                alt: "[耍帅]"
            }, {
                url: "200.png",
                alt: "[微笑]"
            }, {
                url: "201.png",
                alt: "[生病]"
            }, {
                url: "202.png",
                alt: "[哭泣]"
            }, {
                url: "203.png",
                alt: "[吐舌]"
            }, {
                url: "204.png",
                alt: "[迷糊]"
            }, {
                url: "205.png",
                alt: "[瞪眼]"
            }, {
                url: "206.png",
                alt: "[恐怖]"
            }, {
                url: "207.png",
                alt: "[忧愁]"
            }, {
                url: "208.png",
                alt: "[眨眉]"
            }, {
                url: "209.png",
                alt: "[闭眼]"
            }, {
                url: "210.png",
                alt: "[鄙视]"
            }, {
                url: "211.png",
                alt: "[阴暗]"
            }, {
                url: "212.png",
                alt: "[小鬼]"
            }, {
                url: "213.png",
                alt: "[礼物]"
            }, {
                url: "214.png",
                alt: "[拜佛]"
            }, {
                url: "215.png",
                alt: "[力量]"
            }, {
                url: "216.png",
                alt: "[金钱]"
            }, {
                url: "217.png",
                alt: "[蛋糕]"
            }, {
                url: "218.png",
                alt: "[彩带]"
            }, {
                url: "219.png",
                alt: "[礼物]"
            } ] ],
            dateTimeFliter: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], r = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3], o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "-", i = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : ":", a = arguments.length > 6 && void 0 !== arguments[6] && arguments[6], s = e.getFullYear(), c = e.getMonth() + 1, u = e.getDate(), l = e.getHours(), p = e.getMinutes(), h = e.getSeconds(), f = "", d = "";
                return n && (c < 10 && (c = "0" + c), u < 10 && (u = "0" + u)), f = s + o + c + o + u, 
                a && (l > 12 ? (l -= 12, r && (l = l < 10 ? "下午 0" + l : "下午 " + l)) : r && (l = l < 10 ? "上午 0" + l : "上午 " + l)), 
                r && (p < 10 && (p = "0" + p), h < 10 && (h = "0" + h)), d = l + i + p + i + h, 
                0 == t ? f + " " + d : 1 == t ? f : 2 == t ? d : "传参有误";
            }
        }, o = r;
        t.default = o;
    },
    "2afc": function(e, t) {
        e.exports = {
            APIHOST: "https://api.yaohaodashi.com/v1.0/"
        };
    },
    "2f62": function(e, t, n) {
        "use strict";
        n.r(t), function(e) {
            /*!
 * vuex v3.4.0
 * (c) 2020 Evan You
 * @license MIT
 */
            function r(e) {
                var t = Number(e.version.split(".")[0]);
                if (t >= 2) e.mixin({
                    beforeCreate: r
                }); else {
                    var n = e.prototype._init;
                    e.prototype._init = function(e) {
                        void 0 === e && (e = {}), e.init = e.init ? [ r ].concat(e.init) : r, n.call(this, e);
                    };
                }
                function r() {
                    var e = this.$options;
                    e.store ? this.$store = "function" === typeof e.store ? e.store() : e.store : e.parent && e.parent.$store && (this.$store = e.parent.$store);
                }
            }
            n.d(t, "Store", function() {
                return m;
            }), n.d(t, "createNamespacedHelpers", function() {
                return P;
            }), n.d(t, "install", function() {
                return D;
            }), n.d(t, "mapActions", function() {
                return R;
            }), n.d(t, "mapGetters", function() {
                return L;
            }), n.d(t, "mapMutations", function() {
                return O;
            }), n.d(t, "mapState", function() {
                return k;
            });
            var o = "undefined" !== typeof window ? window : "undefined" !== typeof e ? e : {}, i = o.__VUE_DEVTOOLS_GLOBAL_HOOK__;
            function a(e) {
                i && (e._devtoolHook = i, i.emit("vuex:init", e), i.on("vuex:travel-to-state", function(t) {
                    e.replaceState(t);
                }), e.subscribe(function(e, t) {
                    i.emit("vuex:mutation", e, t);
                }, {
                    prepend: !0
                }), e.subscribeAction(function(e, t) {
                    i.emit("vuex:action", e, t);
                }, {
                    prepend: !0
                }));
            }
            function s(e, t) {
                Object.keys(e).forEach(function(n) {
                    return t(e[n], n);
                });
            }
            function c(e) {
                return null !== e && "object" === typeof e;
            }
            function u(e) {
                return e && "function" === typeof e.then;
            }
            function l(e, t) {
                return function() {
                    return e(t);
                };
            }
            var p = function(e, t) {
                this.runtime = t, this._children = Object.create(null), this._rawModule = e;
                var n = e.state;
                this.state = ("function" === typeof n ? n() : n) || {};
            }, h = {
                namespaced: {
                    configurable: !0
                }
            };
            h.namespaced.get = function() {
                return !!this._rawModule.namespaced;
            }, p.prototype.addChild = function(e, t) {
                this._children[e] = t;
            }, p.prototype.removeChild = function(e) {
                delete this._children[e];
            }, p.prototype.getChild = function(e) {
                return this._children[e];
            }, p.prototype.hasChild = function(e) {
                return e in this._children;
            }, p.prototype.update = function(e) {
                this._rawModule.namespaced = e.namespaced, e.actions && (this._rawModule.actions = e.actions), 
                e.mutations && (this._rawModule.mutations = e.mutations), e.getters && (this._rawModule.getters = e.getters);
            }, p.prototype.forEachChild = function(e) {
                s(this._children, e);
            }, p.prototype.forEachGetter = function(e) {
                this._rawModule.getters && s(this._rawModule.getters, e);
            }, p.prototype.forEachAction = function(e) {
                this._rawModule.actions && s(this._rawModule.actions, e);
            }, p.prototype.forEachMutation = function(e) {
                this._rawModule.mutations && s(this._rawModule.mutations, e);
            }, Object.defineProperties(p.prototype, h);
            var f = function(e) {
                this.register([], e, !1);
            };
            function d(e, t, n) {
                if (t.update(n), n.modules) for (var r in n.modules) {
                    if (!t.getChild(r)) return void 0;
                    d(e.concat(r), t.getChild(r), n.modules[r]);
                }
            }
            f.prototype.get = function(e) {
                return e.reduce(function(e, t) {
                    return e.getChild(t);
                }, this.root);
            }, f.prototype.getNamespace = function(e) {
                var t = this.root;
                return e.reduce(function(e, n) {
                    return t = t.getChild(n), e + (t.namespaced ? n + "/" : "");
                }, "");
            }, f.prototype.update = function(e) {
                d([], this.root, e);
            }, f.prototype.register = function(e, t, n) {
                var r = this;
                void 0 === n && (n = !0);
                var o = new p(t, n);
                if (0 === e.length) this.root = o; else {
                    var i = this.get(e.slice(0, -1));
                    i.addChild(e[e.length - 1], o);
                }
                t.modules && s(t.modules, function(t, o) {
                    r.register(e.concat(o), t, n);
                });
            }, f.prototype.unregister = function(e) {
                var t = this.get(e.slice(0, -1)), n = e[e.length - 1];
                t.getChild(n).runtime && t.removeChild(n);
            }, f.prototype.isRegistered = function(e) {
                var t = this.get(e.slice(0, -1)), n = e[e.length - 1];
                return t.hasChild(n);
            };
            var g;
            var m = function(e) {
                var t = this;
                void 0 === e && (e = {}), !g && "undefined" !== typeof window && window.Vue && D(window.Vue);
                var n = e.plugins;
                void 0 === n && (n = []);
                var r = e.strict;
                void 0 === r && (r = !1), this._committing = !1, this._actions = Object.create(null), 
                this._actionSubscribers = [], this._mutations = Object.create(null), this._wrappedGetters = Object.create(null), 
                this._modules = new f(e), this._modulesNamespaceMap = Object.create(null), this._subscribers = [], 
                this._watcherVM = new g(), this._makeLocalGettersCache = Object.create(null);
                var o = this, i = this, s = i.dispatch, c = i.commit;
                this.dispatch = function(e, t) {
                    return s.call(o, e, t);
                }, this.commit = function(e, t, n) {
                    return c.call(o, e, t, n);
                }, this.strict = r;
                var u = this._modules.root.state;
                I(this, u, [], this._modules.root), S(this, u), n.forEach(function(e) {
                    return e(t);
                });
                var l = void 0 !== e.devtools ? e.devtools : g.config.devtools;
                l && a(this);
            }, v = {
                state: {
                    configurable: !0
                }
            };
            function y(e, t, n) {
                return t.indexOf(e) < 0 && (n && n.prepend ? t.unshift(e) : t.push(e)), function() {
                    var n = t.indexOf(e);
                    n > -1 && t.splice(n, 1);
                };
            }
            function _(e, t) {
                e._actions = Object.create(null), e._mutations = Object.create(null), e._wrappedGetters = Object.create(null), 
                e._modulesNamespaceMap = Object.create(null);
                var n = e.state;
                I(e, n, [], e._modules.root, !0), S(e, n, t);
            }
            function S(e, t, n) {
                var r = e._vm;
                e.getters = {}, e._makeLocalGettersCache = Object.create(null);
                var o = e._wrappedGetters, i = {};
                s(o, function(t, n) {
                    i[n] = l(t, e), Object.defineProperty(e.getters, n, {
                        get: function() {
                            return e._vm[n];
                        },
                        enumerable: !0
                    });
                });
                var a = g.config.silent;
                g.config.silent = !0, e._vm = new g({
                    data: {
                        $$state: t
                    },
                    computed: i
                }), g.config.silent = a, e.strict && b(e), r && (n && e._withCommit(function() {
                    r._data.$$state = null;
                }), g.nextTick(function() {
                    return r.$destroy();
                }));
            }
            function I(e, t, n, r, o) {
                var i = !n.length, a = e._modules.getNamespace(n);
                if (r.namespaced && (e._modulesNamespaceMap[a], e._modulesNamespaceMap[a] = r), 
                !i && !o) {
                    var s = x(t, n.slice(0, -1)), c = n[n.length - 1];
                    e._withCommit(function() {
                        g.set(s, c, r.state);
                    });
                }
                var u = r.context = M(e, a, n);
                r.forEachMutation(function(t, n) {
                    var r = a + n;
                    T(e, r, t, u);
                }), r.forEachAction(function(t, n) {
                    var r = t.root ? n : a + n, o = t.handler || t;
                    E(e, r, o, u);
                }), r.forEachGetter(function(t, n) {
                    var r = a + n;
                    A(e, r, t, u);
                }), r.forEachChild(function(r, i) {
                    I(e, t, n.concat(i), r, o);
                });
            }
            function M(e, t, n) {
                var r = "" === t, o = {
                    dispatch: r ? e.dispatch : function(n, r, o) {
                        var i = w(n, r, o), a = i.payload, s = i.options, c = i.type;
                        return s && s.root || (c = t + c), e.dispatch(c, a);
                    },
                    commit: r ? e.commit : function(n, r, o) {
                        var i = w(n, r, o), a = i.payload, s = i.options, c = i.type;
                        s && s.root || (c = t + c), e.commit(c, a, s);
                    }
                };
                return Object.defineProperties(o, {
                    getters: {
                        get: r ? function() {
                            return e.getters;
                        } : function() {
                            return C(e, t);
                        }
                    },
                    state: {
                        get: function() {
                            return x(e.state, n);
                        }
                    }
                }), o;
            }
            function C(e, t) {
                if (!e._makeLocalGettersCache[t]) {
                    var n = {}, r = t.length;
                    Object.keys(e.getters).forEach(function(o) {
                        if (o.slice(0, r) === t) {
                            var i = o.slice(r);
                            Object.defineProperty(n, i, {
                                get: function() {
                                    return e.getters[o];
                                },
                                enumerable: !0
                            });
                        }
                    }), e._makeLocalGettersCache[t] = n;
                }
                return e._makeLocalGettersCache[t];
            }
            function T(e, t, n, r) {
                var o = e._mutations[t] || (e._mutations[t] = []);
                o.push(function(t) {
                    n.call(e, r.state, t);
                });
            }
            function E(e, t, n, r) {
                var o = e._actions[t] || (e._actions[t] = []);
                o.push(function(t) {
                    var o = n.call(e, {
                        dispatch: r.dispatch,
                        commit: r.commit,
                        getters: r.getters,
                        state: r.state,
                        rootGetters: e.getters,
                        rootState: e.state
                    }, t);
                    return u(o) || (o = Promise.resolve(o)), e._devtoolHook ? o.catch(function(t) {
                        throw e._devtoolHook.emit("vuex:error", t), t;
                    }) : o;
                });
            }
            function A(e, t, n, r) {
                e._wrappedGetters[t] || (e._wrappedGetters[t] = function(e) {
                    return n(r.state, r.getters, e.state, e.getters);
                });
            }
            function b(e) {
                e._vm.$watch(function() {
                    return this._data.$$state;
                }, function() {
                    0;
                }, {
                    deep: !0,
                    sync: !0
                });
            }
            function x(e, t) {
                return t.reduce(function(e, t) {
                    return e[t];
                }, e);
            }
            function w(e, t, n) {
                return c(e) && e.type && (n = t, t = e, e = e.type), {
                    type: e,
                    payload: t,
                    options: n
                };
            }
            function D(e) {
                g && e === g || (g = e, r(g));
            }
            v.state.get = function() {
                return this._vm._data.$$state;
            }, v.state.set = function(e) {
                0;
            }, m.prototype.commit = function(e, t, n) {
                var r = this, o = w(e, t, n), i = o.type, a = o.payload, s = (o.options, {
                    type: i,
                    payload: a
                }), c = this._mutations[i];
                c && (this._withCommit(function() {
                    c.forEach(function(e) {
                        e(a);
                    });
                }), this._subscribers.slice().forEach(function(e) {
                    return e(s, r.state);
                }));
            }, m.prototype.dispatch = function(e, t) {
                var n = this, r = w(e, t), o = r.type, i = r.payload, a = {
                    type: o,
                    payload: i
                }, s = this._actions[o];
                if (s) {
                    try {
                        this._actionSubscribers.slice().filter(function(e) {
                            return e.before;
                        }).forEach(function(e) {
                            return e.before(a, n.state);
                        });
                    } catch (u) {
                        0;
                    }
                    var c = s.length > 1 ? Promise.all(s.map(function(e) {
                        return e(i);
                    })) : s[0](i);
                    return new Promise(function(e, t) {
                        c.then(function(t) {
                            try {
                                n._actionSubscribers.filter(function(e) {
                                    return e.after;
                                }).forEach(function(e) {
                                    return e.after(a, n.state);
                                });
                            } catch (u) {
                                0;
                            }
                            e(t);
                        }, function(e) {
                            try {
                                n._actionSubscribers.filter(function(e) {
                                    return e.error;
                                }).forEach(function(t) {
                                    return t.error(a, n.state, e);
                                });
                            } catch (u) {
                                0;
                            }
                            t(e);
                        });
                    });
                }
            }, m.prototype.subscribe = function(e, t) {
                return y(e, this._subscribers, t);
            }, m.prototype.subscribeAction = function(e, t) {
                var n = "function" === typeof e ? {
                    before: e
                } : e;
                return y(n, this._actionSubscribers, t);
            }, m.prototype.watch = function(e, t, n) {
                var r = this;
                return this._watcherVM.$watch(function() {
                    return e(r.state, r.getters);
                }, t, n);
            }, m.prototype.replaceState = function(e) {
                var t = this;
                this._withCommit(function() {
                    t._vm._data.$$state = e;
                });
            }, m.prototype.registerModule = function(e, t, n) {
                void 0 === n && (n = {}), "string" === typeof e && (e = [ e ]), this._modules.register(e, t), 
                I(this, this.state, e, this._modules.get(e), n.preserveState), S(this, this.state);
            }, m.prototype.unregisterModule = function(e) {
                var t = this;
                "string" === typeof e && (e = [ e ]), this._modules.unregister(e), this._withCommit(function() {
                    var n = x(t.state, e.slice(0, -1));
                    g.delete(n, e[e.length - 1]);
                }), _(this);
            }, m.prototype.hasModule = function(e) {
                return "string" === typeof e && (e = [ e ]), this._modules.isRegistered(e);
            }, m.prototype.hotUpdate = function(e) {
                this._modules.update(e), _(this, !0);
            }, m.prototype._withCommit = function(e) {
                var t = this._committing;
                this._committing = !0, e(), this._committing = t;
            }, Object.defineProperties(m.prototype, v);
            var k = F(function(e, t) {
                var n = {};
                return N(t).forEach(function(t) {
                    var r = t.key, o = t.val;
                    n[r] = function() {
                        var t = this.$store.state, n = this.$store.getters;
                        if (e) {
                            var r = U(this.$store, "mapState", e);
                            if (!r) return;
                            t = r.context.state, n = r.context.getters;
                        }
                        return "function" === typeof o ? o.call(this, t, n) : t[o];
                    }, n[r].vuex = !0;
                }), n;
            }), O = F(function(e, t) {
                var n = {};
                return N(t).forEach(function(t) {
                    var r = t.key, o = t.val;
                    n[r] = function() {
                        var t = [], n = arguments.length;
                        while (n--) t[n] = arguments[n];
                        var r = this.$store.commit;
                        if (e) {
                            var i = U(this.$store, "mapMutations", e);
                            if (!i) return;
                            r = i.context.commit;
                        }
                        return "function" === typeof o ? o.apply(this, [ r ].concat(t)) : r.apply(this.$store, [ o ].concat(t));
                    };
                }), n;
            }), L = F(function(e, t) {
                var n = {};
                return N(t).forEach(function(t) {
                    var r = t.key, o = t.val;
                    o = e + o, n[r] = function() {
                        if (!e || U(this.$store, "mapGetters", e)) return this.$store.getters[o];
                    }, n[r].vuex = !0;
                }), n;
            }), R = F(function(e, t) {
                var n = {};
                return N(t).forEach(function(t) {
                    var r = t.key, o = t.val;
                    n[r] = function() {
                        var t = [], n = arguments.length;
                        while (n--) t[n] = arguments[n];
                        var r = this.$store.dispatch;
                        if (e) {
                            var i = U(this.$store, "mapActions", e);
                            if (!i) return;
                            r = i.context.dispatch;
                        }
                        return "function" === typeof o ? o.apply(this, [ r ].concat(t)) : r.apply(this.$store, [ o ].concat(t));
                    };
                }), n;
            }), P = function(e) {
                return {
                    mapState: k.bind(null, e),
                    mapGetters: L.bind(null, e),
                    mapMutations: O.bind(null, e),
                    mapActions: R.bind(null, e)
                };
            };
            function N(e) {
                return G(e) ? Array.isArray(e) ? e.map(function(e) {
                    return {
                        key: e,
                        val: e
                    };
                }) : Object.keys(e).map(function(t) {
                    return {
                        key: t,
                        val: e[t]
                    };
                }) : [];
            }
            function G(e) {
                return Array.isArray(e) || c(e);
            }
            function F(e) {
                return function(t, n) {
                    return "string" !== typeof t ? (n = t, t = "") : "/" !== t.charAt(t.length - 1) && (t += "/"), 
                    e(t, n);
                };
            }
            function U(e, t, n) {
                var r = e._modulesNamespaceMap[n];
                return r;
            }
            var q = {
                Store: m,
                install: D,
                version: "3.4.0",
                mapState: k,
                mapMutations: O,
                mapGetters: L,
                mapActions: R,
                createNamespacedHelpers: P
            };
            t["default"] = q;
        }.call(this, n("c8ba"));
    },
    "4dbb": function(e, t, n) {},
    "543d": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.createApp = Lt, t.createComponent = Ht, t.createPage = Bt, t.createPlugin = zt, 
        t.createSubpackageApp = Kt, t.default = void 0;
        var r = o(n("66fd"));
        function o(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        function i(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable;
                })), n.push.apply(n, r);
            }
            return n;
        }
        function a(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? i(Object(n), !0).forEach(function(t) {
                    p(e, t, n[t]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : i(Object(n)).forEach(function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
                });
            }
            return e;
        }
        function s(e, t) {
            return l(e) || u(e, t) || d(e, t) || c();
        }
        function c() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function u(e, t) {
            if ("undefined" !== typeof Symbol && Symbol.iterator in Object(e)) {
                var n = [], r = !0, o = !1, i = void 0;
                try {
                    for (var a, s = e[Symbol.iterator](); !(r = (a = s.next()).done); r = !0) if (n.push(a.value), 
                    t && n.length === t) break;
                } catch (c) {
                    o = !0, i = c;
                } finally {
                    try {
                        r || null == s["return"] || s["return"]();
                    } finally {
                        if (o) throw i;
                    }
                }
                return n;
            }
        }
        function l(e) {
            if (Array.isArray(e)) return e;
        }
        function p(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n, e;
        }
        function h(e) {
            return m(e) || g(e) || d(e) || f();
        }
        function f() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function d(e, t) {
            if (e) {
                if ("string" === typeof e) return v(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? v(e, t) : void 0;
            }
        }
        function g(e) {
            if ("undefined" !== typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);
        }
        function m(e) {
            if (Array.isArray(e)) return v(e);
        }
        function v(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r;
        }
        var y = Object.prototype.toString, _ = Object.prototype.hasOwnProperty;
        function S(e) {
            return "function" === typeof e;
        }
        function I(e) {
            return "string" === typeof e;
        }
        function M(e) {
            return "[object Object]" === y.call(e);
        }
        function C(e, t) {
            return _.call(e, t);
        }
        function T() {}
        function E(e) {
            var t = Object.create(null);
            return function(n) {
                var r = t[n];
                return r || (t[n] = e(n));
            };
        }
        var A = /-(\w)/g, b = E(function(e) {
            return e.replace(A, function(e, t) {
                return t ? t.toUpperCase() : "";
            });
        }), x = [ "invoke", "success", "fail", "complete", "returnValue" ], w = {}, D = {};
        function k(e, t) {
            var n = t ? e ? e.concat(t) : Array.isArray(t) ? t : [ t ] : e;
            return n ? O(n) : n;
        }
        function O(e) {
            for (var t = [], n = 0; n < e.length; n++) -1 === t.indexOf(e[n]) && t.push(e[n]);
            return t;
        }
        function L(e, t) {
            var n = e.indexOf(t);
            -1 !== n && e.splice(n, 1);
        }
        function R(e, t) {
            Object.keys(t).forEach(function(n) {
                -1 !== x.indexOf(n) && S(t[n]) && (e[n] = k(e[n], t[n]));
            });
        }
        function P(e, t) {
            e && t && Object.keys(t).forEach(function(n) {
                -1 !== x.indexOf(n) && S(t[n]) && L(e[n], t[n]);
            });
        }
        function N(e, t) {
            "string" === typeof e && M(t) ? R(D[e] || (D[e] = {}), t) : M(e) && R(w, e);
        }
        function G(e, t) {
            "string" === typeof e ? M(t) ? P(D[e], t) : delete D[e] : M(e) && P(w, e);
        }
        function F(e) {
            return function(t) {
                return e(t) || t;
            };
        }
        function U(e) {
            return !!e && ("object" === typeof e || "function" === typeof e) && "function" === typeof e.then;
        }
        function q(e, t) {
            for (var n = !1, r = 0; r < e.length; r++) {
                var o = e[r];
                if (n) n = Promise.resolve(F(o)); else {
                    var i = o(t);
                    if (U(i) && (n = Promise.resolve(i)), !1 === i) return {
                        then: function() {}
                    };
                }
            }
            return n || {
                then: function(e) {
                    return e(t);
                }
            };
        }
        function j(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            return [ "success", "fail", "complete" ].forEach(function(n) {
                if (Array.isArray(e[n])) {
                    var r = t[n];
                    t[n] = function(t) {
                        q(e[n], t).then(function(e) {
                            return S(r) && r(e) || e;
                        });
                    };
                }
            }), t;
        }
        function $(e, t) {
            var n = [];
            Array.isArray(w.returnValue) && n.push.apply(n, h(w.returnValue));
            var r = D[e];
            return r && Array.isArray(r.returnValue) && n.push.apply(n, h(r.returnValue)), n.forEach(function(e) {
                t = e(t) || t;
            }), t;
        }
        function V(e) {
            var t = Object.create(null);
            Object.keys(w).forEach(function(e) {
                "returnValue" !== e && (t[e] = w[e].slice());
            });
            var n = D[e];
            return n && Object.keys(n).forEach(function(e) {
                "returnValue" !== e && (t[e] = (t[e] || []).concat(n[e]));
            }), t;
        }
        function B(e, t, n) {
            for (var r = arguments.length, o = new Array(r > 3 ? r - 3 : 0), i = 3; i < r; i++) o[i - 3] = arguments[i];
            var a = V(e);
            if (a && Object.keys(a).length) {
                if (Array.isArray(a.invoke)) {
                    var s = q(a.invoke, n);
                    return s.then(function(e) {
                        return t.apply(void 0, [ j(a, e) ].concat(o));
                    });
                }
                return t.apply(void 0, [ j(a, n) ].concat(o));
            }
            return t.apply(void 0, [ n ].concat(o));
        }
        var H = {
            returnValue: function(e) {
                return U(e) ? e.then(function(e) {
                    return e[1];
                }).catch(function(e) {
                    return e[0];
                }) : e;
            }
        }, K = /^\$|Window$|WindowStyle$|sendNativeEvent|restoreGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64/, z = /^create|Manager$/, W = [ "createBLEConnection" ], Y = [ "createBLEConnection" ], J = /^on|^off/;
        function X(e) {
            return z.test(e) && -1 === W.indexOf(e);
        }
        function Q(e) {
            return K.test(e) && -1 === Y.indexOf(e);
        }
        function Z(e) {
            return J.test(e) && "onPush" !== e;
        }
        function ee(e) {
            return e.then(function(e) {
                return [ null, e ];
            }).catch(function(e) {
                return [ e ];
            });
        }
        function te(e) {
            return !(X(e) || Q(e) || Z(e));
        }
        function ne(e, t) {
            return te(e) ? function() {
                for (var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, r = arguments.length, o = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++) o[i - 1] = arguments[i];
                return S(n.success) || S(n.fail) || S(n.complete) ? $(e, B.apply(void 0, [ e, t, n ].concat(o))) : $(e, ee(new Promise(function(r, i) {
                    B.apply(void 0, [ e, t, Object.assign({}, n, {
                        success: r,
                        fail: i
                    }) ].concat(o));
                })));
            } : t;
        }
        Promise.prototype.finally || (Promise.prototype.finally = function(e) {
            var t = this.constructor;
            return this.then(function(n) {
                return t.resolve(e()).then(function() {
                    return n;
                });
            }, function(n) {
                return t.resolve(e()).then(function() {
                    throw n;
                });
            });
        });
        var re = 1e-4, oe = 750, ie = !1, ae = 0, se = 0;
        function ce() {
            var e = wx.getSystemInfoSync(), t = e.platform, n = e.pixelRatio, r = e.windowWidth;
            ae = r, se = n, ie = "ios" === t;
        }
        function ue(e, t) {
            if (0 === ae && ce(), e = Number(e), 0 === e) return 0;
            var n = e / oe * (t || ae);
            return n < 0 && (n = -n), n = Math.floor(n + re), 0 === n && (n = 1 !== se && ie ? .5 : 1), 
            e < 0 ? -n : n;
        }
        var le = {
            promiseInterceptor: H
        }, pe = Object.freeze({
            __proto__: null,
            upx2px: ue,
            addInterceptor: N,
            removeInterceptor: G,
            interceptors: le
        });
        function he(e) {
            var t = getCurrentPages(), n = t.length;
            while (n--) {
                var r = t[n];
                if (r.$page && r.$page.fullPath === e) return n;
            }
            return -1;
        }
        var fe, de = {
            name: function(e) {
                return "back" === e.exists && e.delta ? "navigateBack" : "redirectTo";
            },
            args: function(e) {
                if ("back" === e.exists && e.url) {
                    var t = he(e.url);
                    if (-1 !== t) {
                        var n = getCurrentPages().length - 1 - t;
                        n > 0 && (e.delta = n);
                    }
                }
            }
        }, ge = {
            args: function(e) {
                var t = parseInt(e.current);
                if (!isNaN(t)) {
                    var n = e.urls;
                    if (Array.isArray(n)) {
                        var r = n.length;
                        if (r) return t < 0 ? t = 0 : t >= r && (t = r - 1), t > 0 ? (e.current = n[t], 
                        e.urls = n.filter(function(e, r) {
                            return !(r < t) || e !== n[t];
                        })) : e.current = n[0], {
                            indicator: !1,
                            loop: !1
                        };
                    }
                }
            }
        }, me = "__DC_STAT_UUID";
        function ve(e) {
            fe = fe || wx.getStorageSync(me), fe || (fe = Date.now() + "" + Math.floor(1e7 * Math.random()), 
            wx.setStorage({
                key: me,
                data: fe
            })), e.deviceId = fe;
        }
        function ye(e) {
            if (e.safeArea) {
                var t = e.safeArea;
                e.safeAreaInsets = {
                    top: t.top,
                    left: t.left,
                    right: e.windowWidth - t.right,
                    bottom: e.windowHeight - t.bottom
                };
            }
        }
        var _e = {
            returnValue: function(e) {
                ve(e), ye(e);
            }
        }, Se = {
            redirectTo: de,
            previewImage: ge,
            getSystemInfo: _e,
            getSystemInfoSync: _e
        }, Ie = [ "vibrate", "preloadPage", "unPreloadPage", "loadSubPackage" ], Me = [], Ce = [ "success", "fail", "cancel", "complete" ];
        function Te(e, t, n) {
            return function(r) {
                return t(Ae(e, r, n));
            };
        }
        function Ee(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}, o = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
            if (M(t)) {
                var i = !0 === o ? t : {};
                for (var a in S(n) && (n = n(t, i) || {}), t) if (C(n, a)) {
                    var s = n[a];
                    S(s) && (s = s(t[a], t, i)), s ? I(s) ? i[s] = t[a] : M(s) && (i[s.name ? s.name : a] = s.value) : console.warn("The '".concat(e, "' method of platform '微信小程序' does not support option '").concat(a, "'"));
                } else -1 !== Ce.indexOf(a) ? S(t[a]) && (i[a] = Te(e, t[a], r)) : o || (i[a] = t[a]);
                return i;
            }
            return S(t) && (t = Te(e, t, r)), t;
        }
        function Ae(e, t, n) {
            var r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
            return S(Se.returnValue) && (t = Se.returnValue(e, t)), Ee(e, t, n, {}, r);
        }
        function be(e, t) {
            if (C(Se, e)) {
                var n = Se[e];
                return n ? function(t, r) {
                    var o = n;
                    S(n) && (o = n(t)), t = Ee(e, t, o.args, o.returnValue);
                    var i = [ t ];
                    "undefined" !== typeof r && i.push(r), S(o.name) ? e = o.name(t) : I(o.name) && (e = o.name);
                    var a = wx[e].apply(wx, i);
                    return Q(e) ? Ae(e, a, o.returnValue, X(e)) : a;
                } : function() {
                    console.error("Platform '微信小程序' does not support '".concat(e, "'."));
                };
            }
            return t;
        }
        var xe = Object.create(null), we = [ "onTabBarMidButtonTap", "subscribePush", "unsubscribePush", "onPush", "offPush", "share" ];
        function De(e) {
            return function(t) {
                var n = t.fail, r = t.complete, o = {
                    errMsg: "".concat(e, ":fail method '").concat(e, "' not supported")
                };
                S(n) && n(o), S(r) && r(o);
            };
        }
        we.forEach(function(e) {
            xe[e] = De(e);
        });
        var ke = {
            oauth: [ "weixin" ],
            share: [ "weixin" ],
            payment: [ "wxpay" ],
            push: [ "weixin" ]
        };
        function Oe(e) {
            var t = e.service, n = e.success, r = e.fail, o = e.complete, i = !1;
            ke[t] ? (i = {
                errMsg: "getProvider:ok",
                service: t,
                provider: ke[t]
            }, S(n) && n(i)) : (i = {
                errMsg: "getProvider:fail service not found"
            }, S(r) && r(i)), S(o) && o(i);
        }
        var Le = Object.freeze({
            __proto__: null,
            getProvider: Oe
        }), Re = function() {
            var e;
            return function() {
                return e || (e = new r.default()), e;
            };
        }();
        function Pe(e, t, n) {
            return e[t].apply(e, n);
        }
        function Ne() {
            return Pe(Re(), "$on", Array.prototype.slice.call(arguments));
        }
        function Ge() {
            return Pe(Re(), "$off", Array.prototype.slice.call(arguments));
        }
        function Fe() {
            return Pe(Re(), "$once", Array.prototype.slice.call(arguments));
        }
        function Ue() {
            return Pe(Re(), "$emit", Array.prototype.slice.call(arguments));
        }
        var qe = Object.freeze({
            __proto__: null,
            $on: Ne,
            $off: Ge,
            $once: Fe,
            $emit: Ue
        }), je = Object.freeze({
            __proto__: null
        }), $e = Page, Ve = Component, Be = /:/g, He = E(function(e) {
            return b(e.replace(Be, "-"));
        });
        function Ke(e) {
            if (wx.canIUse && wx.canIUse("nextTick")) {
                var t = e.triggerEvent;
                e.triggerEvent = function(n) {
                    for (var r = arguments.length, o = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++) o[i - 1] = arguments[i];
                    return t.apply(e, [ He(n) ].concat(o));
                };
            }
        }
        function ze(e, t) {
            var n = t[e];
            t[e] = n ? function() {
                Ke(this);
                for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];
                return n.apply(this, t);
            } : function() {
                Ke(this);
            };
        }
        $e.__$wrappered || ($e.__$wrappered = !0, Page = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            return ze("onLoad", e), $e(e);
        }, Page.after = $e.after, Component = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            return ze("created", e), Ve(e);
        });
        var We = [ "onPullDownRefresh", "onReachBottom", "onAddToFavorites", "onShareTimeline", "onShareAppMessage", "onPageScroll", "onResize", "onTabItemTap" ];
        function Ye(e, t) {
            var n = e.$mp[e.mpType];
            t.forEach(function(t) {
                C(n, t) && (e[t] = n[t]);
            });
        }
        function Je(e, t) {
            if (!t) return !0;
            if (r.default.options && Array.isArray(r.default.options[e])) return !0;
            if (t = t.default || t, S(t)) return !!S(t.extendOptions[e]) || !!(t.super && t.super.options && Array.isArray(t.super.options[e]));
            if (S(t[e])) return !0;
            var n = t.mixins;
            return Array.isArray(n) ? !!n.find(function(t) {
                return Je(e, t);
            }) : void 0;
        }
        function Xe(e, t, n) {
            t.forEach(function(t) {
                Je(t, n) && (e[t] = function(e) {
                    return this.$vm && this.$vm.__call_hook(t, e);
                });
            });
        }
        function Qe(e, t) {
            var n;
            return t = t.default || t, n = S(t) ? t : e.extend(t), t = n.options, [ n, t ];
        }
        function Ze(e, t) {
            if (Array.isArray(t) && t.length) {
                var n = Object.create(null);
                t.forEach(function(e) {
                    n[e] = !0;
                }), e.$scopedSlots = e.$slots = n;
            }
        }
        function et(e, t) {
            e = (e || "").split(",");
            var n = e.length;
            1 === n ? t._$vueId = e[0] : 2 === n && (t._$vueId = e[0], t._$vuePid = e[1]);
        }
        function tt(e, t) {
            var n = e.data || {}, r = e.methods || {};
            if ("function" === typeof n) try {
                n = n.call(t);
            } catch (o) {
                Object({
                    VUE_APP_NAME: "lottery",
                    VUE_APP_PLATFORM: "mp-weixin",
                    NODE_ENV: "production",
                    BASE_URL: "/"
                }).VUE_APP_DEBUG && console.warn("根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。", n);
            } else try {
                n = JSON.parse(JSON.stringify(n));
            } catch (o) {}
            return M(n) || (n = {}), Object.keys(r).forEach(function(e) {
                -1 !== t.__lifecycle_hooks__.indexOf(e) || C(n, e) || (n[e] = r[e]);
            }), n;
        }
        var nt = [ String, Number, Boolean, Object, Array, null ];
        function rt(e) {
            return function(t, n) {
                this.$vm && (this.$vm[e] = t);
            };
        }
        function ot(e, t) {
            var n = e.behaviors, r = e.extends, o = e.mixins, i = e.props;
            i || (e.props = i = []);
            var a = [];
            return Array.isArray(n) && n.forEach(function(e) {
                a.push(e.replace("uni://", "wx".concat("://"))), "uni://form-field" === e && (Array.isArray(i) ? (i.push("name"), 
                i.push("value")) : (i.name = {
                    type: String,
                    default: ""
                }, i.value = {
                    type: [ String, Number, Boolean, Array, Object, Date ],
                    default: ""
                }));
            }), M(r) && r.props && a.push(t({
                properties: at(r.props, !0)
            })), Array.isArray(o) && o.forEach(function(e) {
                M(e) && e.props && a.push(t({
                    properties: at(e.props, !0)
                }));
            }), a;
        }
        function it(e, t, n, r) {
            return Array.isArray(t) && 1 === t.length ? t[0] : t;
        }
        function at(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], n = {};
            return t || (n.vueId = {
                type: String,
                value: ""
            }, n.generic = {
                type: Object,
                value: null
            }, n.vueSlots = {
                type: null,
                value: [],
                observer: function(e, t) {
                    var n = Object.create(null);
                    e.forEach(function(e) {
                        n[e] = !0;
                    }), this.setData({
                        $slots: n
                    });
                }
            }), Array.isArray(e) ? e.forEach(function(e) {
                n[e] = {
                    type: null,
                    observer: rt(e)
                };
            }) : M(e) && Object.keys(e).forEach(function(t) {
                var r = e[t];
                if (M(r)) {
                    var o = r.default;
                    S(o) && (o = o()), r.type = it(t, r.type), n[t] = {
                        type: -1 !== nt.indexOf(r.type) ? r.type : null,
                        value: o,
                        observer: rt(t)
                    };
                } else {
                    var i = it(t, r);
                    n[t] = {
                        type: -1 !== nt.indexOf(i) ? i : null,
                        observer: rt(t)
                    };
                }
            }), n;
        }
        function st(e) {
            try {
                e.mp = JSON.parse(JSON.stringify(e));
            } catch (t) {}
            return e.stopPropagation = T, e.preventDefault = T, e.target = e.target || {}, C(e, "detail") || (e.detail = {}), 
            C(e, "markerId") && (e.detail = "object" === typeof e.detail ? e.detail : {}, e.detail.markerId = e.markerId), 
            M(e.detail) && (e.target = Object.assign({}, e.target, e.detail)), e;
        }
        function ct(e, t) {
            var n = e;
            return t.forEach(function(t) {
                var r = t[0], o = t[2];
                if (r || "undefined" !== typeof o) {
                    var i, a = t[1], s = t[3];
                    Number.isInteger(r) ? i = r : r ? "string" === typeof r && r && (i = 0 === r.indexOf("#s#") ? r.substr(3) : e.__get_value(r, n)) : i = n, 
                    Number.isInteger(i) ? n = o : a ? Array.isArray(i) ? n = i.find(function(t) {
                        return e.__get_value(a, t) === o;
                    }) : M(i) ? n = Object.keys(i).find(function(t) {
                        return e.__get_value(a, i[t]) === o;
                    }) : console.error("v-for 暂不支持循环数据：", i) : n = i[o], s && (n = e.__get_value(s, n));
                }
            }), n;
        }
        function ut(e, t, n) {
            var r = {};
            return Array.isArray(t) && t.length && t.forEach(function(t, o) {
                "string" === typeof t ? t ? "$event" === t ? r["$" + o] = n : "arguments" === t ? n.detail && n.detail.__args__ ? r["$" + o] = n.detail.__args__ : r["$" + o] = [ n ] : 0 === t.indexOf("$event.") ? r["$" + o] = e.__get_value(t.replace("$event.", ""), n) : r["$" + o] = e.__get_value(t) : r["$" + o] = e : r["$" + o] = ct(e, t);
            }), r;
        }
        function lt(e) {
            for (var t = {}, n = 1; n < e.length; n++) {
                var r = e[n];
                t[r[0]] = r[1];
            }
            return t;
        }
        function pt(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [], r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [], o = arguments.length > 4 ? arguments[4] : void 0, i = arguments.length > 5 ? arguments[5] : void 0, a = !1;
            if (o && (a = t.currentTarget && t.currentTarget.dataset && "wx" === t.currentTarget.dataset.comType, 
            !n.length)) return a ? [ t ] : t.detail.__args__ || t.detail;
            var s = ut(e, r, t), c = [];
            return n.forEach(function(e) {
                "$event" === e ? "__set_model" !== i || o ? o && !a ? c.push(t.detail.__args__[0]) : c.push(t) : c.push(t.target.value) : Array.isArray(e) && "o" === e[0] ? c.push(lt(e)) : "string" === typeof e && C(s, e) ? c.push(s[e]) : c.push(e);
            }), c;
        }
        var ht = "~", ft = "^";
        function dt(e, t) {
            return e === t || "regionchange" === t && ("begin" === e || "end" === e);
        }
        function gt(e) {
            var t = e.$parent;
            while (t && t.$parent && (t.$options.generic || t.$parent.$options.generic || t.$scope._$vuePid)) t = t.$parent;
            return t && t.$parent;
        }
        function mt(e) {
            var t = this;
            e = st(e);
            var n = (e.currentTarget || e.target).dataset;
            if (!n) return console.warn("事件信息不存在");
            var r = n.eventOpts || n["event-opts"];
            if (!r) return console.warn("事件信息不存在");
            var o = e.type, i = [];
            return r.forEach(function(n) {
                var r = n[0], a = n[1], s = r.charAt(0) === ft;
                r = s ? r.slice(1) : r;
                var c = r.charAt(0) === ht;
                r = c ? r.slice(1) : r, a && dt(o, r) && a.forEach(function(n) {
                    var r = n[0];
                    if (r) {
                        var o = t.$vm;
                        if (o.$options.generic && (o = gt(o) || o), "$emit" === r) return void o.$emit.apply(o, pt(t.$vm, e, n[1], n[2], s, r));
                        var a = o[r];
                        if (!S(a)) throw new Error(" _vm.".concat(r, " is not a function"));
                        if (c) {
                            if (a.once) return;
                            a.once = !0;
                        }
                        var u = pt(t.$vm, e, n[1], n[2], s, r);
                        u = Array.isArray(u) ? u : [], /=\s*\S+\.eventParams\s*\|\|\s*\S+\[['"]event-params['"]\]/.test(a.toString()) && (u = u.concat([ , , , , , , , , , , e ])), 
                        i.push(a.apply(o, u));
                    }
                });
            }), "input" === o && 1 === i.length && "undefined" !== typeof i[0] ? i[0] : void 0;
        }
        var vt = {}, yt = [];
        function _t(e) {
            if (e) {
                var t = vt[e];
                return delete vt[e], t;
            }
            return yt.shift();
        }
        var St = [ "onShow", "onHide", "onError", "onPageNotFound", "onThemeChange", "onUnhandledRejection" ];
        function It() {
            r.default.prototype.getOpenerEventChannel = function() {
                return this.$scope.getOpenerEventChannel();
            };
            var e = r.default.prototype.__call_hook;
            r.default.prototype.__call_hook = function(t, n) {
                return "onLoad" === t && n && n.__id__ && (this.__eventChannel__ = _t(n.__id__), 
                delete n.__id__), e.call(this, t, n);
            };
        }
        function Mt() {
            var e = {}, t = {};
            r.default.prototype.$hasScopedSlotsParams = function(n) {
                var r = e[n];
                return r || (t[n] = this, this.$on("hook:destory", function() {
                    delete t[n];
                })), r;
            }, r.default.prototype.$getScopedSlotsParams = function(n, r, o) {
                var i = e[n];
                if (i) {
                    var a = i[r] || {};
                    return o ? a[o] : a;
                }
                t[n] = this, this.$on("hook:destory", function() {
                    delete t[n];
                });
            }, r.default.prototype.$setScopedSlotsParams = function(n, r) {
                var o = this.$options.propsData.vueId, i = e[o] = e[o] || {};
                i[n] = r, t[o] && t[o].$forceUpdate();
            }, r.default.mixin({
                destroyed: function() {
                    var n = this.$options.propsData, r = n && n.vueId;
                    r && (delete e[r], delete t[r]);
                }
            });
        }
        function Ct(e, t) {
            var n = t.mocks, o = t.initRefs;
            It(), Mt(), e.$options.store && (r.default.prototype.$store = e.$options.store), 
            r.default.prototype.mpHost = "mp-weixin", r.default.mixin({
                beforeCreate: function() {
                    if (this.$options.mpType) {
                        if (this.mpType = this.$options.mpType, this.$mp = p({
                            data: {}
                        }, this.mpType, this.$options.mpInstance), this.$scope = this.$options.mpInstance, 
                        delete this.$options.mpType, delete this.$options.mpInstance, "page" === this.mpType && "function" === typeof getApp) {
                            var e = getApp();
                            e.$vm && e.$vm.$i18n && (this._i18n = e.$vm.$i18n);
                        }
                        "app" !== this.mpType && (o(this), Ye(this, n));
                    }
                }
            });
            var i = {
                onLaunch: function(t) {
                    this.$vm || (wx.canIUse && !wx.canIUse("nextTick") && console.error("当前微信基础库版本过低，请将 微信开发者工具-详情-项目设置-调试基础库版本 更换为`2.3.0`以上"), 
                    this.$vm = e, this.$vm.$mp = {
                        app: this
                    }, this.$vm.$scope = this, this.$vm.globalData = this.globalData, this.$vm._isMounted = !0, 
                    this.$vm.__call_hook("mounted", t), this.$vm.__call_hook("onLaunch", t));
                }
            };
            i.globalData = e.$options.globalData || {};
            var a = e.$options.methods;
            return a && Object.keys(a).forEach(function(e) {
                i[e] = a[e];
            }), Xe(i, St), i;
        }
        var Tt = [ "__route__", "__wxExparserNodeId__", "__wxWebviewId__" ];
        function Et(e, t) {
            for (var n, r = e.$children, o = r.length - 1; o >= 0; o--) {
                var i = r[o];
                if (i.$scope._$vueId === t) return i;
            }
            for (var a = r.length - 1; a >= 0; a--) if (n = Et(r[a], t), n) return n;
        }
        function At(e) {
            return Behavior(e);
        }
        function bt() {
            return !!this.route;
        }
        function xt(e) {
            this.triggerEvent("__l", e);
        }
        function wt(e, t, n) {
            var r = e.selectAllComponents(t);
            r.forEach(function(e) {
                var r = e.dataset.ref;
                n[r] = e.$vm || e, "scoped" === e.dataset.vueGeneric && e.selectAllComponents(".scoped-ref").forEach(function(e) {
                    wt(e, t, n);
                });
            });
        }
        function Dt(e) {
            var t = e.$scope;
            Object.defineProperty(e, "$refs", {
                get: function() {
                    var e = {};
                    wt(t, ".vue-ref", e);
                    var n = t.selectAllComponents(".vue-ref-in-for");
                    return n.forEach(function(t) {
                        var n = t.dataset.ref;
                        e[n] || (e[n] = []), e[n].push(t.$vm || t);
                    }), e;
                }
            });
        }
        function kt(e) {
            var t, n = e.detail || e.value, r = n.vuePid, o = n.vueOptions;
            r && (t = Et(this.$vm, r)), t || (t = this.$vm), o.parent = t;
        }
        function Ot(e) {
            return Ct(e, {
                mocks: Tt,
                initRefs: Dt
            });
        }
        function Lt(e) {
            return App(Ot(e)), e;
        }
        var Rt = /[!'()*]/g, Pt = function(e) {
            return "%" + e.charCodeAt(0).toString(16);
        }, Nt = /%2C/g, Gt = function(e) {
            return encodeURIComponent(e).replace(Rt, Pt).replace(Nt, ",");
        };
        function Ft(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Gt, n = e ? Object.keys(e).map(function(n) {
                var r = e[n];
                if (void 0 === r) return "";
                if (null === r) return t(n);
                if (Array.isArray(r)) {
                    var o = [];
                    return r.forEach(function(e) {
                        void 0 !== e && (null === e ? o.push(t(n)) : o.push(t(n) + "=" + t(e)));
                    }), o.join("&");
                }
                return t(n) + "=" + t(r);
            }).filter(function(e) {
                return e.length > 0;
            }).join("&") : null;
            return n ? "?".concat(n) : "";
        }
        function Ut(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = t.isPage, o = t.initRelation, i = Qe(r.default, e), c = s(i, 2), u = c[0], l = c[1], p = a({
                multipleSlots: !0,
                addGlobalClass: !0
            }, l.options || {});
            l["mp-weixin"] && l["mp-weixin"].options && Object.assign(p, l["mp-weixin"].options);
            var h = {
                options: p,
                data: tt(l, r.default.prototype),
                behaviors: ot(l, At),
                properties: at(l.props, !1, l.__file),
                lifetimes: {
                    attached: function() {
                        var e = this.properties, t = {
                            mpType: n.call(this) ? "page" : "component",
                            mpInstance: this,
                            propsData: e
                        };
                        et(e.vueId, this), o.call(this, {
                            vuePid: this._$vuePid,
                            vueOptions: t
                        }), this.$vm = new u(t), Ze(this.$vm, e.vueSlots), this.$vm.$mount();
                    },
                    ready: function() {
                        this.$vm && (this.$vm._isMounted = !0, this.$vm.__call_hook("mounted"), this.$vm.__call_hook("onReady"));
                    },
                    detached: function() {
                        this.$vm && this.$vm.$destroy();
                    }
                },
                pageLifetimes: {
                    show: function(e) {
                        this.$vm && this.$vm.__call_hook("onPageShow", e);
                    },
                    hide: function() {
                        this.$vm && this.$vm.__call_hook("onPageHide");
                    },
                    resize: function(e) {
                        this.$vm && this.$vm.__call_hook("onPageResize", e);
                    }
                },
                methods: {
                    __l: kt,
                    __e: mt
                }
            };
            return l.externalClasses && (h.externalClasses = l.externalClasses), Array.isArray(l.wxsCallMethods) && l.wxsCallMethods.forEach(function(e) {
                h.methods[e] = function(t) {
                    return this.$vm[e](t);
                };
            }), n ? h : [ h, u ];
        }
        function qt(e) {
            return Ut(e, {
                isPage: bt,
                initRelation: xt
            });
        }
        var jt = [ "onShow", "onHide", "onUnload" ];
        function $t(e, t) {
            t.isPage, t.initRelation;
            var n = qt(e);
            return Xe(n.methods, jt, e), n.methods.onLoad = function(e) {
                this.options = e;
                var t = Object.assign({}, e);
                delete t.__id__, this.$page = {
                    fullPath: "/" + (this.route || this.is) + Ft(t)
                }, this.$vm.$mp.query = e, this.$vm.__call_hook("onLoad", e);
            }, n;
        }
        function Vt(e) {
            return $t(e, {
                isPage: bt,
                initRelation: xt
            });
        }
        function Bt(e) {
            return Component(Vt(e));
        }
        function Ht(e) {
            return Component(qt(e));
        }
        function Kt(e) {
            var t = Ot(e), n = getApp({
                allowDefault: !0
            }), r = n.globalData;
            if (r && Object.keys(t.globalData).forEach(function(e) {
                C(r, e) || (r[e] = t.globalData[e]);
            }), Object.keys(t).forEach(function(e) {
                C(n, e) || (n[e] = t[e]);
            }), S(t.onShow) && wx.onAppShow && wx.onAppShow(function() {
                for (var e = arguments.length, r = new Array(e), o = 0; o < e; o++) r[o] = arguments[o];
                t.onShow.apply(n, r);
            }), S(t.onHide) && wx.onAppHide && wx.onAppHide(function() {
                for (var e = arguments.length, r = new Array(e), o = 0; o < e; o++) r[o] = arguments[o];
                t.onHide.apply(n, r);
            }), S(t.onLaunch)) {
                var o = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
                t.onLaunch.call(n, o);
            }
            return e;
        }
        function zt(e) {
            var t = Ot(e);
            if (S(t.onShow) && wx.onAppShow && wx.onAppShow(function() {
                for (var n = arguments.length, r = new Array(n), o = 0; o < n; o++) r[o] = arguments[o];
                t.onShow.apply(e, r);
            }), S(t.onHide) && wx.onAppHide && wx.onAppHide(function() {
                for (var n = arguments.length, r = new Array(n), o = 0; o < n; o++) r[o] = arguments[o];
                t.onHide.apply(e, r);
            }), S(t.onLaunch)) {
                var n = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
                t.onLaunch.call(e, n);
            }
            return e;
        }
        jt.push.apply(jt, We), Ie.forEach(function(e) {
            Se[e] = !1;
        }), Me.forEach(function(e) {
            var t = Se[e] && Se[e].name ? Se[e].name : e;
            wx.canIUse(t) || (Se[e] = !1);
        });
        var Wt = {};
        "undefined" !== typeof Proxy ? Wt = new Proxy({}, {
            get: function(e, t) {
                return C(e, t) ? e[t] : pe[t] ? pe[t] : je[t] ? ne(t, je[t]) : Le[t] ? ne(t, Le[t]) : xe[t] ? ne(t, xe[t]) : qe[t] ? qe[t] : C(wx, t) || C(Se, t) ? ne(t, be(t, wx[t])) : void 0;
            },
            set: function(e, t, n) {
                return e[t] = n, !0;
            }
        }) : (Object.keys(pe).forEach(function(e) {
            Wt[e] = pe[e];
        }), Object.keys(xe).forEach(function(e) {
            Wt[e] = ne(e, xe[e]);
        }), Object.keys(Le).forEach(function(e) {
            Wt[e] = ne(e, xe[e]);
        }), Object.keys(qe).forEach(function(e) {
            Wt[e] = qe[e];
        }), Object.keys(je).forEach(function(e) {
            Wt[e] = ne(e, je[e]);
        }), Object.keys(wx).forEach(function(e) {
            (C(wx, e) || C(Se, e)) && (Wt[e] = ne(e, be(e, wx[e])));
        })), wx.createApp = Lt, wx.createPage = Bt, wx.createComponent = Ht, wx.createSubpackageApp = Kt, 
        wx.createPlugin = zt;
        var Yt = Wt, Jt = Yt;
        t.default = Jt;
    },
    5900: function(e, t, n) {
        "use strict";
        (function(t) {
            var n = {
                yAxisWidth: 15,
                yAxisSplit: 5,
                xAxisHeight: 15,
                xAxisLineHeight: 15,
                legendHeight: 15,
                yAxisTitleWidth: 15,
                padding: [ 10, 10, 10, 10 ],
                pixelRatio: 1,
                rotate: !1,
                columePadding: 3,
                fontSize: 13,
                dataPointShape: [ "circle", "circle", "circle", "circle" ],
                colors: [ "#2B67FF", "#2fc25b", "#facc14", "#f04864", "#8543e0", "#90ed7d" ],
                pieChartLinePadding: 15,
                pieChartTextPadding: 5,
                xAxisTextPadding: 3,
                titleColor: "#333333",
                titleFontSize: 20,
                subtitleColor: "#999999",
                subtitleFontSize: 15,
                toolTipPadding: 3,
                toolTipBackground: "#000000",
                toolTipOpacity: .7,
                toolTipLineHeight: 20,
                radarLabelTextMargin: 15,
                gaugeLabelTextMargin: 15
            }, r = function(e) {
                for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                if (null == e) throw new TypeError("Cannot convert undefined or null to object");
                if (!n || n.length <= 0) return e;
                function o(e, t) {
                    for (var n in t) e[n] = e[n] && "[object Object]" === e[n].toString() ? o(e[n], t[n]) : e[n] = t[n];
                    return e;
                }
                return n.forEach(function(t) {
                    e = o(e, t);
                }), e;
            }, o = {
                toFixed: function(e, t) {
                    return t = t || 2, this.isFloat(e) && (e = e.toFixed(t)), e;
                },
                isFloat: function(e) {
                    return e % 1 !== 0;
                },
                approximatelyEqual: function(e, t) {
                    return Math.abs(e - t) < 1e-10;
                },
                isSameSign: function(e, t) {
                    return Math.abs(e) === e && Math.abs(t) === t || Math.abs(e) !== e && Math.abs(t) !== t;
                },
                isSameXCoordinateArea: function(e, t) {
                    return this.isSameSign(e.x, t.x);
                },
                isCollision: function(e, t) {
                    e.end = {}, e.end.x = e.start.x + e.width, e.end.y = e.start.y - e.height, t.end = {}, 
                    t.end.x = t.start.x + t.width, t.end.y = t.start.y - t.height;
                    var n = t.start.x > e.end.x || t.end.x < e.start.x || t.end.y > e.start.y || t.start.y < e.end.y;
                    return !n;
                }
            };
            function i(e, t) {
                var n = /^#?([a-f\d])([a-f\d])([a-f\d])$/i, r = e.replace(n, function(e, t, n, r) {
                    return t + t + n + n + r + r;
                }), o = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(r), i = parseInt(o[1], 16), a = parseInt(o[2], 16), s = parseInt(o[3], 16);
                return "rgba(" + i + "," + a + "," + s + "," + t + ")";
            }
            function a(e, t, n) {
                if (isNaN(e)) throw new Error("[uCharts] unvalid series data!");
                n = n || 10, t = t || "upper";
                var r = 1;
                while (n < 1) n *= 10, r *= 10;
                e = "upper" === t ? Math.ceil(e * r) : Math.floor(e * r);
                while (e % n !== 0) "upper" === t ? e++ : e--;
                return e / r;
            }
            function s(e, t, n, r) {
                for (var o = [], i = 0; i < e.length; i++) {
                    for (var a = {
                        data: [],
                        name: t[i],
                        color: n[i]
                    }, s = 0, c = r.length; s < c; s++) if (s < e[i]) a.data.push(null); else {
                        for (var u = 0, l = 0; l < e[i]; l++) u += r[s - l][1];
                        a.data.push(+(u / e[i]).toFixed(3));
                    }
                    o.push(a);
                }
                return o;
            }
            function c(e, t, n, r, o) {
                var i = o.width - o.area[1] - o.area[3], a = n.eachSpacing * (o.chartData.xAxisData.xAxisPoints.length - 1), s = t;
                return t >= 0 ? (s = 0, e.event.trigger("scrollLeft")) : Math.abs(t) >= a - i && (s = i - a, 
                e.event.trigger("scrollRight")), s;
            }
            function u(e, t, n) {
                function r(e) {
                    while (e < 0) e += 2 * Math.PI;
                    while (e > 2 * Math.PI) e -= 2 * Math.PI;
                    return e;
                }
                return e = r(e), t = r(t), n = r(n), t > n && (n += 2 * Math.PI, e < t && (e += 2 * Math.PI)), 
                e >= t && e <= n;
            }
            function l(e, t, n) {
                var r = e, o = n - t, i = r + (n - o - r) / Math.sqrt(2);
                i *= -1;
                var a = (n - o) * (Math.sqrt(2) - 1) - (n - o - r) / Math.sqrt(2);
                return {
                    transX: i,
                    transY: a
                };
            }
            function p(e, t) {
                function n(e, t) {
                    return !(!e[t - 1] || !e[t + 1]) && (e[t].y >= Math.max(e[t - 1].y, e[t + 1].y) || e[t].y <= Math.min(e[t - 1].y, e[t + 1].y));
                }
                function r(e, t) {
                    return !(!e[t - 1] || !e[t + 1]) && (e[t].x >= Math.max(e[t - 1].x, e[t + 1].x) || e[t].x <= Math.min(e[t - 1].x, e[t + 1].x));
                }
                var o = .2, i = .2, a = null, s = null, c = null, u = null;
                if (t < 1 ? (a = e[0].x + (e[1].x - e[0].x) * o, s = e[0].y + (e[1].y - e[0].y) * o) : (a = e[t].x + (e[t + 1].x - e[t - 1].x) * o, 
                s = e[t].y + (e[t + 1].y - e[t - 1].y) * o), t > e.length - 3) {
                    var l = e.length - 1;
                    c = e[l].x - (e[l].x - e[l - 1].x) * i, u = e[l].y - (e[l].y - e[l - 1].y) * i;
                } else c = e[t + 1].x - (e[t + 2].x - e[t].x) * i, u = e[t + 1].y - (e[t + 2].y - e[t].y) * i;
                return n(e, t + 1) && (u = e[t + 1].y), n(e, t) && (s = e[t].y), r(e, t + 1) && (c = e[t + 1].x), 
                r(e, t) && (a = e[t].x), (s >= Math.max(e[t].y, e[t + 1].y) || s <= Math.min(e[t].y, e[t + 1].y)) && (s = e[t].y), 
                (u >= Math.max(e[t].y, e[t + 1].y) || u <= Math.min(e[t].y, e[t + 1].y)) && (u = e[t + 1].y), 
                (a >= Math.max(e[t].x, e[t + 1].x) || a <= Math.min(e[t].x, e[t + 1].x)) && (a = e[t].x), 
                (c >= Math.max(e[t].x, e[t + 1].x) || c <= Math.min(e[t].x, e[t + 1].x)) && (c = e[t + 1].x), 
                {
                    ctrA: {
                        x: a,
                        y: s
                    },
                    ctrB: {
                        x: c,
                        y: u
                    }
                };
            }
            function h(e, t, n) {
                return {
                    x: n.x + e,
                    y: n.y - t
                };
            }
            function f(e, t) {
                if (t) while (o.isCollision(e, t)) e.start.x > 0 ? e.start.y-- : e.start.x < 0 || e.start.y > 0 ? e.start.y++ : e.start.y--;
                return e;
            }
            function d(e, t, n) {
                var r = 0;
                return e.map(function(e) {
                    if (e.color || (e.color = n.colors[r], r = (r + 1) % n.colors.length), e.index || (e.index = 0), 
                    e.type || (e.type = t.type), "undefined" == typeof e.show && (e.show = !0), e.type || (e.type = t.type), 
                    e.pointShape || (e.pointShape = "circle"), !e.legendShape) switch (e.type) {
                      case "line":
                        e.legendShape = "line";
                        break;

                      case "column":
                        e.legendShape = "rect";
                        break;

                      case "area":
                        e.legendShape = "triangle";
                        break;

                      default:
                        e.legendShape = "circle";
                    }
                    return e;
                });
            }
            function g(e, t) {
                var n = 0, r = t - e;
                return n = r >= 1e4 ? 1e3 : r >= 1e3 ? 100 : r >= 100 ? 10 : r >= 10 ? 5 : r >= 1 ? 1 : r >= .1 ? .1 : r >= .01 ? .01 : r >= .001 ? .001 : r >= 1e-4 ? 1e-4 : r >= 1e-5 ? 1e-5 : 1e-6, 
                {
                    minRange: a(e, "lower", n),
                    maxRange: a(t, "upper", n)
                };
            }
            function m(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : n.fontSize;
                e = String(e);
                e = e.split("");
                for (var r = 0, o = 0; o < e.length; o++) {
                    var i = e[o];
                    /[a-zA-Z]/.test(i) ? r += 7 : /[0-9]/.test(i) ? r += 5.5 : /\./.test(i) ? r += 2.7 : /-/.test(i) ? r += 3.25 : /[\u4e00-\u9fa5]/.test(i) ? r += 10 : /\(|\)/.test(i) ? r += 3.73 : /\s/.test(i) ? r += 2.5 : /%/.test(i) ? r += 8 : r += 10;
                }
                return r * t / 10;
            }
            function v(e) {
                return e.reduce(function(e, t) {
                    return (e.data ? e.data : e).concat(t.data);
                }, []);
            }
            function y(e, t) {
                for (var n = new Array(t), r = 0; r < n.length; r++) n[r] = 0;
                for (var o = 0; o < e.length; o++) for (r = 0; r < n.length; r++) n[r] += e[o].data[r];
                return e.reduce(function(e, t) {
                    return (e.data ? e.data : e).concat(t.data).concat(n);
                }, []);
            }
            function _(e, t, n) {
                var r, o;
                return e.clientX ? t.rotate ? (o = t.height - e.clientX * t.pixelRatio, r = (e.pageY - n.currentTarget.offsetTop - t.height / t.pixelRatio / 2 * (t.pixelRatio - 1)) * t.pixelRatio) : (r = e.clientX * t.pixelRatio, 
                o = (e.pageY - n.currentTarget.offsetTop - t.height / t.pixelRatio / 2 * (t.pixelRatio - 1)) * t.pixelRatio) : t.rotate ? (o = t.height - e.x * t.pixelRatio, 
                r = e.y * t.pixelRatio) : (r = e.x * t.pixelRatio, o = e.y * t.pixelRatio), {
                    x: r,
                    y: o
                };
            }
            function S(e, t) {
                for (var n = [], r = 0; r < e.length; r++) {
                    var o = e[r];
                    if (null !== o.data[t] && "undefined" !== typeof o.data[t] && o.show) {
                        var i = {};
                        i.color = o.color, i.type = o.type, i.style = o.style, i.pointShape = o.pointShape, 
                        i.disableLegend = o.disableLegend, i.name = o.name, i.show = o.show, i.data = o.format ? o.format(o.data[t]) : o.data[t], 
                        n.push(i);
                    }
                }
                return n;
            }
            function I(e) {
                var t = e.map(function(e) {
                    return m(e);
                });
                return Math.max.apply(null, t);
            }
            function M(e) {
                for (var t = 2 * Math.PI / e, n = [], r = 0; r < e; r++) n.push(t * r);
                return n.map(function(e) {
                    return -1 * e + Math.PI / 2;
                });
            }
            function C(e, t, n, r) {
                for (var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {}, i = e.map(function(e) {
                    var t = [];
                    return t = r || e.data, {
                        text: o.format ? o.format(e, t[n]) : e.name + ": " + e.data,
                        color: e.color
                    };
                }), a = [], s = {
                    x: 0,
                    y: 0
                }, c = 0; c < t.length; c++) {
                    var u = t[c];
                    "undefined" !== typeof u[n] && null !== u[n] && a.push(u[n]);
                }
                for (var l = 0; l < a.length; l++) {
                    var p = a[l];
                    s.x = Math.round(p.x), s.y += p.y;
                }
                return s.y /= a.length, {
                    textList: i,
                    offset: s
                };
            }
            function T(e, t, n, r) {
                var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {}, i = e.map(function(e) {
                    return {
                        text: o.format ? o.format(e, r[n]) : e.name + ": " + e.data,
                        color: e.color,
                        disableLegend: !!e.disableLegend
                    };
                });
                i = i.filter(function(e) {
                    if (!0 !== e.disableLegend) return e;
                });
                for (var a = [], s = {
                    x: 0,
                    y: 0
                }, c = 0; c < t.length; c++) {
                    var u = t[c];
                    "undefined" !== typeof u[n] && null !== u[n] && a.push(u[n]);
                }
                for (var l = 0; l < a.length; l++) {
                    var p = a[l];
                    s.x = Math.round(p.x), s.y += p.y;
                }
                return s.y /= a.length, {
                    textList: i,
                    offset: s
                };
            }
            function E(e, t, n, r, o, i) {
                var a = i.color.upFill, s = i.color.downFill, c = [ a, a, s, a ], u = [], l = {
                    text: o[r],
                    color: null
                };
                u.push(l), t.map(function(t) {
                    0 == r ? t.data[1] - t.data[0] < 0 ? c[1] = s : c[1] = a : (t.data[0] < e[r - 1][1] && (c[0] = s), 
                    t.data[1] < t.data[0] && (c[1] = s), t.data[2] > e[r - 1][1] && (c[2] = a), t.data[3] < e[r - 1][1] && (c[3] = s));
                    var n = {
                        text: "开盘：" + t.data[0],
                        color: c[0]
                    }, o = {
                        text: "收盘：" + t.data[1],
                        color: c[1]
                    }, i = {
                        text: "最低：" + t.data[2],
                        color: c[2]
                    }, l = {
                        text: "最高：" + t.data[3],
                        color: c[3]
                    };
                    u.push(n, o, i, l);
                });
                for (var p = [], h = {
                    x: 0,
                    y: 0
                }, f = 0; f < n.length; f++) {
                    var d = n[f];
                    "undefined" !== typeof d[r] && null !== d[r] && p.push(d[r]);
                }
                return h.x = Math.round(p[0][0].x), {
                    textList: u,
                    offset: h
                };
            }
            function A(e) {
                for (var t = [], n = 0; n < e.length; n++) 1 == e[n].show && t.push(e[n]);
                return t;
            }
            function b(e, t, n, r) {
                var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0, i = -1, a = n.chartData.eachSpacing / 2, s = [];
                if (t.length > 0) {
                    for (var c = 1; c < n.chartData.xAxisPoints.length; c++) s.push(n.chartData.xAxisPoints[c] - a);
                    "line" != n.type && "area" != n.type || "justify" != n.xAxis.boundaryGap || (a = n.chartData.eachSpacing / 2), 
                    n.categories || (a = 0), D(e, n, r) && s.forEach(function(t, n) {
                        e.x + o + a > t && (i = n);
                    });
                }
                return i;
            }
            function x(e, t, n) {
                var r = -1;
                if (w(e, t.area)) {
                    for (var o = t.points, i = -1, a = 0, s = o.length; a < s; a++) for (var c = o[a], u = 0; u < c.length; u++) {
                        i += 1;
                        var l = c[u]["area"];
                        if (e.x > l[0] && e.x < l[2] && e.y > l[1] && e.y < l[3]) {
                            r = i;
                            break;
                        }
                    }
                    return r;
                }
                return r;
            }
            function w(e, t) {
                return e.x > t.start.x && e.x < t.end.x && e.y > t.start.y && e.y < t.end.y;
            }
            function D(e, t, n) {
                return e.x <= t.width - t.area[1] + 10 && e.x >= t.area[3] - 10 && e.y >= t.area[0] && e.y <= t.height - t.area[2];
            }
            function k(e, t, n) {
                var r = 2 * Math.PI / n, o = -1;
                if (N(e, t.center, t.radius)) {
                    var i = function(e) {
                        return e < 0 && (e += 2 * Math.PI), e > 2 * Math.PI && (e -= 2 * Math.PI), e;
                    }, a = Math.atan2(t.center.y - e.y, e.x - t.center.x);
                    a *= -1, a < 0 && (a += 2 * Math.PI);
                    var s = t.angleList.map(function(e) {
                        return e = i(-1 * e), e;
                    });
                    s.forEach(function(e, t) {
                        var n = i(e - r / 2), s = i(e + r / 2);
                        s < n && (s += 2 * Math.PI), (a >= n && a <= s || a + 2 * Math.PI >= n && a + 2 * Math.PI <= s) && (o = t);
                    });
                }
                return o;
            }
            function O(e, t) {
                for (var n = -1, r = 0, o = t.series.length; r < o; r++) {
                    var i = t.series[r];
                    if (e.x > i.funnelArea[0] && e.x < i.funnelArea[2] && e.y > i.funnelArea[1] && e.y < i.funnelArea[3]) {
                        n = r;
                        break;
                    }
                }
                return n;
            }
            function L(e, t) {
                for (var n = -1, r = 0, o = t.length; r < o; r++) {
                    var i = t[r];
                    if (e.x > i.area[0] && e.x < i.area[2] && e.y > i.area[1] && e.y < i.area[3]) {
                        n = r;
                        break;
                    }
                }
                return n;
            }
            function R(e, t) {
                for (var n = -1, r = t.chartData.mapData, o = t.series, i = Fe(e.y, e.x, r.bounds, r.scale, r.xoffset, r.yoffset), a = [ i.x, i.y ], s = 0, c = o.length; s < c; s++) {
                    var u = o[s].geometry.coordinates;
                    if (qe(a, u)) {
                        n = s;
                        break;
                    }
                }
                return n;
            }
            function P(e, t) {
                var n = -1;
                if (N(e, t.center, t.radius)) {
                    var r = Math.atan2(t.center.y - e.y, e.x - t.center.x);
                    r = -r;
                    for (var o = 0, i = t.series.length; o < i; o++) {
                        var a = t.series[o];
                        if (u(r, a._start_, a._start_ + 2 * a._proportion_ * Math.PI)) {
                            n = o;
                            break;
                        }
                    }
                }
                return n;
            }
            function N(e, t, n) {
                return Math.pow(e.x - t.x, 2) + Math.pow(e.y - t.y, 2) <= Math.pow(n, 2);
            }
            function G(e) {
                var t = [], n = [];
                return e.forEach(function(e, r) {
                    null !== e ? n.push(e) : (n.length && t.push(n), n = []);
                }), n.length && t.push(n), t;
            }
            function F(e, t, n, r) {
                var o = {
                    area: {
                        start: {
                            x: 0,
                            y: 0
                        },
                        end: {
                            x: 0,
                            y: 0
                        },
                        width: 0,
                        height: 0,
                        wholeWidth: 0,
                        wholeHeight: 0
                    },
                    points: [],
                    widthArr: [],
                    heightArr: []
                };
                if (!1 === t.legend.show) return r.legendData = o, o;
                var i = t.legend.padding, a = t.legend.margin, s = t.legend.fontSize, c = 15 * t.pixelRatio, u = 5 * t.pixelRatio, l = Math.max(t.legend.lineHeight * t.pixelRatio, s);
                if ("top" == t.legend.position || "bottom" == t.legend.position) {
                    for (var p = [], h = 0, f = [], d = [], g = 0; g < e.length; g++) {
                        var v = e[g], y = c + u + m(v.name || "undefined", s) + t.legend.itemGap;
                        h + y > t.width - t.padding[1] - t.padding[3] ? (p.push(d), f.push(h - t.legend.itemGap), 
                        h = y, d = [ v ]) : (h += y, d.push(v));
                    }
                    if (d.length) {
                        p.push(d), f.push(h - t.legend.itemGap), o.widthArr = f;
                        var _ = Math.max.apply(null, f);
                        switch (t.legend.float) {
                          case "left":
                            o.area.start.x = t.padding[3], o.area.end.x = t.padding[3] + 2 * i;
                            break;

                          case "right":
                            o.area.start.x = t.width - t.padding[1] - _ - 2 * i, o.area.end.x = t.width - t.padding[1];
                            break;

                          default:
                            o.area.start.x = (t.width - _) / 2 - i, o.area.end.x = (t.width + _) / 2 + i;
                        }
                        o.area.width = _ + 2 * i, o.area.wholeWidth = _ + 2 * i, o.area.height = p.length * l + 2 * i, 
                        o.area.wholeHeight = p.length * l + 2 * i + 2 * a, o.points = p;
                    }
                } else {
                    var S = e.length, I = t.height - t.padding[0] - t.padding[2] - 2 * a - 2 * i, M = Math.min(Math.floor(I / l), S);
                    switch (o.area.height = M * l + 2 * i, o.area.wholeHeight = M * l + 2 * i, t.legend.float) {
                      case "top":
                        o.area.start.y = t.padding[0] + a, o.area.end.y = t.padding[0] + a + o.area.height;
                        break;

                      case "bottom":
                        o.area.start.y = t.height - t.padding[2] - a - o.area.height, o.area.end.y = t.height - t.padding[2] - a;
                        break;

                      default:
                        o.area.start.y = (t.height - o.area.height) / 2, o.area.end.y = (t.height + o.area.height) / 2;
                    }
                    for (var C = S % M === 0 ? S / M : Math.floor(S / M + 1), T = [], E = 0; E < C; E++) {
                        var A = e.slice(E * M, E * M + M);
                        T.push(A);
                    }
                    if (o.points = T, T.length) {
                        for (var b = 0; b < T.length; b++) {
                            for (var x = T[b], w = 0, D = 0; D < x.length; D++) {
                                var k = c + u + m(x[D].name || "undefined", s) + t.legend.itemGap;
                                k > w && (w = k);
                            }
                            o.widthArr.push(w), o.heightArr.push(x.length * l + 2 * i);
                        }
                        for (var O = 0, L = 0; L < o.widthArr.length; L++) O += o.widthArr[L];
                        o.area.width = O - t.legend.itemGap + 2 * i, o.area.wholeWidth = o.area.width + i;
                    }
                }
                switch (t.legend.position) {
                  case "top":
                    o.area.start.y = t.padding[0] + a, o.area.end.y = t.padding[0] + a + o.area.height;
                    break;

                  case "bottom":
                    o.area.start.y = t.height - t.padding[2] - o.area.height - a, o.area.end.y = t.height - t.padding[2] - a;
                    break;

                  case "left":
                    o.area.start.x = t.padding[3], o.area.end.x = t.padding[3] + o.area.width;
                    break;

                  case "right":
                    o.area.start.x = t.width - t.padding[1] - o.area.width, o.area.end.x = t.width - t.padding[1];
                    break;
                }
                return r.legendData = o, o;
            }
            function U(e, t, n, r) {
                var o = {
                    angle: 0,
                    xAxisHeight: n.xAxisHeight
                }, i = e.map(function(e) {
                    return m(e, t.xAxis.fontSize || n.fontSize);
                }), a = Math.max.apply(this, i);
                return 1 == t.xAxis.rotateLabel && a + 2 * n.xAxisTextPadding > r && (o.angle = 45 * Math.PI / 180, 
                o.xAxisHeight = 2 * n.xAxisTextPadding + a * Math.sin(o.angle)), o;
            }
            function q(e, t, n) {
                var r = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : -1, o = v(e), i = [];
                o = o.filter(function(e) {
                    return "object" === typeof e && null !== e ? e.constructor.toString().indexOf("Array") > -1 ? null !== e : null !== e.value : null !== e;
                }), o.map(function(e) {
                    "object" === typeof e ? e.constructor.toString().indexOf("Array") > -1 ? "candle" == t.type ? e.map(function(e) {
                        i.push(e);
                    }) : i.push(e[0]) : i.push(e.value) : i.push(e);
                });
                var a = 0, s = 0;
                if (i.length > 0 && (a = Math.min.apply(this, i), s = Math.max.apply(this, i)), 
                r > -1 ? ("number" === typeof t.xAxis.data[r].min && (a = Math.min(t.xAxis.data[r].min, a)), 
                "number" === typeof t.xAxis.data[r].max && (s = Math.max(t.xAxis.data[r].max, s))) : ("number" === typeof t.xAxis.min && (a = Math.min(t.xAxis.min, a)), 
                "number" === typeof t.xAxis.max && (s = Math.max(t.xAxis.max, s))), a === s) {
                    var c = s || 10;
                    s += c;
                }
                for (var u = a, l = s, p = [], h = (l - u) / t.xAxis.splitNumber, f = 0; f <= t.xAxis.splitNumber; f++) p.push(u + h * f);
                return p;
            }
            function j(e, t, n) {
                var r = {
                    angle: 0,
                    xAxisHeight: n.xAxisHeight
                };
                r.ranges = q(e, t, n), r.rangesFormat = r.ranges.map(function(e) {
                    return e = t.xAxis.format ? t.xAxis.format(e) : o.toFixed(e, 2), e;
                });
                var i = r.ranges.map(function(e) {
                    return e = o.toFixed(e, 2), e = t.xAxis.format ? t.xAxis.format(Number(e)) : e, 
                    e;
                });
                r = Object.assign(r, Z(i, t, n));
                var a = r.eachSpacing, s = i.map(function(e) {
                    return m(e);
                }), c = Math.max.apply(this, s);
                return c + 2 * n.xAxisTextPadding > a && (r.angle = 45 * Math.PI / 180, r.xAxisHeight = 2 * n.xAxisTextPadding + c * Math.sin(r.angle)), 
                !0 === t.xAxis.disabled && (r.xAxisHeight = 0), r;
            }
            function $(e, t, n, r, o) {
                var i = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 1, a = o.extra.radar || {};
                a.max = a.max || 0;
                for (var s = Math.max(a.max, Math.max.apply(null, v(r))), c = [], u = function(o) {
                    var a = r[o], u = {};
                    u.color = a.color, u.legendShape = a.legendShape, u.pointShape = a.pointShape, u.data = [], 
                    a.data.forEach(function(r, o) {
                        var a = {};
                        a.angle = e[o], a.proportion = r / s, a.position = h(n * a.proportion * i * Math.cos(a.angle), n * a.proportion * i * Math.sin(a.angle), t), 
                        u.data.push(a);
                    }), c.push(u);
                }, l = 0; l < r.length; l++) u(l);
                return c;
            }
            function V(e, t) {
                for (var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1, r = 0, o = 0, i = 0; i < e.length; i++) {
                    var a = e[i];
                    a.data = null === a.data ? 0 : a.data, r += a.data;
                }
                for (var s = 0; s < e.length; s++) {
                    var c = e[s];
                    c.data = null === c.data ? 0 : c.data, c._proportion_ = 0 === r ? 1 / e.length * n : c.data / r * n, 
                    c._radius_ = t;
                }
                for (var u = 0; u < e.length; u++) {
                    var l = e[u];
                    l._start_ = o, o += 2 * l._proportion_ * Math.PI;
                }
                return e;
            }
            function B(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
                e = e.sort(function(e, t) {
                    return parseInt(t.data) - parseInt(e.data);
                });
                for (var r = 0; r < e.length; r++) e[r].radius = e[r].data / e[0].data * t * n, 
                e[r]._proportion_ = e[r].data / e[0].data;
                return e.reverse();
            }
            function H(e, t, n, r) {
                for (var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1, i = 0, a = 0, s = [], c = 0; c < e.length; c++) {
                    var u = e[c];
                    u.data = null === u.data ? 0 : u.data, i += u.data, s.push(u.data);
                }
                for (var l = Math.min.apply(null, s), p = Math.max.apply(null, s), h = r - n, f = 0; f < e.length; f++) {
                    var d = e[f];
                    d.data = null === d.data ? 0 : d.data, 0 === i || "area" == t ? (d._proportion_ = d.data / i * o, 
                    d._rose_proportion_ = 1 / e.length * o) : (d._proportion_ = d.data / i * o, d._rose_proportion_ = d.data / i * o), 
                    d._radius_ = n + h * ((d.data - l) / (p - l));
                }
                for (var g = 0; g < e.length; g++) {
                    var m = e[g];
                    m._start_ = a, a += 2 * m._rose_proportion_ * Math.PI;
                }
                return e;
            }
            function K(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
                1 == n && (n = .999999);
                for (var r = 0; r < e.length; r++) {
                    var o = e[r];
                    o.data = null === o.data ? 0 : o.data;
                    var i = void 0;
                    i = "circle" == t.type ? 2 : t.endAngle < t.startAngle ? 2 + t.endAngle - t.startAngle : t.startAngle - t.endAngle, 
                    o._proportion_ = i * o.data * n + t.startAngle, o._proportion_ >= 2 && (o._proportion_ = o._proportion_ % 2);
                }
                return e;
            }
            function z(e, t, n) {
                for (var r = t - n + 1, o = t, i = 0; i < e.length; i++) e[i].value = null === e[i].value ? 0 : e[i].value, 
                e[i]._startAngle_ = o, e[i]._endAngle_ = r * e[i].value + t, e[i]._endAngle_ >= 2 && (e[i]._endAngle_ = e[i]._endAngle_ % 2), 
                o = e[i]._endAngle_;
                return e;
            }
            function W(e, t, n) {
                for (var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1, o = 0; o < e.length; o++) {
                    var i = e[o];
                    if (i.data = null === i.data ? 0 : i.data, "auto" == n.pointer.color) {
                        for (var a = 0; a < t.length; a++) if (i.data <= t[a].value) {
                            i.color = t[a].color;
                            break;
                        }
                    } else i.color = n.pointer.color;
                    var s = n.startAngle - n.endAngle + 1;
                    i._endAngle_ = s * i.data + n.startAngle, i._oldAngle_ = n.oldAngle, n.oldAngle < n.endAngle && (i._oldAngle_ += 2), 
                    i.data >= n.oldData ? i._proportion_ = (i._endAngle_ - i._oldAngle_) * r + n.oldAngle : i._proportion_ = i._oldAngle_ - (i._oldAngle_ - i._endAngle_) * r, 
                    i._proportion_ >= 2 && (i._proportion_ = i._proportion_ % 2);
                }
                return e;
            }
            function Y(e) {
                e = V(e);
                for (var t = 0, n = 0; n < e.length; n++) {
                    var r = e[n], i = r.format ? r.format(+r._proportion_.toFixed(2)) : o.toFixed(100 * r._proportion_) + "%";
                    t = Math.max(t, m(i));
                }
                return t;
            }
            function J(e, t, n, r, o, i) {
                return e.map(function(e) {
                    return null === e ? null : (e.width = Math.ceil((t - 2 * o.columePadding) / n), 
                    i.extra.column && i.extra.column.width && +i.extra.column.width > 0 && (e.width = Math.min(e.width, +i.extra.column.width)), 
                    e.width <= 0 && (e.width = 1), e.x += (r + .5 - n / 2) * e.width, e);
                });
            }
            function X(e, t, n, r, o, i, a) {
                return e.map(function(e) {
                    return null === e ? null : (e.width = Math.ceil((t - 2 * o.columePadding) / 2), 
                    i.extra.column && i.extra.column.width && +i.extra.column.width > 0 && (e.width = Math.min(e.width, +i.extra.column.width)), 
                    r > 0 && (e.width -= 2 * a), e);
                });
            }
            function Q(e, t, n, r, o, i, a) {
                return e.map(function(e, n) {
                    return null === e ? null : (e.width = Math.ceil((t - 2 * o.columePadding) / 2), 
                    i.extra.column && i.extra.column.width && +i.extra.column.width > 0 && (e.width = Math.min(e.width, +i.extra.column.width)), 
                    e);
                });
            }
            function Z(e, t, n) {
                var r = t.width - t.area[1] - t.area[3], o = t.enableScroll ? Math.min(t.xAxis.itemCount, e.length) : e.length;
                ("line" == t.type || "area" == t.type) && o > 1 && "justify" == t.xAxis.boundaryGap && (o -= 1);
                var i = r / o, a = [], s = t.area[3], c = t.width - t.area[1];
                return e.forEach(function(e, t) {
                    a.push(s + t * i);
                }), "justify" !== t.xAxis.boundaryGap && (!0 === t.enableScroll ? a.push(s + e.length * i) : a.push(c)), 
                {
                    xAxisPoints: a,
                    startX: s,
                    endX: c,
                    eachSpacing: i
                };
            }
            function ee(e, t, n, r, o, i, a) {
                var s = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : 1, c = [], u = i.height - i.area[0] - i.area[2];
                return e.forEach(function(e, a) {
                    if (null === e) c.push(null); else {
                        var l = [];
                        e.forEach(function(e, c) {
                            var p = {};
                            p.x = r[a] + Math.round(o / 2);
                            var h = e.value || e, f = u * (h - t) / (n - t);
                            f *= s, p.y = i.height - Math.round(f) - i.area[2], l.push(p);
                        }), c.push(l);
                    }
                }), c;
            }
            function te(e, t, n, r, o, i, a) {
                var s = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : 1, c = "center";
                "line" != i.type && "area" != i.type || (c = i.xAxis.boundaryGap);
                var u = [], l = i.height - i.area[0] - i.area[2], p = i.width - i.area[1] - i.area[3];
                return e.forEach(function(e, a) {
                    if (null === e) u.push(null); else {
                        var h = {};
                        h.color = e.color, h.x = r[a];
                        var f, d, g, m = e;
                        if ("object" === typeof e && null !== e) if (e.constructor.toString().indexOf("Array") > -1) f = [].concat(i.chartData.xAxisData.ranges), 
                        d = f.shift(), g = f.pop(), m = e[1], h.x = i.area[3] + p * (e[0] - d) / (g - d); else m = e.value;
                        "center" == c && (h.x += Math.round(o / 2));
                        var v = l * (m - t) / (n - t);
                        v *= s, h.y = i.height - Math.round(v) - i.area[2], u.push(h);
                    }
                }), u;
            }
            function ne(e, t, n, r, o, i, a, s, c) {
                var u = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : 1, l = [], p = i.height - i.area[0] - i.area[2];
                return e.forEach(function(e, a) {
                    if (null === e) l.push(null); else {
                        var h = {};
                        if (h.color = e.color, h.x = r[a] + Math.round(o / 2), s > 0) {
                            for (var f = 0, d = 0; d <= s; d++) f += c[d].data[a];
                            var g = f - e, m = p * (f - t) / (n - t), v = p * (g - t) / (n - t);
                        } else f = e, m = p * (f - t) / (n - t), v = 0;
                        var y = v;
                        m *= u, y *= u, h.y = i.height - Math.round(m) - i.area[2], h.y0 = i.height - Math.round(y) - i.area[2], 
                        l.push(h);
                    }
                }), l;
            }
            function re(e, t, n, r) {
                var o, i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : -1;
                o = "stack" == r ? y(e, t.categories.length) : v(e);
                var a = [];
                o = o.filter(function(e) {
                    return "object" === typeof e && null !== e ? e.constructor.toString().indexOf("Array") > -1 ? null !== e : null !== e.value : null !== e;
                }), o.map(function(e) {
                    "object" === typeof e ? e.constructor.toString().indexOf("Array") > -1 ? "candle" == t.type ? e.map(function(e) {
                        a.push(e);
                    }) : a.push(e[1]) : a.push(e.value) : a.push(e);
                });
                var s = 0, c = 0;
                if (a.length > 0 && (s = Math.min.apply(this, a), c = Math.max.apply(this, a)), 
                i > -1 ? ("number" === typeof t.yAxis.data[i].min && (s = Math.min(t.yAxis.data[i].min, s)), 
                "number" === typeof t.yAxis.data[i].max && (c = Math.max(t.yAxis.data[i].max, c))) : ("number" === typeof t.yAxis.min && (s = Math.min(t.yAxis.min, s)), 
                "number" === typeof t.yAxis.max && (c = Math.max(t.yAxis.max, c))), s === c) {
                    var u = c || 10;
                    c += u;
                }
                for (var l = g(s, c), p = l.minRange, h = l.maxRange, f = [], d = (h - p) / t.yAxis.splitNumber, m = 0; m <= t.yAxis.splitNumber; m++) f.push(p + d * m);
                return f.reverse();
            }
            function oe(e, t, n) {
                var i = r({}, {
                    type: ""
                }, t.extra.column), a = t.yAxis.data.length, s = new Array(a);
                if (a > 0) {
                    for (var c = 0; c < a; c++) {
                        s[c] = [];
                        for (var u = 0; u < e.length; u++) e[u].index == c && s[c].push(e[u]);
                    }
                    for (var l = new Array(a), p = new Array(a), h = new Array(a), f = function(e) {
                        var r = t.yAxis.data[e];
                        1 == t.yAxis.disabled && (r.disabled = !0), l[e] = re(s[e], t, n, i.type, e);
                        var a = r.fontSize || n.fontSize;
                        h[e] = {
                            position: r.position ? r.position : "left",
                            width: 0
                        }, p[e] = l[e].map(function(t) {
                            return t = o.toFixed(t, 6), t = r.format ? r.format(Number(t)) : t, h[e].width = Math.max(h[e].width, m(t, a) + 5), 
                            t;
                        });
                        var c = r.calibration ? 4 * t.pixelRatio : 0;
                        h[e].width += c + 3 * t.pixelRatio, !0 === r.disabled && (h[e].width = 0);
                    }, d = 0; d < a; d++) f(d);
                } else {
                    l = new Array(1), p = new Array(1), h = new Array(1);
                    l[0] = re(e, t, n, i.type), h[0] = {
                        position: "left",
                        width: 0
                    };
                    var g = t.yAxis.fontSize || n.fontSize;
                    p[0] = l[0].map(function(e) {
                        return e = o.toFixed(e, 6), e = t.yAxis.format ? t.yAxis.format(Number(e)) : e, 
                        h[0].width = Math.max(h[0].width, m(e, g) + 5), e;
                    }), h[0].width += 3 * t.pixelRatio, !0 === t.yAxis.disabled ? (h[0] = {
                        position: "left",
                        width: 0
                    }, t.yAxis.data[0] = {
                        disabled: !0
                    }) : t.yAxis.data[0] = {
                        disabled: !1,
                        position: "left",
                        max: t.yAxis.max,
                        min: t.yAxis.min,
                        format: t.yAxis.format
                    };
                }
                return {
                    rangesFormat: p,
                    ranges: l,
                    yAxisWidth: h
                };
            }
            function ie(e, t, n, r, o) {
                for (var i = [].concat(n.chartData.yAxisData.ranges), a = n.height - n.area[0] - n.area[2], s = n.area[0], c = [], u = 0; u < i.length; u++) {
                    var l = i[u].shift(), p = i[u].pop(), h = l - (l - p) * (e - s) / a;
                    h = n.yAxis.data[u].format ? n.yAxis.data[u].format(Number(h)) : h.toFixed(0), c.push(String(h));
                }
                return c;
            }
            function ae(e, t) {
                for (var n, r, o = t.height - t.area[0] - t.area[2], i = 0; i < e.length; i++) {
                    e[i].yAxisIndex = e[i].yAxisIndex ? e[i].yAxisIndex : 0;
                    var a = [].concat(t.chartData.yAxisData.ranges[e[i].yAxisIndex]);
                    n = a.pop(), r = a.shift();
                    var s = o * (e[i].value - n) / (r - n);
                    e[i].y = t.height - Math.round(s) - t.area[2];
                }
                return e;
            }
            function se(e, t) {
                !0 !== t.rotateLock ? (e.translate(t.height, 0), e.rotate(90 * Math.PI / 180)) : !0 !== t._rotate_ && (e.translate(t.height, 0), 
                e.rotate(90 * Math.PI / 180), t._rotate_ = !0);
            }
            function ce(e, t, n, r, o) {
                r.beginPath(), "hollow" == o.dataPointShapeType ? (r.setStrokeStyle(t), r.setFillStyle(o.background), 
                r.setLineWidth(2 * o.pixelRatio)) : (r.setStrokeStyle("#ffffff"), r.setFillStyle(t), 
                r.setLineWidth(1 * o.pixelRatio)), "diamond" === n ? e.forEach(function(e, t) {
                    null !== e && (r.moveTo(e.x, e.y - 4.5), r.lineTo(e.x - 4.5, e.y), r.lineTo(e.x, e.y + 4.5), 
                    r.lineTo(e.x + 4.5, e.y), r.lineTo(e.x, e.y - 4.5));
                }) : "circle" === n ? e.forEach(function(e, t) {
                    null !== e && (r.moveTo(e.x + 2.5 * o.pixelRatio, e.y), r.arc(e.x, e.y, 3 * o.pixelRatio, 0, 2 * Math.PI, !1));
                }) : "rect" === n ? e.forEach(function(e, t) {
                    null !== e && (r.moveTo(e.x - 3.5, e.y - 3.5), r.rect(e.x - 3.5, e.y - 3.5, 7, 7));
                }) : "triangle" === n && e.forEach(function(e, t) {
                    null !== e && (r.moveTo(e.x, e.y - 4.5), r.lineTo(e.x - 4.5, e.y + 4.5), r.lineTo(e.x + 4.5, e.y + 4.5), 
                    r.lineTo(e.x, e.y - 4.5));
                }), r.closePath(), r.fill(), r.stroke();
            }
            function ue(e, t, n, r) {
                var o = e.title.fontSize || t.titleFontSize, i = e.subtitle.fontSize || t.subtitleFontSize, a = e.title.name || "", s = e.subtitle.name || "", c = e.title.color || t.titleColor, u = e.subtitle.color || t.subtitleColor, l = a ? o : 0, p = s ? i : 0, h = 5;
                if (s) {
                    var f = m(s, i), d = r.x - f / 2 + (e.subtitle.offsetX || 0), g = r.y + i / 2 + (e.subtitle.offsetY || 0);
                    a && (g += (l + h) / 2), n.beginPath(), n.setFontSize(i), n.setFillStyle(u), n.fillText(s, d, g), 
                    n.closePath(), n.stroke();
                }
                if (a) {
                    var v = m(a, o), y = r.x - v / 2 + (e.title.offsetX || 0), _ = r.y + o / 2 + (e.title.offsetY || 0);
                    s && (_ -= (p + h) / 2), n.beginPath(), n.setFontSize(o), n.setFillStyle(c), n.fillText(a, y, _), 
                    n.closePath(), n.stroke();
                }
            }
            function le(e, t, n, r) {
                var o = t.data;
                e.forEach(function(e, i) {
                    if (null !== e) {
                        r.beginPath(), r.setFontSize(t.textSize || n.fontSize), r.setFillStyle(t.textColor || "#666666");
                        var a = o[i];
                        "object" === typeof o[i] && null !== o[i] && (a = o[i].constructor == Array ? o[i][1] : o[i].value);
                        var s = t.format ? t.format(a) : a;
                        r.fillText(String(s), e.x - m(s, t.textSize || n.fontSize) / 2, e.y - 4), r.closePath(), 
                        r.stroke();
                    }
                });
            }
            function pe(e, t, n, r, o, i) {
                t -= e.width / 2 + o.gaugeLabelTextMargin;
                for (var a = e.startAngle - e.endAngle + 1, s = a / e.splitLine.splitNumber, c = e.endNumber - e.startNumber, u = c / e.splitLine.splitNumber, l = e.startAngle, p = e.startNumber, h = 0; h < e.splitLine.splitNumber + 1; h++) {
                    var f = {
                        x: t * Math.cos(l * Math.PI),
                        y: t * Math.sin(l * Math.PI)
                    }, d = e.labelFormat ? e.labelFormat(p) : p;
                    f.x += n.x - m(d) / 2, f.y += n.y;
                    var g = f.x, v = f.y;
                    i.beginPath(), i.setFontSize(o.fontSize), i.setFillStyle(e.labelColor || "#666666"), 
                    i.fillText(d, g, v + o.fontSize / 2), i.closePath(), i.stroke(), l += s, l >= 2 && (l %= 2), 
                    p += u;
                }
            }
            function he(e, t, n, r, i, a) {
                var s = r.extra.radar || {};
                t += i.radarLabelTextMargin, e.forEach(function(e, c) {
                    var u = {
                        x: t * Math.cos(e),
                        y: t * Math.sin(e)
                    }, l = h(u.x, u.y, n), p = l.x, f = l.y;
                    o.approximatelyEqual(u.x, 0) ? p -= m(r.categories[c] || "") / 2 : u.x < 0 && (p -= m(r.categories[c] || "")), 
                    a.beginPath(), a.setFontSize(i.fontSize), a.setFillStyle(s.labelColor || "#666666"), 
                    a.fillText(r.categories[c] || "", p, f + i.fontSize / 2), a.closePath(), a.stroke();
                });
            }
            function fe(e, t, n, r, i, a) {
                for (var s = n.pieChartLinePadding, c = [], u = null, l = e.map(function(e) {
                    var t = e.format ? e.format(+e._proportion_.toFixed(2)) : o.toFixed(100 * e._proportion_.toFixed(4)) + "%";
                    e._rose_proportion_ && (e._proportion_ = e._rose_proportion_);
                    var n = 2 * Math.PI - (e._start_ + 2 * Math.PI * e._proportion_ / 2), r = e.color, i = e._radius_;
                    return {
                        arc: n,
                        text: t,
                        color: r,
                        radius: i,
                        textColor: e.textColor,
                        textSize: e.textSize
                    };
                }), p = 0; p < l.length; p++) {
                    var d = l[p], g = Math.cos(d.arc) * (d.radius + s), v = Math.sin(d.arc) * (d.radius + s), y = Math.cos(d.arc) * d.radius, _ = Math.sin(d.arc) * d.radius, S = g >= 0 ? g + n.pieChartTextPadding : g - n.pieChartTextPadding, I = v, M = m(d.text, d.textSize || n.fontSize), C = I;
                    u && o.isSameXCoordinateArea(u.start, {
                        x: S
                    }) && (C = S > 0 ? Math.min(I, u.start.y) : g < 0 || I > 0 ? Math.max(I, u.start.y) : Math.min(I, u.start.y)), 
                    S < 0 && (S -= M);
                    var T = {
                        lineStart: {
                            x: y,
                            y: _
                        },
                        lineEnd: {
                            x: g,
                            y: v
                        },
                        start: {
                            x: S,
                            y: C
                        },
                        width: M,
                        height: n.fontSize,
                        text: d.text,
                        color: d.color,
                        textColor: d.textColor,
                        textSize: d.textSize
                    };
                    u = f(T, u), c.push(u);
                }
                for (var E = 0; E < c.length; E++) {
                    var A = c[E], b = h(A.lineStart.x, A.lineStart.y, a), x = h(A.lineEnd.x, A.lineEnd.y, a), w = h(A.start.x, A.start.y, a);
                    r.setLineWidth(1 * t.pixelRatio), r.setFontSize(n.fontSize), r.beginPath(), r.setStrokeStyle(A.color), 
                    r.setFillStyle(A.color), r.moveTo(b.x, b.y);
                    var D = A.start.x < 0 ? w.x + A.width : w.x, k = A.start.x < 0 ? w.x - 5 : w.x + 5;
                    r.quadraticCurveTo(x.x, x.y, D, w.y), r.moveTo(b.x, b.y), r.stroke(), r.closePath(), 
                    r.beginPath(), r.moveTo(w.x + A.width, w.y), r.arc(D, w.y, 2, 0, 2 * Math.PI), r.closePath(), 
                    r.fill(), r.beginPath(), r.setFontSize(A.textSize || n.fontSize), r.setFillStyle(A.textColor || "#666666"), 
                    r.fillText(A.text, k, w.y + 3), r.closePath(), r.stroke(), r.closePath();
                }
            }
            function de(e, t, n, r) {
                var o = t.extra.tooltip || {};
                o.gridType = void 0 == o.gridType ? "solid" : o.gridType, o.dashLength = void 0 == o.dashLength ? 4 : o.dashLength;
                var a = t.area[0], s = t.height - t.area[2];
                if ("dash" == o.gridType && r.setLineDash([ o.dashLength, o.dashLength ]), r.setStrokeStyle(o.gridColor || "#cccccc"), 
                r.setLineWidth(1 * t.pixelRatio), r.beginPath(), r.moveTo(e, a), r.lineTo(e, s), 
                r.stroke(), r.setLineDash([]), o.xAxisLabel) {
                    var c = t.categories[t.tooltip.index];
                    r.setFontSize(n.fontSize);
                    var u = m(c, n.fontSize), l = e - .5 * u, p = s;
                    r.beginPath(), r.setFillStyle(i(o.labelBgColor || n.toolTipBackground, o.labelBgOpacity || n.toolTipOpacity)), 
                    r.setStrokeStyle(o.labelBgColor || n.toolTipBackground), r.setLineWidth(1 * t.pixelRatio), 
                    r.rect(l - n.toolTipPadding, p, u + 2 * n.toolTipPadding, n.fontSize + 2 * n.toolTipPadding), 
                    r.closePath(), r.stroke(), r.fill(), r.beginPath(), r.setFontSize(n.fontSize), r.setFillStyle(o.labelFontColor || n.fontColor), 
                    r.fillText(String(c), l, p + n.toolTipPadding + n.fontSize), r.closePath(), r.stroke();
                }
            }
            function ge(e, t, n) {
                for (var o = r({}, {
                    type: "solid",
                    dashLength: 4,
                    data: []
                }, e.extra.markLine), a = e.area[3], s = e.width - e.area[1], c = ae(o.data, e), u = 0; u < c.length; u++) {
                    var l = r({}, {
                        lineColor: "#DE4A42",
                        showLabel: !1,
                        labelFontColor: "#666666",
                        labelBgColor: "#DFE8FF",
                        labelBgOpacity: .8,
                        yAxisIndex: 0
                    }, c[u]);
                    if ("dash" == o.type && n.setLineDash([ o.dashLength, o.dashLength ]), n.setStrokeStyle(l.lineColor), 
                    n.setLineWidth(1 * e.pixelRatio), n.beginPath(), n.moveTo(a, l.y), n.lineTo(s, l.y), 
                    n.stroke(), n.setLineDash([]), l.showLabel) {
                        var p = e.yAxis.format ? e.yAxis.format(Number(l.value)) : l.value;
                        n.setFontSize(t.fontSize);
                        var h = m(p, t.fontSize), f = e.padding[3] + t.yAxisTitleWidth - t.toolTipPadding, d = Math.max(e.area[3], h + 2 * t.toolTipPadding), g = d - f, v = f + (g - h) / 2, y = l.y;
                        n.setFillStyle(i(l.labelBgColor, l.labelBgOpacity)), n.setStrokeStyle(l.labelBgColor), 
                        n.setLineWidth(1 * e.pixelRatio), n.beginPath(), n.rect(f, y - .5 * t.fontSize - t.toolTipPadding, g, t.fontSize + 2 * t.toolTipPadding), 
                        n.closePath(), n.stroke(), n.fill(), n.beginPath(), n.setFontSize(t.fontSize), n.setFillStyle(l.labelFontColor), 
                        n.fillText(String(p), v, y + .5 * t.fontSize), n.stroke();
                    }
                }
            }
            function me(e, t, n, o, a) {
                var s = r({}, {
                    gridType: "solid",
                    dashLength: 4
                }, e.extra.tooltip), c = e.area[3], u = e.width - e.area[1];
                if ("dash" == s.gridType && n.setLineDash([ s.dashLength, s.dashLength ]), n.setStrokeStyle(s.gridColor || "#cccccc"), 
                n.setLineWidth(1 * e.pixelRatio), n.beginPath(), n.moveTo(c, e.tooltip.offset.y), 
                n.lineTo(u, e.tooltip.offset.y), n.stroke(), n.setLineDash([]), s.yAxisLabel) for (var l = ie(e.tooltip.offset.y, e.series, e, t, o), p = e.chartData.yAxisData.yAxisWidth, h = e.area[3], f = e.width - e.area[1], d = 0; d < l.length; d++) {
                    n.setFontSize(t.fontSize);
                    var g = m(l[d], t.fontSize), v = void 0, y = void 0, _ = void 0;
                    "left" == p[d].position ? (v = h - p[d].width, y = Math.max(v, v + g + 2 * t.toolTipPadding)) : (v = f, 
                    y = Math.max(v + p[d].width, v + g + 2 * t.toolTipPadding)), _ = y - v;
                    var S = v + (_ - g) / 2, I = e.tooltip.offset.y;
                    n.beginPath(), n.setFillStyle(i(s.labelBgColor || t.toolTipBackground, s.labelBgOpacity || t.toolTipOpacity)), 
                    n.setStrokeStyle(s.labelBgColor || t.toolTipBackground), n.setLineWidth(1 * e.pixelRatio), 
                    n.rect(v, I - .5 * t.fontSize - t.toolTipPadding, _, t.fontSize + 2 * t.toolTipPadding), 
                    n.closePath(), n.stroke(), n.fill(), n.beginPath(), n.setFontSize(t.fontSize), n.setFillStyle(s.labelFontColor || t.fontColor), 
                    n.fillText(l[d], S, I + .5 * t.fontSize), n.closePath(), n.stroke(), "left" == p[d].position ? h -= p[d].width + e.yAxis.padding : f += p[d].width + e.yAxis.padding;
                }
            }
            function ve(e, t, n, o, a) {
                var s = r({}, {
                    activeBgColor: "#000000",
                    activeBgOpacity: .08
                }, t.extra.tooltip), c = t.area[0], u = t.height - t.area[2];
                o.beginPath(), o.setFillStyle(i(s.activeBgColor, s.activeBgOpacity)), o.rect(e - a / 2, c, a, u - c), 
                o.closePath(), o.fill();
            }
            function ye(e, t, n, o, a, s, c) {
                var u = r({}, {
                    showBox: !0,
                    bgColor: "#000000",
                    bgOpacity: .7,
                    fontColor: "#FFFFFF"
                }, n.extra.tooltip), l = 4 * n.pixelRatio, p = 5 * n.pixelRatio, h = 8 * n.pixelRatio, f = !1;
                "line" != n.type && "area" != n.type && "candle" != n.type && "mix" != n.type || de(n.tooltip.offset.x, n, o, a), 
                t = r({
                    x: 0,
                    y: 0
                }, t), t.y -= 8 * n.pixelRatio;
                var d = e.map(function(e) {
                    return m(e.text, o.fontSize);
                }), g = l + p + 4 * o.toolTipPadding + Math.max.apply(null, d), v = 2 * o.toolTipPadding + e.length * o.toolTipLineHeight;
                0 != u.showBox && (t.x - Math.abs(n._scrollDistance_) + h + g > n.width && (f = !0), 
                v + t.y > n.height && (t.y = n.height - v), a.beginPath(), a.setFillStyle(i(u.bgColor || o.toolTipBackground, u.bgOpacity || o.toolTipOpacity)), 
                f ? (a.moveTo(t.x, t.y + 10 * n.pixelRatio), a.lineTo(t.x - h, t.y + 10 * n.pixelRatio - 5 * n.pixelRatio), 
                a.lineTo(t.x - h, t.y), a.lineTo(t.x - h - Math.round(g), t.y), a.lineTo(t.x - h - Math.round(g), t.y + v), 
                a.lineTo(t.x - h, t.y + v), a.lineTo(t.x - h, t.y + 10 * n.pixelRatio + 5 * n.pixelRatio), 
                a.lineTo(t.x, t.y + 10 * n.pixelRatio)) : (a.moveTo(t.x, t.y + 10 * n.pixelRatio), 
                a.lineTo(t.x + h, t.y + 10 * n.pixelRatio - 5 * n.pixelRatio), a.lineTo(t.x + h, t.y), 
                a.lineTo(t.x + h + Math.round(g), t.y), a.lineTo(t.x + h + Math.round(g), t.y + v), 
                a.lineTo(t.x + h, t.y + v), a.lineTo(t.x + h, t.y + 10 * n.pixelRatio + 5 * n.pixelRatio), 
                a.lineTo(t.x, t.y + 10 * n.pixelRatio)), a.closePath(), a.fill(), e.forEach(function(e, n) {
                    if (null !== e.color) {
                        a.beginPath(), a.setFillStyle(e.color);
                        var r = t.x + h + 2 * o.toolTipPadding, i = t.y + (o.toolTipLineHeight - o.fontSize) / 2 + o.toolTipLineHeight * n + o.toolTipPadding + 1;
                        f && (r = t.x - g - h + 2 * o.toolTipPadding), a.fillRect(r, i, l, o.fontSize), 
                        a.closePath();
                    }
                }), e.forEach(function(e, n) {
                    var r = t.x + h + 2 * o.toolTipPadding + l + p;
                    f && (r = t.x - g - h + 2 * o.toolTipPadding + +l + p);
                    var i = t.y + (o.toolTipLineHeight - o.fontSize) / 2 + o.toolTipLineHeight * n + o.toolTipPadding;
                    a.beginPath(), a.setFontSize(o.fontSize), a.setFillStyle(u.fontColor), a.fillText(e.text, r, i + o.fontSize), 
                    a.closePath(), a.stroke();
                }));
            }
            function _e(e, t, n, o) {
                var i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1, a = t.chartData.xAxisData, s = a.xAxisPoints, c = a.eachSpacing, u = r({}, {
                    type: "group",
                    width: c / 2,
                    meter: {
                        border: 4,
                        fillColor: "#FFFFFF"
                    }
                }, t.extra.column), l = [];
                o.save();
                var p = -2, h = s.length + 2;
                return t._scrollDistance_ && 0 !== t._scrollDistance_ && !0 === t.enableScroll && (o.translate(t._scrollDistance_, 0), 
                p = Math.floor(-t._scrollDistance_ / c) - 2, h = p + t.xAxis.itemCount + 4), t.tooltip && t.tooltip.textList && t.tooltip.textList.length && 1 === i && ve(t.tooltip.offset.x, t, n, o, c), 
                e.forEach(function(r, a) {
                    var f, d, g;
                    f = [].concat(t.chartData.yAxisData.ranges[r.index]), d = f.pop(), g = f.shift();
                    var m = r.data;
                    switch (u.type) {
                      case "group":
                        var v = te(m, d, g, s, c, t, n, i), y = ne(m, d, g, s, c, t, n, a, e, i);
                        l.push(y), v = J(v, c, e.length, a, n, t);
                        for (var _ = 0; _ < v.length; _++) {
                            var S = v[_];
                            if (null !== S && _ > p && _ < h) {
                                o.beginPath(), o.setStrokeStyle(S.color || r.color), o.setLineWidth(1), o.setFillStyle(S.color || r.color);
                                var I = S.x - S.width / 2, M = t.height - S.y - t.area[2];
                                o.moveTo(I, S.y), o.lineTo(I + S.width - 2, S.y), o.lineTo(I + S.width - 2, t.height - t.area[2]), 
                                o.lineTo(I, t.height - t.area[2]), o.lineTo(I, S.y), o.closePath(), o.stroke(), 
                                o.fill();
                            }
                        }
                        break;

                      case "stack":
                        v = ne(m, d, g, s, c, t, n, a, e, i);
                        l.push(v), v = Q(v, c, e.length, a, n, t, e);
                        for (var C = 0; C < v.length; C++) {
                            var T = v[C];
                            if (null !== T && C > p && C < h) {
                                o.beginPath(), o.setFillStyle(T.color || r.color);
                                I = T.x - T.width / 2 + 1, M = t.height - T.y - t.area[2];
                                var E = t.height - T.y0 - t.area[2];
                                a > 0 && (M -= E), o.moveTo(I, T.y), o.fillRect(I, T.y, T.width - 2, M), o.closePath(), 
                                o.fill();
                            }
                        }
                        break;

                      case "meter":
                        v = te(m, d, g, s, c, t, n, i);
                        if (l.push(v), v = X(v, c, e.length, a, n, t, u.meter.border), 0 == a) for (var A = 0; A < v.length; A++) {
                            var b = v[A];
                            if (null !== b && A > p && A < h) {
                                o.beginPath(), o.setFillStyle(u.meter.fillColor);
                                I = b.x - b.width / 2, M = t.height - b.y - t.area[2];
                                o.moveTo(I, b.y), o.fillRect(I, b.y, b.width, M), o.closePath(), o.fill(), u.meter.border > 0 && (o.beginPath(), 
                                o.setStrokeStyle(r.color), o.setLineWidth(u.meter.border * t.pixelRatio), o.moveTo(I + .5 * u.meter.border, b.y + M), 
                                o.lineTo(I + .5 * u.meter.border, b.y + .5 * u.meter.border), o.lineTo(I + b.width - .5 * u.meter.border, b.y + .5 * u.meter.border), 
                                o.lineTo(I + b.width - .5 * u.meter.border, b.y + M), o.stroke());
                            }
                        } else for (var x = 0; x < v.length; x++) {
                            var w = v[x];
                            if (null !== w && x > p && x < h) {
                                o.beginPath(), o.setFillStyle(w.color || r.color);
                                I = w.x - w.width / 2, M = t.height - w.y - t.area[2];
                                o.moveTo(I, w.y), o.fillRect(I, w.y, w.width, M), o.closePath(), o.fill();
                            }
                        }
                        break;
                    }
                }), !1 !== t.dataLabel && 1 === i && e.forEach(function(r, a) {
                    var l, p, h;
                    l = [].concat(t.chartData.yAxisData.ranges[r.index]), p = l.pop(), h = l.shift();
                    var f = r.data;
                    switch (u.type) {
                      case "group":
                        var d = te(f, p, h, s, c, t, n, i);
                        d = J(d, c, e.length, a, n, t), le(d, r, n, o);
                        break;

                      case "stack":
                        d = ne(f, p, h, s, c, t, n, a, e, i);
                        le(d, r, n, o);
                        break;

                      case "meter":
                        d = te(f, p, h, s, c, t, n, i);
                        le(d, r, n, o);
                        break;
                    }
                }), o.restore(), {
                    xAxisPoints: s,
                    calPoints: l,
                    eachSpacing: c
                };
            }
            function Se(e, t, n, o, i) {
                var a = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 1, s = r({}, {
                    color: {},
                    average: {}
                }, n.extra.candle);
                s.color = r({}, {
                    upLine: "#f04864",
                    upFill: "#f04864",
                    downLine: "#2fc25b",
                    downFill: "#2fc25b"
                }, s.color), s.average = r({}, {
                    show: !1,
                    name: [],
                    day: [],
                    color: o.colors
                }, s.average), n.extra.candle = s;
                var c = n.chartData.xAxisData, u = c.xAxisPoints, l = c.eachSpacing, h = [];
                i.save();
                var f = -2, d = u.length + 2, g = 0, m = n.width + l;
                return n._scrollDistance_ && 0 !== n._scrollDistance_ && !0 === n.enableScroll && (i.translate(n._scrollDistance_, 0), 
                f = Math.floor(-n._scrollDistance_ / l) - 2, d = f + n.xAxis.itemCount + 4, g = -n._scrollDistance_ - l + n.area[3], 
                m = g + (n.xAxis.itemCount + 4) * l), (s.average.show || t) && t.forEach(function(e, t) {
                    var r, s, c;
                    r = [].concat(n.chartData.yAxisData.ranges[e.index]), s = r.pop(), c = r.shift();
                    for (var h = e.data, f = te(h, s, c, u, l, n, o, a), d = G(f), v = 0; v < d.length; v++) {
                        var y = d[v];
                        if (i.beginPath(), i.setStrokeStyle(e.color), i.setLineWidth(1), 1 === y.length) i.moveTo(y[0].x, y[0].y), 
                        i.arc(y[0].x, y[0].y, 1, 0, 2 * Math.PI); else {
                            i.moveTo(y[0].x, y[0].y);
                            for (var _ = 0, S = 0; S < y.length; S++) {
                                var I = y[S];
                                if (0 == _ && I.x > g && (i.moveTo(I.x, I.y), _ = 1), S > 0 && I.x > g && I.x < m) {
                                    var M = p(y, S - 1);
                                    i.bezierCurveTo(M.ctrA.x, M.ctrA.y, M.ctrB.x, M.ctrB.y, I.x, I.y);
                                }
                            }
                            i.moveTo(y[0].x, y[0].y);
                        }
                        i.closePath(), i.stroke();
                    }
                }), e.forEach(function(e, t) {
                    var r, c, p;
                    r = [].concat(n.chartData.yAxisData.ranges[e.index]), c = r.pop(), p = r.shift();
                    var g = e.data, m = ee(g, c, p, u, l, n, o, a);
                    h.push(m);
                    for (var v = G(m), y = 0; y < v[0].length; y++) if (y > f && y < d) {
                        var _ = v[0][y];
                        i.beginPath(), g[y][1] - g[y][0] > 0 ? (i.setStrokeStyle(s.color.upLine), i.setFillStyle(s.color.upFill), 
                        i.setLineWidth(1 * n.pixelRatio), i.moveTo(_[3].x, _[3].y), i.lineTo(_[1].x, _[1].y), 
                        i.lineTo(_[1].x - l / 4, _[1].y), i.lineTo(_[0].x - l / 4, _[0].y), i.lineTo(_[0].x, _[0].y), 
                        i.lineTo(_[2].x, _[2].y), i.lineTo(_[0].x, _[0].y), i.lineTo(_[0].x + l / 4, _[0].y), 
                        i.lineTo(_[1].x + l / 4, _[1].y), i.lineTo(_[1].x, _[1].y), i.moveTo(_[3].x, _[3].y)) : (i.setStrokeStyle(s.color.downLine), 
                        i.setFillStyle(s.color.downFill), i.setLineWidth(1 * n.pixelRatio), i.moveTo(_[3].x, _[3].y), 
                        i.lineTo(_[0].x, _[0].y), i.lineTo(_[0].x - l / 4, _[0].y), i.lineTo(_[1].x - l / 4, _[1].y), 
                        i.lineTo(_[1].x, _[1].y), i.lineTo(_[2].x, _[2].y), i.lineTo(_[1].x, _[1].y), i.lineTo(_[1].x + l / 4, _[1].y), 
                        i.lineTo(_[0].x + l / 4, _[0].y), i.lineTo(_[0].x, _[0].y), i.moveTo(_[3].x, _[3].y)), 
                        i.closePath(), i.fill(), i.stroke();
                    }
                }), i.restore(), {
                    xAxisPoints: u,
                    calPoints: h,
                    eachSpacing: l
                };
            }
            function Ie(e, t, n, o) {
                var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1, s = r({}, {
                    type: "straight",
                    opacity: .2,
                    addLine: !1,
                    width: 2,
                    gradient: !1
                }, t.extra.area), c = t.chartData.xAxisData, u = c.xAxisPoints, l = c.eachSpacing, h = t.height - t.area[2], f = [];
                o.save();
                var d = 0, g = t.width + l;
                return t._scrollDistance_ && 0 !== t._scrollDistance_ && !0 === t.enableScroll && (o.translate(t._scrollDistance_, 0), 
                d = -t._scrollDistance_ - l + t.area[3], g = d + (t.xAxis.itemCount + 4) * l), e.forEach(function(e, r) {
                    var c, m, v;
                    c = [].concat(t.chartData.yAxisData.ranges[e.index]), m = c.pop(), v = c.shift();
                    var y = e.data, _ = te(y, m, v, u, l, t, n, a);
                    f.push(_);
                    for (var S = G(_), I = 0; I < S.length; I++) {
                        var M = S[I];
                        if (o.beginPath(), o.setStrokeStyle(i(e.color, s.opacity)), s.gradient) {
                            var C = o.createLinearGradient(0, t.area[0], 0, t.height - t.area[2]);
                            C.addColorStop("0", i(e.color, s.opacity)), C.addColorStop("1.0", i("#FFFFFF", .1)), 
                            o.setFillStyle(C);
                        } else o.setFillStyle(i(e.color, s.opacity));
                        if (o.setLineWidth(s.width * t.pixelRatio), M.length > 1) {
                            var T = M[0], E = M[M.length - 1];
                            o.moveTo(T.x, T.y);
                            var A = 0;
                            if ("curve" === s.type) for (var b = 0; b < M.length; b++) {
                                var x = M[b];
                                if (0 == A && x.x > d && (o.moveTo(x.x, x.y), A = 1), b > 0 && x.x > d && x.x < g) {
                                    var w = p(M, b - 1);
                                    o.bezierCurveTo(w.ctrA.x, w.ctrA.y, w.ctrB.x, w.ctrB.y, x.x, x.y);
                                }
                            } else for (var D = 0; D < M.length; D++) {
                                var k = M[D];
                                0 == A && k.x > d && (o.moveTo(k.x, k.y), A = 1), D > 0 && k.x > d && k.x < g && o.lineTo(k.x, k.y);
                            }
                            o.lineTo(E.x, h), o.lineTo(T.x, h), o.lineTo(T.x, T.y);
                        } else {
                            var O = M[0];
                            o.moveTo(O.x - l / 2, O.y), o.lineTo(O.x + l / 2, O.y), o.lineTo(O.x + l / 2, h), 
                            o.lineTo(O.x - l / 2, h), o.moveTo(O.x - l / 2, O.y);
                        }
                        if (o.closePath(), o.fill(), s.addLine) {
                            if ("dash" == e.lineType) {
                                var L = e.dashLength ? e.dashLength : 8;
                                L *= t.pixelRatio, o.setLineDash([ L, L ]);
                            }
                            if (o.beginPath(), o.setStrokeStyle(e.color), o.setLineWidth(s.width * t.pixelRatio), 
                            1 === M.length) o.moveTo(M[0].x, M[0].y), o.arc(M[0].x, M[0].y, 1, 0, 2 * Math.PI); else {
                                o.moveTo(M[0].x, M[0].y);
                                var R = 0;
                                if ("curve" === s.type) for (var P = 0; P < M.length; P++) {
                                    var N = M[P];
                                    if (0 == R && N.x > d && (o.moveTo(N.x, N.y), R = 1), P > 0 && N.x > d && N.x < g) {
                                        var F = p(M, P - 1);
                                        o.bezierCurveTo(F.ctrA.x, F.ctrA.y, F.ctrB.x, F.ctrB.y, N.x, N.y);
                                    }
                                } else for (var U = 0; U < M.length; U++) {
                                    var q = M[U];
                                    0 == R && q.x > d && (o.moveTo(q.x, q.y), R = 1), U > 0 && q.x > d && q.x < g && o.lineTo(q.x, q.y);
                                }
                                o.moveTo(M[0].x, M[0].y);
                            }
                            o.stroke(), o.setLineDash([]);
                        }
                    }
                    !1 !== t.dataPointShape && ce(_, e.color, e.pointShape, o, t);
                }), !1 !== t.dataLabel && 1 === a && e.forEach(function(e, r) {
                    var i, s, c;
                    i = [].concat(t.chartData.yAxisData.ranges[e.index]), s = i.pop(), c = i.shift();
                    var p = e.data, h = te(p, s, c, u, l, t, n, a);
                    le(h, e, n, o);
                }), o.restore(), {
                    xAxisPoints: u,
                    calPoints: f,
                    eachSpacing: l
                };
            }
            function Me(e, t, n, o) {
                var i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1, a = r({}, {
                    type: "straight",
                    width: 2
                }, t.extra.line);
                a.width *= t.pixelRatio;
                var s = t.chartData.xAxisData, c = s.xAxisPoints, u = s.eachSpacing, l = [];
                o.save();
                var h = 0, f = t.width + u;
                return t._scrollDistance_ && 0 !== t._scrollDistance_ && !0 === t.enableScroll && (o.translate(t._scrollDistance_, 0), 
                h = -t._scrollDistance_ - u + t.area[3], f = h + (t.xAxis.itemCount + 4) * u), e.forEach(function(e, r) {
                    var s, d, g;
                    s = [].concat(t.chartData.yAxisData.ranges[e.index]), d = s.pop(), g = s.shift();
                    var m = e.data, v = te(m, d, g, c, u, t, n, i);
                    l.push(v);
                    var y = G(v);
                    if ("dash" == e.lineType) {
                        var _ = e.dashLength ? e.dashLength : 8;
                        _ *= t.pixelRatio, o.setLineDash([ _, _ ]);
                    }
                    o.beginPath(), o.setStrokeStyle(e.color), o.setLineWidth(a.width), y.forEach(function(e, t) {
                        if (1 === e.length) o.moveTo(e[0].x, e[0].y), o.arc(e[0].x, e[0].y, 1, 0, 2 * Math.PI); else {
                            o.moveTo(e[0].x, e[0].y);
                            var n = 0;
                            if ("curve" === a.type) for (var r = 0; r < e.length; r++) {
                                var i = e[r];
                                if (0 == n && i.x > h && (o.moveTo(i.x, i.y), n = 1), r > 0 && i.x > h && i.x < f) {
                                    var s = p(e, r - 1);
                                    o.bezierCurveTo(s.ctrA.x, s.ctrA.y, s.ctrB.x, s.ctrB.y, i.x, i.y);
                                }
                            } else for (var c = 0; c < e.length; c++) {
                                var u = e[c];
                                0 == n && u.x > h && (o.moveTo(u.x, u.y), n = 1), c > 0 && u.x > h && u.x < f && o.lineTo(u.x, u.y);
                            }
                            o.moveTo(e[0].x, e[0].y);
                        }
                    }), o.stroke(), o.setLineDash([]), !1 !== t.dataPointShape && ce(v, e.color, e.pointShape, o, t);
                }), !1 !== t.dataLabel && 1 === i && e.forEach(function(e, r) {
                    var a, s, l;
                    a = [].concat(t.chartData.yAxisData.ranges[e.index]), s = a.pop(), l = a.shift();
                    var p = e.data, h = te(p, s, l, c, u, t, n, i);
                    le(h, e, n, o);
                }), o.restore(), {
                    xAxisPoints: c,
                    calPoints: l,
                    eachSpacing: u
                };
            }
            function Ce(e, t, n, r) {
                var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1, a = t.chartData.xAxisData, s = a.xAxisPoints, c = a.eachSpacing, u = t.height - t.area[2], l = [], h = 0, f = 0;
                e.forEach(function(e, t) {
                    "column" == e.type && (f += 1);
                }), r.save();
                var d = -2, g = s.length + 2, m = 0, v = t.width + c;
                if (t._scrollDistance_ && 0 !== t._scrollDistance_ && !0 === t.enableScroll && (r.translate(t._scrollDistance_, 0), 
                d = Math.floor(-t._scrollDistance_ / c) - 2, g = d + t.xAxis.itemCount + 4, m = -t._scrollDistance_ - c + t.area[3], 
                v = m + (t.xAxis.itemCount + 4) * c), e.forEach(function(e, a) {
                    var y, _, S;
                    y = [].concat(t.chartData.yAxisData.ranges[e.index]), _ = y.pop(), S = y.shift();
                    var I = e.data, M = te(I, _, S, s, c, t, n, o);
                    if (l.push(M), "column" == e.type) {
                        M = J(M, c, f, h, n, t);
                        for (var C = 0; C < M.length; C++) {
                            var T = M[C];
                            if (null !== T && C > d && C < g) {
                                r.beginPath(), r.setStrokeStyle(T.color || e.color), r.setLineWidth(1), r.setFillStyle(T.color || e.color);
                                var E = T.x - T.width / 2;
                                t.height, T.y, t.area[2];
                                r.moveTo(E, T.y), r.moveTo(E, T.y), r.lineTo(E + T.width - 2, T.y), r.lineTo(E + T.width - 2, t.height - t.area[2]), 
                                r.lineTo(E, t.height - t.area[2]), r.lineTo(E, T.y), r.closePath(), r.stroke(), 
                                r.fill(), r.closePath(), r.fill();
                            }
                        }
                        h += 1;
                    }
                    if ("area" == e.type) for (var A = G(M), b = 0; b < A.length; b++) {
                        var x = A[b];
                        if (r.beginPath(), r.setStrokeStyle(e.color), r.setFillStyle(i(e.color, .2)), r.setLineWidth(2 * t.pixelRatio), 
                        x.length > 1) {
                            var w = x[0], D = x[x.length - 1];
                            r.moveTo(w.x, w.y);
                            var k = 0;
                            if ("curve" === e.style) for (var O = 0; O < x.length; O++) {
                                var L = x[O];
                                if (0 == k && L.x > m && (r.moveTo(L.x, L.y), k = 1), O > 0 && L.x > m && L.x < v) {
                                    var R = p(x, O - 1);
                                    r.bezierCurveTo(R.ctrA.x, R.ctrA.y, R.ctrB.x, R.ctrB.y, L.x, L.y);
                                }
                            } else for (var P = 0; P < x.length; P++) {
                                var N = x[P];
                                0 == k && N.x > m && (r.moveTo(N.x, N.y), k = 1), P > 0 && N.x > m && N.x < v && r.lineTo(N.x, N.y);
                            }
                            r.lineTo(D.x, u), r.lineTo(w.x, u), r.lineTo(w.x, w.y);
                        } else {
                            var F = x[0];
                            r.moveTo(F.x - c / 2, F.y), r.lineTo(F.x + c / 2, F.y), r.lineTo(F.x + c / 2, u), 
                            r.lineTo(F.x - c / 2, u), r.moveTo(F.x - c / 2, F.y);
                        }
                        r.closePath(), r.fill();
                    }
                    if ("line" == e.type) {
                        var U = G(M);
                        U.forEach(function(n, o) {
                            if ("dash" == e.lineType) {
                                var i = e.dashLength ? e.dashLength : 8;
                                i *= t.pixelRatio, r.setLineDash([ i, i ]);
                            }
                            if (r.beginPath(), r.setStrokeStyle(e.color), r.setLineWidth(2 * t.pixelRatio), 
                            1 === n.length) r.moveTo(n[0].x, n[0].y), r.arc(n[0].x, n[0].y, 1, 0, 2 * Math.PI); else {
                                r.moveTo(n[0].x, n[0].y);
                                var a = 0;
                                if ("curve" == e.style) for (var s = 0; s < n.length; s++) {
                                    var c = n[s];
                                    if (0 == a && c.x > m && (r.moveTo(c.x, c.y), a = 1), s > 0 && c.x > m && c.x < v) {
                                        var u = p(n, s - 1);
                                        r.bezierCurveTo(u.ctrA.x, u.ctrA.y, u.ctrB.x, u.ctrB.y, c.x, c.y);
                                    }
                                } else for (var l = 0; l < n.length; l++) {
                                    var h = n[l];
                                    0 == a && h.x > m && (r.moveTo(h.x, h.y), a = 1), l > 0 && h.x > m && h.x < v && r.lineTo(h.x, h.y);
                                }
                                r.moveTo(n[0].x, n[0].y);
                            }
                            r.stroke(), r.setLineDash([]);
                        });
                    }
                    "point" == e.type && (e.addPoint = !0), 1 == e.addPoint && "column" !== e.type && ce(M, e.color, e.pointShape, r, t);
                }), !1 !== t.dataLabel && 1 === o) {
                    h = 0;
                    e.forEach(function(e, i) {
                        var a, u, l;
                        a = [].concat(t.chartData.yAxisData.ranges[e.index]), u = a.pop(), l = a.shift();
                        var p = e.data, d = te(p, u, l, s, c, t, n, o);
                        "column" !== e.type ? le(d, e, n, r) : (d = J(d, c, f, h, n, t), le(d, e, n, r), 
                        h += 1);
                    });
                }
                return r.restore(), {
                    xAxisPoints: s,
                    calPoints: l,
                    eachSpacing: c
                };
            }
            function Te(e, t, n, r, o, i) {
                var a = e.extra.tooltip || {};
                a.horizentalLine && e.tooltip && 1 === r && ("line" == e.type || "area" == e.type || "column" == e.type || "candle" == e.type || "mix" == e.type) && me(e, t, n, o, i), 
                n.save(), e._scrollDistance_ && 0 !== e._scrollDistance_ && !0 === e.enableScroll && n.translate(e._scrollDistance_, 0), 
                e.tooltip && e.tooltip.textList && e.tooltip.textList.length && 1 === r && ye(e.tooltip.textList, e.tooltip.offset, e, t, n, o, i), 
                n.restore();
            }
            function Ee(e, t, n, r) {
                var o = t.chartData.xAxisData, i = o.xAxisPoints, a = o.startX, s = o.endX, c = o.eachSpacing, u = "center";
                "line" != t.type && "area" != t.type || (u = t.xAxis.boundaryGap);
                var p = t.height - t.area[2], h = t.area[0];
                if (t.enableScroll && t.xAxis.scrollShow) {
                    var f = t.height - t.area[2] + n.xAxisHeight, d = s - a, g = c * (i.length - 1), v = d * d / g, y = 0;
                    t._scrollDistance_ && (y = -t._scrollDistance_ * d / g), r.beginPath(), r.setLineCap("round"), 
                    r.setLineWidth(6 * t.pixelRatio), r.setStrokeStyle(t.xAxis.scrollBackgroundColor || "#EFEBEF"), 
                    r.moveTo(a, f), r.lineTo(s, f), r.stroke(), r.closePath(), r.beginPath(), r.setLineCap("round"), 
                    r.setLineWidth(6 * t.pixelRatio), r.setStrokeStyle(t.xAxis.scrollColor || "#A6A6A6"), 
                    r.moveTo(a + y, f), r.lineTo(a + y + v, f), r.stroke(), r.closePath(), r.setLineCap("butt");
                }
                if (r.save(), t._scrollDistance_ && 0 !== t._scrollDistance_ && r.translate(t._scrollDistance_, 0), 
                !0 === t.xAxis.calibration && (r.setStrokeStyle(t.xAxis.gridColor || "#cccccc"), 
                r.setLineCap("butt"), r.setLineWidth(1 * t.pixelRatio), i.forEach(function(e, n) {
                    n > 0 && (r.beginPath(), r.moveTo(e - c / 2, p), r.lineTo(e - c / 2, p + 3 * t.pixelRatio), 
                    r.closePath(), r.stroke());
                })), !0 !== t.xAxis.disableGrid && (r.setStrokeStyle(t.xAxis.gridColor || "#cccccc"), 
                r.setLineCap("butt"), r.setLineWidth(1 * t.pixelRatio), "dash" == t.xAxis.gridType && r.setLineDash([ t.xAxis.dashLength, t.xAxis.dashLength ]), 
                t.xAxis.gridEval = t.xAxis.gridEval || 1, i.forEach(function(e, n) {
                    n % t.xAxis.gridEval == 0 && (r.beginPath(), r.moveTo(e, p), r.lineTo(e, h), r.stroke());
                }), r.setLineDash([])), !0 !== t.xAxis.disabled) {
                    var _ = e.length;
                    t.xAxis.labelCount && (_ = t.xAxis.itemCount ? Math.ceil(e.length / t.xAxis.itemCount * t.xAxis.labelCount) : t.xAxis.labelCount, 
                    _ -= 1);
                    for (var S = Math.ceil(e.length / _), I = [], M = e.length, C = 0; C < M; C++) C % S !== 0 ? I.push("") : I.push(e[C]);
                    I[M - 1] = e[M - 1];
                    var T = t.xAxis.fontSize || n.fontSize;
                    0 === n._xAxisTextAngle_ ? I.forEach(function(e, o) {
                        var a = -m(String(e), T) / 2;
                        "center" == u && (a += c / 2);
                        var s = 0;
                        t.xAxis.scrollShow && (s = 6 * t.pixelRatio), r.beginPath(), r.setFontSize(T), r.setFillStyle(t.xAxis.fontColor || "#666666"), 
                        r.fillText(String(e), i[o] + a, p + T + (n.xAxisHeight - s - T) / 2), r.closePath(), 
                        r.stroke();
                    }) : I.forEach(function(e, o) {
                        r.save(), r.beginPath(), r.setFontSize(T), r.setFillStyle(t.xAxis.fontColor || "#666666");
                        var a = m(String(e), T), s = -a;
                        "center" == u && (s += c / 2);
                        var h = l(i[o] + c / 2, p + T / 2 + 5, t.height), f = h.transX, d = h.transY;
                        r.rotate(-1 * n._xAxisTextAngle_), r.translate(f, d), r.fillText(String(e), i[o] + s, p + T + 5), 
                        r.closePath(), r.stroke(), r.restore();
                    });
                }
                r.restore(), t.xAxis.axisLine && (r.beginPath(), r.setStrokeStyle(t.xAxis.axisLineColor), 
                r.setLineWidth(1 * t.pixelRatio), r.moveTo(a, t.height - t.area[2]), r.lineTo(s, t.height - t.area[2]), 
                r.stroke());
            }
            function Ae(e, t, n, r) {
                if (!0 !== t.yAxis.disableGrid) {
                    for (var o = t.height - t.area[0] - t.area[2], i = o / t.yAxis.splitNumber, a = t.area[3], s = t.chartData.xAxisData.xAxisPoints, c = t.chartData.xAxisData.eachSpacing, u = c * (s.length - 1), l = a + u, p = [], h = 0; h < t.yAxis.splitNumber + 1; h++) p.push(t.height - t.area[2] - i * h);
                    r.save(), t._scrollDistance_ && 0 !== t._scrollDistance_ && r.translate(t._scrollDistance_, 0), 
                    "dash" == t.yAxis.gridType && r.setLineDash([ t.yAxis.dashLength, t.yAxis.dashLength ]), 
                    r.setStrokeStyle(t.yAxis.gridColor), r.setLineWidth(1 * t.pixelRatio), p.forEach(function(e, t) {
                        r.beginPath(), r.moveTo(a, e), r.lineTo(l, e), r.stroke();
                    }), r.setLineDash([]), r.restore();
                }
            }
            function be(e, t, n, r) {
                if (!0 !== t.yAxis.disabled) {
                    var o = t.height - t.area[0] - t.area[2], i = o / t.yAxis.splitNumber, a = t.area[3], s = t.width - t.area[1], c = t.height - t.area[2], u = c + n.xAxisHeight;
                    t.xAxis.scrollShow && (u -= 3 * t.pixelRatio), t.xAxis.rotateLabel && (u = t.height - t.area[2] + 3), 
                    r.beginPath(), r.setFillStyle(t.background || "#ffffff"), t._scrollDistance_ < 0 && r.fillRect(0, 0, a, u), 
                    1 == t.enableScroll && r.fillRect(s, 0, t.width, u), r.closePath(), r.stroke();
                    for (var l = [], p = 0; p <= t.yAxis.splitNumber; p++) l.push(t.area[0] + i * p);
                    for (var h = t.area[3], f = t.width - t.area[1], d = function(e) {
                        var o = t.yAxis.data[e];
                        if (!0 !== o.disabled) {
                            var i = t.chartData.yAxisData.rangesFormat[e], a = o.fontSize || n.fontSize, s = t.chartData.yAxisData.yAxisWidth[e];
                            if (i.forEach(function(e, n) {
                                var i = l[n] ? l[n] : c;
                                r.beginPath(), r.setFontSize(a), r.setLineWidth(1 * t.pixelRatio), r.setStrokeStyle(o.axisLineColor || "#cccccc"), 
                                r.setFillStyle(o.fontColor || "#666666"), "left" == s.position ? (r.fillText(String(e), h - s.width, i + a / 2), 
                                1 == o.calibration && (r.moveTo(h, i), r.lineTo(h - 3 * t.pixelRatio, i))) : (r.fillText(String(e), f + 4 * t.pixelRatio, i + a / 2), 
                                1 == o.calibration && (r.moveTo(f, i), r.lineTo(f + 3 * t.pixelRatio, i))), r.closePath(), 
                                r.stroke();
                            }), !1 !== o.axisLine && (r.beginPath(), r.setStrokeStyle(o.axisLineColor || "#cccccc"), 
                            r.setLineWidth(1 * t.pixelRatio), "left" == s.position ? (r.moveTo(h, t.height - t.area[2]), 
                            r.lineTo(h, t.area[0])) : (r.moveTo(f, t.height - t.area[2]), r.lineTo(f, t.area[0])), 
                            r.stroke()), t.yAxis.showTitle) {
                                var u = o.titleFontSize || n.fontSize, p = o.title;
                                r.beginPath(), r.setFontSize(u), r.setFillStyle(o.titleFontColor || "#666666"), 
                                "left" == s.position ? r.fillText(p, h - m(p, u) / 2, t.area[0] - 10 * t.pixelRatio) : r.fillText(p, f - m(p, u) / 2, t.area[0] - 10 * t.pixelRatio), 
                                r.closePath(), r.stroke();
                            }
                            "left" == s.position ? h -= s.width + t.yAxis.padding : f += s.width + t.yAxis.padding;
                        }
                    }, g = 0; g < t.yAxis.data.length; g++) d(g);
                }
            }
            function xe(e, t, n, r, o) {
                if (!1 !== t.legend.show) {
                    var i = o.legendData, a = i.points, s = i.area, c = t.legend.padding, u = t.legend.fontSize, l = 15 * t.pixelRatio, p = 5 * t.pixelRatio, h = t.legend.itemGap, f = Math.max(t.legend.lineHeight * t.pixelRatio, u);
                    r.beginPath(), r.setLineWidth(t.legend.borderWidth), r.setStrokeStyle(t.legend.borderColor), 
                    r.setFillStyle(t.legend.backgroundColor), r.moveTo(s.start.x, s.start.y), r.rect(s.start.x, s.start.y, s.width, s.height), 
                    r.closePath(), r.fill(), r.stroke(), a.forEach(function(e, o) {
                        var a = 0, d = 0;
                        a = i.widthArr[o], d = i.heightArr[o];
                        var g = 0, v = 0;
                        "top" == t.legend.position || "bottom" == t.legend.position ? (g = s.start.x + (s.width - a) / 2, 
                        v = s.start.y + c + o * f) : (a = 0 == o ? 0 : i.widthArr[o - 1], g = s.start.x + c + a, 
                        v = s.start.y + c + (s.height - d) / 2), r.setFontSize(n.fontSize);
                        for (var y = 0; y < e.length; y++) {
                            var _ = e[y];
                            switch (_.area = [ 0, 0, 0, 0 ], _.area[0] = g, _.area[1] = v, _.area[3] = v + f, 
                            r.beginPath(), r.setLineWidth(1 * t.pixelRatio), r.setStrokeStyle(_.show ? _.color : t.legend.hiddenColor), 
                            r.setFillStyle(_.show ? _.color : t.legend.hiddenColor), _.legendShape) {
                              case "line":
                                r.moveTo(g, v + .5 * f - 2 * t.pixelRatio), r.fillRect(g, v + .5 * f - 2 * t.pixelRatio, 15 * t.pixelRatio, 4 * t.pixelRatio);
                                break;

                              case "triangle":
                                r.moveTo(g + 7.5 * t.pixelRatio, v + .5 * f - 5 * t.pixelRatio), r.lineTo(g + 2.5 * t.pixelRatio, v + .5 * f + 5 * t.pixelRatio), 
                                r.lineTo(g + 12.5 * t.pixelRatio, v + .5 * f + 5 * t.pixelRatio), r.lineTo(g + 7.5 * t.pixelRatio, v + .5 * f - 5 * t.pixelRatio);
                                break;

                              case "diamond":
                                r.moveTo(g + 7.5 * t.pixelRatio, v + .5 * f - 5 * t.pixelRatio), r.lineTo(g + 2.5 * t.pixelRatio, v + .5 * f), 
                                r.lineTo(g + 7.5 * t.pixelRatio, v + .5 * f + 5 * t.pixelRatio), r.lineTo(g + 12.5 * t.pixelRatio, v + .5 * f), 
                                r.lineTo(g + 7.5 * t.pixelRatio, v + .5 * f - 5 * t.pixelRatio);
                                break;

                              case "circle":
                                r.moveTo(g + 7.5 * t.pixelRatio, v + .5 * f), r.arc(g + 7.5 * t.pixelRatio, v + .5 * f, 5 * t.pixelRatio, 0, 2 * Math.PI);
                                break;

                              case "rect":
                                r.moveTo(g, v + .5 * f - 5 * t.pixelRatio), r.fillRect(g, v + .5 * f - 5 * t.pixelRatio, 15 * t.pixelRatio, 10 * t.pixelRatio);
                                break;

                              default:
                                r.moveTo(g, v + .5 * f - 5 * t.pixelRatio), r.fillRect(g, v + .5 * f - 5 * t.pixelRatio, 15 * t.pixelRatio, 10 * t.pixelRatio);
                            }
                            r.closePath(), r.fill(), r.stroke(), g += l + p;
                            var S = .5 * f + .5 * u - 2;
                            r.beginPath(), r.setFontSize(u), r.setFillStyle(_.show ? t.legend.fontColor : t.legend.hiddenColor), 
                            r.fillText(_.name, g, v + S), r.closePath(), r.stroke(), "top" == t.legend.position || "bottom" == t.legend.position ? (g += m(_.name, u) + h, 
                            _.area[2] = g) : (_.area[2] = g + m(_.name, u) + h, g -= l + p, v += f);
                        }
                    });
                }
            }
            function we(e, t, n, o) {
                var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1, s = r({}, {
                    activeOpacity: .5,
                    activeRadius: 10 * t.pixelRatio,
                    offsetAngle: 0,
                    labelWidth: 15 * t.pixelRatio,
                    ringWidth: 0,
                    border: !1,
                    borderWidth: 2,
                    borderColor: "#FFFFFF"
                }, t.extra.pie), c = {
                    x: t.area[3] + (t.width - t.area[1] - t.area[3]) / 2,
                    y: t.area[0] + (t.height - t.area[0] - t.area[2]) / 2
                };
                0 == n.pieChartLinePadding && (n.pieChartLinePadding = s.activeRadius);
                var u = Math.min((t.width - t.area[1] - t.area[3]) / 2 - n.pieChartLinePadding - n.pieChartTextPadding - n._pieTextMaxLength_, (t.height - t.area[0] - t.area[2]) / 2 - n.pieChartLinePadding - n.pieChartTextPadding);
                e = V(e, u, a);
                var l = s.activeRadius;
                if (e = e.map(function(e) {
                    return e._start_ += s.offsetAngle * Math.PI / 180, e;
                }), e.forEach(function(e, n) {
                    t.tooltip && t.tooltip.index == n && (o.beginPath(), o.setFillStyle(i(e.color, t.extra.pie.activeOpacity || .5)), 
                    o.moveTo(c.x, c.y), o.arc(c.x, c.y, e._radius_ + l, e._start_, e._start_ + 2 * e._proportion_ * Math.PI), 
                    o.closePath(), o.fill()), o.beginPath(), o.setLineWidth(s.borderWidth * t.pixelRatio), 
                    o.lineJoin = "round", o.setStrokeStyle(s.borderColor), o.setFillStyle(e.color), 
                    o.moveTo(c.x, c.y), o.arc(c.x, c.y, e._radius_, e._start_, e._start_ + 2 * e._proportion_ * Math.PI), 
                    o.closePath(), o.fill(), 1 == s.border && o.stroke();
                }), "ring" === t.type) {
                    var p = .6 * u;
                    "number" === typeof t.extra.pie.ringWidth && t.extra.pie.ringWidth > 0 && (p = Math.max(0, u - t.extra.pie.ringWidth)), 
                    o.beginPath(), o.setFillStyle(t.background || "#ffffff"), o.moveTo(c.x, c.y), o.arc(c.x, c.y, p, 0, 2 * Math.PI), 
                    o.closePath(), o.fill();
                }
                if (!1 !== t.dataLabel && 1 === a) {
                    for (var h = !1, f = 0, d = e.length; f < d; f++) if (e[f].data > 0) {
                        h = !0;
                        break;
                    }
                    h && fe(e, t, n, o, u, c);
                }
                return 1 === a && "ring" === t.type && ue(t, n, o, c), {
                    center: c,
                    radius: u,
                    series: e
                };
            }
            function De(e, t, n, o) {
                var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1, s = r({}, {
                    type: "area",
                    activeOpacity: .5,
                    activeRadius: 10 * t.pixelRatio,
                    offsetAngle: 0,
                    labelWidth: 15 * t.pixelRatio,
                    border: !1,
                    borderWidth: 2,
                    borderColor: "#FFFFFF"
                }, t.extra.rose);
                0 == n.pieChartLinePadding && (n.pieChartLinePadding = s.activeRadius);
                var c = {
                    x: t.area[3] + (t.width - t.area[1] - t.area[3]) / 2,
                    y: t.area[0] + (t.height - t.area[0] - t.area[2]) / 2
                }, u = Math.min((t.width - t.area[1] - t.area[3]) / 2 - n.pieChartLinePadding - n.pieChartTextPadding - n._pieTextMaxLength_, (t.height - t.area[0] - t.area[2]) / 2 - n.pieChartLinePadding - n.pieChartTextPadding), l = s.minRadius || .5 * u;
                e = H(e, s.type, l, u, a);
                var p = s.activeRadius;
                if (e = e.map(function(e) {
                    return e._start_ += (s.offsetAngle || 0) * Math.PI / 180, e;
                }), e.forEach(function(e, n) {
                    t.tooltip && t.tooltip.index == n && (o.beginPath(), o.setFillStyle(i(e.color, s.activeOpacity || .5)), 
                    o.moveTo(c.x, c.y), o.arc(c.x, c.y, p + e._radius_, e._start_, e._start_ + 2 * e._rose_proportion_ * Math.PI), 
                    o.closePath(), o.fill()), o.beginPath(), o.setLineWidth(s.borderWidth * t.pixelRatio), 
                    o.lineJoin = "round", o.setStrokeStyle(s.borderColor), o.setFillStyle(e.color), 
                    o.moveTo(c.x, c.y), o.arc(c.x, c.y, e._radius_, e._start_, e._start_ + 2 * e._rose_proportion_ * Math.PI), 
                    o.closePath(), o.fill(), 1 == s.border && o.stroke();
                }), !1 !== t.dataLabel && 1 === a) {
                    for (var h = !1, f = 0, d = e.length; f < d; f++) if (e[f].data > 0) {
                        h = !0;
                        break;
                    }
                    h && fe(e, t, n, o, u, c);
                }
                return {
                    center: c,
                    radius: u,
                    series: e
                };
            }
            function ke(e, t, n, o) {
                var i, a, s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1, c = r({}, {
                    startAngle: .75,
                    endAngle: .25,
                    type: "default",
                    width: 12 * t.pixelRatio,
                    gap: 2 * t.pixelRatio
                }, t.extra.arcbar);
                e = K(e, c, s), i = c.center ? c.center : {
                    x: t.width / 2,
                    y: t.height / 2
                }, c.radius ? a = c.radius : (a = Math.min(i.x, i.y), a -= 5 * t.pixelRatio, a -= c.width / 2);
                for (var u = 0; u < e.length; u++) {
                    var l = e[u];
                    o.setLineWidth(c.width), o.setStrokeStyle(c.backgroundColor || "#E9E9E9"), o.setLineCap("round"), 
                    o.beginPath(), "default" == c.type ? o.arc(i.x, i.y, a - (c.width + c.gap) * u, c.startAngle * Math.PI, c.endAngle * Math.PI, !1) : o.arc(i.x, i.y, a - (c.width + c.gap) * u, 0, 2 * Math.PI, !1), 
                    o.stroke(), o.setLineWidth(c.width), o.setStrokeStyle(l.color), o.setLineCap("round"), 
                    o.beginPath(), o.arc(i.x, i.y, a - (c.width + c.gap) * u, c.startAngle * Math.PI, l._proportion_ * Math.PI, !1), 
                    o.stroke();
                }
                return ue(t, n, o, i), {
                    center: i,
                    radius: a,
                    series: e
                };
            }
            function Oe(e, t, n, o, a) {
                var s = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 1, c = r({}, {
                    type: "default",
                    startAngle: .75,
                    endAngle: .25,
                    width: 15,
                    splitLine: {
                        fixRadius: 0,
                        splitNumber: 10,
                        width: 15,
                        color: "#FFFFFF",
                        childNumber: 5,
                        childWidth: 5
                    },
                    pointer: {
                        width: 15,
                        color: "auto"
                    }
                }, n.extra.gauge);
                void 0 == c.oldAngle && (c.oldAngle = c.startAngle), void 0 == c.oldData && (c.oldData = 0), 
                e = z(e, c.startAngle, c.endAngle);
                var u = {
                    x: n.width / 2,
                    y: n.height / 2
                }, l = Math.min(u.x, u.y);
                l -= 5 * n.pixelRatio, l -= c.width / 2;
                var p = l - c.width, h = 0;
                if ("progress" == c.type) {
                    var f = l - 3 * c.width;
                    a.beginPath();
                    var d = a.createLinearGradient(u.x, u.y - f, u.x, u.y + f);
                    d.addColorStop("0", i(t[0].color, .3)), d.addColorStop("1.0", i("#FFFFFF", .1)), 
                    a.setFillStyle(d), a.arc(u.x, u.y, f, 0, 2 * Math.PI, !1), a.fill(), a.setLineWidth(c.width), 
                    a.setStrokeStyle(i(t[0].color, .3)), a.setLineCap("round"), a.beginPath(), a.arc(u.x, u.y, p, c.startAngle * Math.PI, c.endAngle * Math.PI, !1), 
                    a.stroke(), h = c.startAngle - c.endAngle + 1;
                    c.splitLine.splitNumber;
                    var g = h / c.splitLine.splitNumber / c.splitLine.childNumber, m = -l - .5 * c.width - c.splitLine.fixRadius, v = -l - c.width - c.splitLine.fixRadius + c.splitLine.width;
                    a.save(), a.translate(u.x, u.y), a.rotate((c.startAngle - 1) * Math.PI);
                    for (var y = c.splitLine.splitNumber * c.splitLine.childNumber + 1, _ = t[0].data * s, S = 0; S < y; S++) a.beginPath(), 
                    _ > S / y ? a.setStrokeStyle(i(t[0].color, 1)) : a.setStrokeStyle(i(t[0].color, .3)), 
                    a.setLineWidth(3 * n.pixelRatio), a.moveTo(m, 0), a.lineTo(v, 0), a.stroke(), a.rotate(g * Math.PI);
                    a.restore(), t = K(t, c, s), a.setLineWidth(c.width), a.setStrokeStyle(t[0].color), 
                    a.setLineCap("round"), a.beginPath(), a.arc(u.x, u.y, p, c.startAngle * Math.PI, t[0]._proportion_ * Math.PI, !1), 
                    a.stroke();
                    var I = l - 2.5 * c.width;
                    a.save(), a.translate(u.x, u.y), a.rotate((t[0]._proportion_ - 1) * Math.PI), a.beginPath(), 
                    a.setLineWidth(c.width / 3);
                    var M = a.createLinearGradient(0, .6 * -I, 0, .6 * I);
                    M.addColorStop("0", i("#FFFFFF", 0)), M.addColorStop("0.5", i(t[0].color, 1)), M.addColorStop("1.0", i("#FFFFFF", 0)), 
                    a.setStrokeStyle(M), a.arc(0, 0, I, .85 * Math.PI, 1.15 * Math.PI, !1), a.stroke(), 
                    a.beginPath(), a.setLineWidth(1), a.setStrokeStyle(t[0].color), a.setFillStyle(t[0].color), 
                    a.moveTo(-I - c.width / 3 / 2, -4), a.lineTo(-I - c.width / 3 / 2 - 4, 0), a.lineTo(-I - c.width / 3 / 2, 4), 
                    a.lineTo(-I - c.width / 3 / 2, -4), a.stroke(), a.fill(), a.restore();
                } else {
                    a.setLineWidth(c.width), a.setLineCap("butt");
                    for (var C = 0; C < e.length; C++) {
                        var T = e[C];
                        a.beginPath(), a.setStrokeStyle(T.color), a.arc(u.x, u.y, l, T._startAngle_ * Math.PI, T._endAngle_ * Math.PI, !1), 
                        a.stroke();
                    }
                    a.save(), h = c.startAngle - c.endAngle + 1;
                    var E = h / c.splitLine.splitNumber, A = h / c.splitLine.splitNumber / c.splitLine.childNumber, b = -l - .5 * c.width - c.splitLine.fixRadius, x = -l - .5 * c.width - c.splitLine.fixRadius + c.splitLine.width, w = -l - .5 * c.width - c.splitLine.fixRadius + c.splitLine.childWidth;
                    a.translate(u.x, u.y), a.rotate((c.startAngle - 1) * Math.PI);
                    for (var D = 0; D < c.splitLine.splitNumber + 1; D++) a.beginPath(), a.setStrokeStyle(c.splitLine.color), 
                    a.setLineWidth(2 * n.pixelRatio), a.moveTo(b, 0), a.lineTo(x, 0), a.stroke(), a.rotate(E * Math.PI);
                    a.restore(), a.save(), a.translate(u.x, u.y), a.rotate((c.startAngle - 1) * Math.PI);
                    for (var k = 0; k < c.splitLine.splitNumber * c.splitLine.childNumber + 1; k++) a.beginPath(), 
                    a.setStrokeStyle(c.splitLine.color), a.setLineWidth(1 * n.pixelRatio), a.moveTo(b, 0), 
                    a.lineTo(w, 0), a.stroke(), a.rotate(A * Math.PI);
                    a.restore(), t = W(t, e, c, s);
                    for (var O = 0; O < t.length; O++) {
                        var L = t[O];
                        a.save(), a.translate(u.x, u.y), a.rotate((L._proportion_ - 1) * Math.PI), a.beginPath(), 
                        a.setFillStyle(L.color), a.moveTo(c.pointer.width, 0), a.lineTo(0, -c.pointer.width / 2), 
                        a.lineTo(-p, 0), a.lineTo(0, c.pointer.width / 2), a.lineTo(c.pointer.width, 0), 
                        a.closePath(), a.fill(), a.beginPath(), a.setFillStyle("#FFFFFF"), a.arc(0, 0, c.pointer.width / 6, 0, 2 * Math.PI, !1), 
                        a.fill(), a.restore();
                    }
                    !1 !== n.dataLabel && pe(c, l, u, n, o, a);
                }
                return ue(n, o, a, u), 1 === s && "gauge" === n.type && (n.extra.gauge.oldAngle = t[0]._proportion_, 
                n.extra.gauge.oldData = t[0].data), {
                    center: u,
                    radius: l,
                    innerRadius: p,
                    categories: e,
                    totalAngle: h
                };
            }
            function Le(e, t, n, o) {
                var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1, s = r({}, {
                    gridColor: "#cccccc",
                    labelColor: "#666666",
                    opacity: .2,
                    gridCount: 3
                }, t.extra.radar), c = M(t.categories.length), u = {
                    x: t.area[3] + (t.width - t.area[1] - t.area[3]) / 2,
                    y: t.area[0] + (t.height - t.area[0] - t.area[2]) / 2
                }, l = Math.min(u.x - (I(t.categories) + n.radarLabelTextMargin), u.y - n.radarLabelTextMargin);
                l -= t.padding[1], o.beginPath(), o.setLineWidth(1 * t.pixelRatio), o.setStrokeStyle(s.gridColor), 
                c.forEach(function(e) {
                    var t = h(l * Math.cos(e), l * Math.sin(e), u);
                    o.moveTo(u.x, u.y), o.lineTo(t.x, t.y);
                }), o.stroke(), o.closePath();
                for (var p = function(e) {
                    var n = {};
                    o.beginPath(), o.setLineWidth(1 * t.pixelRatio), o.setStrokeStyle(s.gridColor), 
                    c.forEach(function(t, r) {
                        var i = h(l / s.gridCount * e * Math.cos(t), l / s.gridCount * e * Math.sin(t), u);
                        0 === r ? (n = i, o.moveTo(i.x, i.y)) : o.lineTo(i.x, i.y);
                    }), o.lineTo(n.x, n.y), o.stroke(), o.closePath();
                }, f = 1; f <= s.gridCount; f++) p(f);
                var d = $(c, u, l, e, t, a);
                return d.forEach(function(e, n) {
                    if (o.beginPath(), o.setFillStyle(i(e.color, s.opacity)), e.data.forEach(function(e, t) {
                        0 === t ? o.moveTo(e.position.x, e.position.y) : o.lineTo(e.position.x, e.position.y);
                    }), o.closePath(), o.fill(), !1 !== t.dataPointShape) {
                        var r = e.data.map(function(e) {
                            return e.position;
                        });
                        ce(r, e.color, e.pointShape, o, t);
                    }
                }), he(c, l, u, t, n, o), {
                    center: u,
                    radius: l,
                    angleList: c
                };
            }
            function Re(e, t, n) {
                n = 0 == n ? 1 : n;
                for (var r = [], o = 0; o < n; o++) r[o] = Math.random();
                return Math.floor(r.reduce(function(e, t) {
                    return e + t;
                }) / n * (t - e)) + e;
            }
            function Pe(e, t, n, r) {
                for (var o = !1, i = 0; i < t.length; i++) if (t[i].area) {
                    if (!(e[3] < t[i].area[1] || e[0] > t[i].area[2] || e[1] > t[i].area[3] || e[2] < t[i].area[0])) {
                        o = !0;
                        break;
                    }
                    if (e[0] < 0 || e[1] < 0 || e[2] > n || e[3] > r) {
                        o = !0;
                        break;
                    }
                    o = !1;
                }
                return o;
            }
            function Ne(e) {
                var t, n = {};
                n.xMin = 180, n.xMax = 0, n.yMin = 90, n.yMax = 0;
                for (var r = 0; r < e.length; r++) for (var o = e[r].geometry.coordinates, i = 0; i < o.length; i++) {
                    t = o[i], 1 == t.length && (t = t[0]);
                    for (var a = 0; a < t.length; a++) {
                        var s = t[a][0], c = t[a][1], u = {
                            x: s,
                            y: c
                        };
                        n.xMin = n.xMin < u.x ? n.xMin : u.x, n.xMax = n.xMax > u.x ? n.xMax : u.x, n.yMin = n.yMin < u.y ? n.yMin : u.y, 
                        n.yMax = n.yMax > u.y ? n.yMax : u.y;
                    }
                }
                return n;
            }
            function Ge(e, t, n, r, o, i) {
                return {
                    x: (t - n.xMin) * r + o,
                    y: (n.yMax - e) * r + i
                };
            }
            function Fe(e, t, n, r, o, i) {
                return {
                    x: (t - o) / r + n.xMin,
                    y: n.yMax - (e - i) / r
                };
            }
            function Ue(e, t, n) {
                if (t[1] == n[1]) return !1;
                if (t[1] > e[1] && n[1] > e[1]) return !1;
                if (t[1] < e[1] && n[1] < e[1]) return !1;
                if (t[1] == e[1] && n[1] > e[1]) return !1;
                if (n[1] == e[1] && t[1] > e[1]) return !1;
                if (t[0] < e[0] && n[1] < e[1]) return !1;
                var r = n[0] - (n[0] - t[0]) * (n[1] - e[1]) / (n[1] - t[1]);
                return !(r < e[0]);
            }
            function qe(e, t) {
                for (var n = 0, r = 0; r < t.length; r++) {
                    var o = t[r][0];
                    1 == t.length && (o = t[r][0]);
                    for (var i = 0; i < o.length - 1; i++) {
                        var a = o[i], s = o[i + 1];
                        Ue(e, a, s) && (n += 1);
                    }
                }
                return n % 2 == 1;
            }
            function je(e, t, n, o) {
                var a, s, c = r({}, {
                    border: !0,
                    borderWidth: 1,
                    borderColor: "#666666",
                    fillOpacity: .6,
                    activeBorderColor: "#f04864",
                    activeFillColor: "#facc14",
                    activeFillOpacity: 1
                }, t.extra.map), u = e, l = Ne(u), p = t.width / Math.abs(l.xMax - l.xMin), h = t.height / Math.abs(l.yMax - l.yMin), f = p < h ? p : h, d = t.width / 2 - Math.abs(l.xMax - l.xMin) / 2 * f, g = t.height / 2 - Math.abs(l.yMax - l.yMin) / 2 * f;
                o.beginPath(), o.clearRect(0, 0, t.width, t.height), o.setFillStyle(t.background || "#FFFFFF"), 
                o.rect(0, 0, t.width, t.height), o.fill();
                for (var v = 0; v < u.length; v++) {
                    o.beginPath(), o.setLineWidth(c.borderWidth * t.pixelRatio), o.setStrokeStyle(c.borderColor), 
                    o.setFillStyle(i(e[v].color, c.fillOpacity)), t.tooltip && t.tooltip.index == v && (o.setStrokeStyle(c.activeBorderColor), 
                    o.setFillStyle(i(c.activeFillColor, c.activeFillOpacity)));
                    for (var y = u[v].geometry.coordinates, _ = 0; _ < y.length; _++) {
                        a = y[_], 1 == a.length && (a = a[0]);
                        for (var S = 0; S < a.length; S++) s = Ge(a[S][1], a[S][0], l, f, d, g), 0 === S ? (o.beginPath(), 
                        o.moveTo(s.x, s.y)) : o.lineTo(s.x, s.y);
                        o.fill(), 1 == c.border && o.stroke();
                    }
                    if (1 == t.dataLabel) {
                        var I = u[v].properties.centroid;
                        if (I) {
                            s = Ge(I[1], I[0], l, f, d, g);
                            var M = u[v].textSize || n.fontSize, C = u[v].properties.name;
                            o.beginPath(), o.setFontSize(M), o.setFillStyle(u[v].textColor || "#666666"), o.fillText(C, s.x - m(C, M) / 2, s.y + M / 2), 
                            o.closePath(), o.stroke();
                        }
                    }
                }
                t.chartData.mapData = {
                    bounds: l,
                    scale: f,
                    xoffset: d,
                    yoffset: g
                }, Te(t, n, o, 1), o.draw();
            }
            function $e(e, t) {
                var n = e.series.sort(function(e, t) {
                    return parseInt(t.textSize) - parseInt(e.textSize);
                });
                switch (t) {
                  case "normal":
                    for (var r = 0; r < n.length; r++) {
                        var o = n[r].name, i = n[r].textSize, a = m(o, i), s = void 0, c = void 0, u = void 0, l = 0;
                        while (1) {
                            l++, s = Re(-e.width / 2, e.width / 2, 5) - a / 2, c = Re(-e.height / 2, e.height / 2, 5) + i / 2, 
                            u = [ s - 5 + e.width / 2, c - 5 - i + e.height / 2, s + a + 5 + e.width / 2, c + 5 + e.height / 2 ];
                            var p = Pe(u, n, e.width, e.height);
                            if (!p) break;
                            if (1e3 == l) {
                                u = [ -100, -100, -100, -100 ];
                                break;
                            }
                        }
                        n[r].area = u;
                    }
                    break;

                  case "vertical":
                    for (var h = function() {
                        return Math.random() > .7;
                    }, f = 0; f < n.length; f++) {
                        var d = n[f].name, g = n[f].textSize, v = m(d, g), y = h(), _ = void 0, S = void 0, I = void 0, M = void 0, C = 0;
                        while (1) {
                            C++;
                            var T = void 0;
                            if (y ? (_ = Re(-e.width / 2, e.width / 2, 5) - v / 2, S = Re(-e.height / 2, e.height / 2, 5) + g / 2, 
                            I = [ S - 5 - v + e.width / 2, -_ - 5 + e.height / 2, S + 5 + e.width / 2, -_ + g + 5 + e.height / 2 ], 
                            M = [ e.width - (e.width / 2 - e.height / 2) - (-_ + g + 5 + e.height / 2) - 5, e.height / 2 - e.width / 2 + (S - 5 - v + e.width / 2) - 5, e.width - (e.width / 2 - e.height / 2) - (-_ + g + 5 + e.height / 2) + g, e.height / 2 - e.width / 2 + (S - 5 - v + e.width / 2) + v + 5 ], 
                            T = Pe(M, n, e.height, e.width)) : (_ = Re(-e.width / 2, e.width / 2, 5) - v / 2, 
                            S = Re(-e.height / 2, e.height / 2, 5) + g / 2, I = [ _ - 5 + e.width / 2, S - 5 - g + e.height / 2, _ + v + 5 + e.width / 2, S + 5 + e.height / 2 ], 
                            T = Pe(I, n, e.width, e.height)), !T) break;
                            if (1e3 == C) {
                                I = [ -1e3, -1e3, -1e3, -1e3 ];
                                break;
                            }
                        }
                        y ? (n[f].area = M, n[f].areav = I) : n[f].area = I, n[f].rotate = y;
                    }
                    break;
                }
                return n;
            }
            function Ve(e, t, n, o) {
                var i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1;
                r({}, {
                    type: "normal",
                    autoColors: !0
                }, t.extra.word);
                o.beginPath(), o.setFillStyle(t.background || "#FFFFFF"), o.rect(0, 0, t.width, t.height), 
                o.fill(), o.save();
                var a = t.chartData.wordCloudData;
                o.translate(t.width / 2, t.height / 2);
                for (var s = 0; s < a.length; s++) {
                    o.save(), a[s].rotate && o.rotate(90 * Math.PI / 180);
                    var c = a[s].name, u = a[s].textSize, l = m(c, u);
                    o.beginPath(), o.setStrokeStyle(a[s].color), o.setFillStyle(a[s].color), o.setFontSize(u), 
                    a[s].rotate ? a[s].areav[0] > 0 && (t.tooltip && t.tooltip.index == s ? o.strokeText(c, (a[s].areav[0] + 5 - t.width / 2) * i - l * (1 - i) / 2, (a[s].areav[1] + 5 + u - t.height / 2) * i) : o.fillText(c, (a[s].areav[0] + 5 - t.width / 2) * i - l * (1 - i) / 2, (a[s].areav[1] + 5 + u - t.height / 2) * i)) : a[s].area[0] > 0 && (t.tooltip && t.tooltip.index == s ? o.strokeText(c, (a[s].area[0] + 5 - t.width / 2) * i - l * (1 - i) / 2, (a[s].area[1] + 5 + u - t.height / 2) * i) : o.fillText(c, (a[s].area[0] + 5 - t.width / 2) * i - l * (1 - i) / 2, (a[s].area[1] + 5 + u - t.height / 2) * i)), 
                    o.stroke(), o.restore();
                }
                o.restore();
            }
            function Be(e, t, n, o) {
                var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1, s = r({}, {
                    activeWidth: 10,
                    activeOpacity: .3,
                    border: !1,
                    borderWidth: 2,
                    borderColor: "#FFFFFF",
                    fillOpacity: 1,
                    labelAlign: "right"
                }, t.extra.funnel), c = (t.height - t.area[0] - t.area[2]) / e.length, u = {
                    x: t.area[3] + (t.width - t.area[1] - t.area[3]) / 2,
                    y: t.height - t.area[2]
                }, l = s.activeWidth, p = Math.min((t.width - t.area[1] - t.area[3]) / 2 - l, (t.height - t.area[0] - t.area[2]) / 2 - l);
                e = B(e, p, a), o.save(), o.translate(u.x, u.y);
                for (var h = 0; h < e.length; h++) 0 == h ? (t.tooltip && t.tooltip.index == h && (o.beginPath(), 
                o.setFillStyle(i(e[h].color, s.activeOpacity)), o.moveTo(-l, 0), o.lineTo(-e[h].radius - l, -c), 
                o.lineTo(e[h].radius + l, -c), o.lineTo(l, 0), o.lineTo(-l, 0), o.closePath(), o.fill()), 
                e[h].funnelArea = [ u.x - e[h].radius, u.y - c, u.x + e[h].radius, u.y ], o.beginPath(), 
                o.setLineWidth(s.borderWidth * t.pixelRatio), o.setStrokeStyle(s.borderColor), o.setFillStyle(i(e[h].color, s.fillOpacity)), 
                o.moveTo(0, 0), o.lineTo(-e[h].radius, -c), o.lineTo(e[h].radius, -c), o.lineTo(0, 0), 
                o.closePath(), o.fill(), 1 == s.border && o.stroke()) : (t.tooltip && t.tooltip.index == h && (o.beginPath(), 
                o.setFillStyle(i(e[h].color, s.activeOpacity)), o.moveTo(0, 0), o.lineTo(-e[h - 1].radius - l, 0), 
                o.lineTo(-e[h].radius - l, -c), o.lineTo(e[h].radius + l, -c), o.lineTo(e[h - 1].radius + l, 0), 
                o.lineTo(0, 0), o.closePath(), o.fill()), e[h].funnelArea = [ u.x - e[h].radius, u.y - c * (h + 1), u.x + e[h].radius, u.y - c * h ], 
                o.beginPath(), o.setLineWidth(s.borderWidth * t.pixelRatio), o.setStrokeStyle(s.borderColor), 
                o.setFillStyle(i(e[h].color, s.fillOpacity)), o.moveTo(0, 0), o.lineTo(-e[h - 1].radius, 0), 
                o.lineTo(-e[h].radius, -c), o.lineTo(e[h].radius, -c), o.lineTo(e[h - 1].radius, 0), 
                o.lineTo(0, 0), o.closePath(), o.fill(), 1 == s.border && o.stroke()), o.translate(0, -c);
                return o.restore(), !1 !== t.dataLabel && 1 === a && He(e, t, o, c, s.labelAlign, l, u), 
                {
                    center: u,
                    radius: p,
                    series: e
                };
            }
            function He(e, t, n, r, i, a, s) {
                for (var c = 0; c < e.length; c++) {
                    var u = e[c], l = void 0, p = void 0, h = void 0, f = void 0, d = u.format ? u.format(+u._proportion_.toFixed(2)) : o.toFixed(100 * u._proportion_) + "%";
                    "right" == i ? (l = 0 == c ? (u.funnelArea[2] + s.x) / 2 : (u.funnelArea[2] + e[c - 1].funnelArea[2]) / 2, 
                    p = l + 2 * a, h = u.funnelArea[1] + r / 2, f = u.textSize || t.fontSize, n.setLineWidth(1 * t.pixelRatio), 
                    n.setStrokeStyle(u.color), n.setFillStyle(u.color), n.beginPath(), n.moveTo(l, h), 
                    n.lineTo(p, h), n.stroke(), n.closePath(), n.beginPath(), n.moveTo(p, h), n.arc(p, h, 2, 0, 2 * Math.PI), 
                    n.closePath(), n.fill(), n.beginPath(), n.setFontSize(f), n.setFillStyle(u.textColor || "#666666"), 
                    n.fillText(d, p + 5, h + f / 2 - 2), n.closePath(), n.stroke(), n.closePath()) : (l = 0 == c ? (u.funnelArea[0] + s.x) / 2 : (u.funnelArea[0] + e[c - 1].funnelArea[0]) / 2, 
                    p = l - 2 * a, h = u.funnelArea[1] + r / 2, f = u.textSize || t.fontSize, n.setLineWidth(1 * t.pixelRatio), 
                    n.setStrokeStyle(u.color), n.setFillStyle(u.color), n.beginPath(), n.moveTo(l, h), 
                    n.lineTo(p, h), n.stroke(), n.closePath(), n.beginPath(), n.moveTo(p, h), n.arc(p, h, 2, 0, 2 * Math.PI), 
                    n.closePath(), n.fill(), n.beginPath(), n.setFontSize(f), n.setFillStyle(u.textColor || "#666666"), 
                    n.fillText(d, p - 5 - m(d), h + f / 2 - 2), n.closePath(), n.stroke(), n.closePath());
                }
            }
            function Ke(e, t) {
                t.draw();
            }
            var ze = {
                easeIn: function(e) {
                    return Math.pow(e, 3);
                },
                easeOut: function(e) {
                    return Math.pow(e - 1, 3) + 1;
                },
                easeInOut: function(e) {
                    return (e /= .5) < 1 ? .5 * Math.pow(e, 3) : .5 * (Math.pow(e - 2, 3) + 2);
                },
                linear: function(e) {
                    return e;
                }
            };
            function We(e) {
                this.isStop = !1, e.duration = "undefined" === typeof e.duration ? 1e3 : e.duration, 
                e.timing = e.timing || "linear";
                var t = 17;
                function n() {
                    return "undefined" !== typeof setTimeout ? function(e, t) {
                        setTimeout(function() {
                            var t = +new Date();
                            e(t);
                        }, t);
                    } : "undefined" !== typeof requestAnimationFrame ? requestAnimationFrame : function(e) {
                        e(null);
                    };
                }
                var r = n(), o = null, i = function(n) {
                    if (null === n || !0 === this.isStop) return e.onProcess && e.onProcess(1), void (e.onAnimationFinish && e.onAnimationFinish());
                    if (null === o && (o = n), n - o < e.duration) {
                        var a = (n - o) / e.duration, s = ze[e.timing];
                        a = s(a), e.onProcess && e.onProcess(a), r(i, t);
                    } else e.onProcess && e.onProcess(1), e.onAnimationFinish && e.onAnimationFinish();
                };
                i = i.bind(this), r(i, t);
            }
            function Ye(e, t, n, o) {
                var i = this, a = t.series, c = t.categories;
                a = d(a, t, n);
                var u = t.animation ? t.duration : 0;
                i.animationInstance && i.animationInstance.stop();
                var l = null;
                if ("candle" == e) {
                    var p = r({}, t.extra.candle.average);
                    p.show ? (l = s(p.day, p.name, p.color, a[0].data), l = d(l, t, n), t.seriesMA = l) : l = t.seriesMA ? t.seriesMA = d(t.seriesMA, t, n) : a;
                } else l = a;
                t._series_ = a = A(a), t.area = new Array(4);
                for (var h = 0; h < 4; h++) t.area[h] = t.padding[h];
                var f = F(l, t, n, t.chartData), g = f.area.wholeHeight, m = f.area.wholeWidth;
                switch (t.legend.position) {
                  case "top":
                    t.area[0] += g;
                    break;

                  case "bottom":
                    t.area[2] += g;
                    break;

                  case "left":
                    t.area[3] += m;
                    break;

                  case "right":
                    t.area[1] += m;
                    break;
                }
                var v = {}, y = 0;
                if ("line" === t.type || "column" === t.type || "area" === t.type || "mix" === t.type || "candle" === t.type) {
                    if (v = oe(a, t, n), y = v.yAxisWidth, t.yAxis.showTitle) {
                        for (var _ = 0, S = 0; S < t.yAxis.data.length; S++) _ = Math.max(_, t.yAxis.data[S].titleFontSize ? t.yAxis.data[S].titleFontSize : n.fontSize);
                        t.area[0] += (_ + 6) * t.pixelRatio;
                    }
                    for (var I = 0, M = 0, C = 0; C < y.length; C++) "left" == y[C].position ? (t.area[3] += M > 0 ? y[C].width + t.yAxis.padding : y[C].width, 
                    M += 1) : (t.area[1] += I > 0 ? y[C].width + t.yAxis.padding : y[C].width, I += 1);
                } else n.yAxisWidth = y;
                if (t.chartData.yAxisData = v, t.categories && t.categories.length) {
                    t.chartData.xAxisData = Z(t.categories, t, n);
                    var T = U(t.categories, t, n, t.chartData.xAxisData.eachSpacing), E = T.xAxisHeight, b = T.angle;
                    n.xAxisHeight = E, n._xAxisTextAngle_ = b, t.area[2] += E, t.chartData.categoriesData = T;
                } else if ("line" === t.type || "area" === t.type || "points" === t.type) {
                    t.chartData.xAxisData = j(a, t, n), c = t.chartData.xAxisData.rangesFormat;
                    var x = U(c, t, n, t.chartData.xAxisData.eachSpacing), w = x.xAxisHeight, D = x.angle;
                    n.xAxisHeight = w, n._xAxisTextAngle_ = D, t.area[2] += w, t.chartData.categoriesData = x;
                } else t.chartData.xAxisData = {
                    xAxisPoints: []
                };
                if (t.enableScroll && "right" == t.xAxis.scrollAlign && void 0 === t._scrollDistance_) {
                    var k = 0, O = t.chartData.xAxisData.xAxisPoints, L = t.chartData.xAxisData.startX, R = t.chartData.xAxisData.endX, P = t.chartData.xAxisData.eachSpacing, N = P * (O.length - 1), G = R - L;
                    k = G - N, i.scrollOption = {
                        currentOffset: k,
                        startTouchX: k,
                        distance: 0,
                        lastMoveTime: 0
                    }, t._scrollDistance_ = k;
                }
                switch ("pie" !== e && "ring" !== e && "rose" !== e || (n._pieTextMaxLength_ = !1 === t.dataLabel ? 0 : Y(l)), 
                e) {
                  case "word":
                    var q = r({}, {
                        type: "normal",
                        autoColors: !0
                    }, t.extra.word);
                    1 != t.updateData && void 0 != t.updateData || (t.chartData.wordCloudData = $e(t, q.type)), 
                    this.animationInstance = new We({
                        timing: "easeInOut",
                        duration: u,
                        onProcess: function(e) {
                            o.clearRect(0, 0, t.width, t.height), t.rotate && se(o, t), Ve(a, t, n, o, e), Ke(t, o);
                        },
                        onAnimationFinish: function() {
                            i.event.trigger("renderComplete");
                        }
                    });
                    break;

                  case "map":
                    o.clearRect(0, 0, t.width, t.height), je(a, t, n, o);
                    break;

                  case "funnel":
                    this.animationInstance = new We({
                        timing: "easeInOut",
                        duration: u,
                        onProcess: function(e) {
                            o.clearRect(0, 0, t.width, t.height), t.rotate && se(o, t), t.chartData.funnelData = Be(a, t, n, o, e), 
                            xe(t.series, t, n, o, t.chartData), Te(t, n, o, e), Ke(t, o);
                        },
                        onAnimationFinish: function() {
                            i.event.trigger("renderComplete");
                        }
                    });
                    break;

                  case "line":
                    this.animationInstance = new We({
                        timing: "easeIn",
                        duration: u,
                        onProcess: function(e) {
                            o.clearRect(0, 0, t.width, t.height), t.rotate && se(o, t), Ae(c, t, n, o), Ee(c, t, n, o);
                            var r = Me(a, t, n, o, e), i = r.xAxisPoints, s = r.calPoints, u = r.eachSpacing;
                            t.chartData.xAxisPoints = i, t.chartData.calPoints = s, t.chartData.eachSpacing = u, 
                            be(a, t, n, o), !1 !== t.enableMarkLine && 1 === e && ge(t, n, o), xe(t.series, t, n, o, t.chartData), 
                            Te(t, n, o, e, u, i), Ke(t, o);
                        },
                        onAnimationFinish: function() {
                            i.event.trigger("renderComplete");
                        }
                    });
                    break;

                  case "mix":
                    this.animationInstance = new We({
                        timing: "easeIn",
                        duration: u,
                        onProcess: function(e) {
                            o.clearRect(0, 0, t.width, t.height), t.rotate && se(o, t), Ae(c, t, n, o), Ee(c, t, n, o);
                            var r = Ce(a, t, n, o, e), i = r.xAxisPoints, s = r.calPoints, u = r.eachSpacing;
                            t.chartData.xAxisPoints = i, t.chartData.calPoints = s, t.chartData.eachSpacing = u, 
                            be(a, t, n, o), !1 !== t.enableMarkLine && 1 === e && ge(t, n, o), xe(t.series, t, n, o, t.chartData), 
                            Te(t, n, o, e, u, i), Ke(t, o);
                        },
                        onAnimationFinish: function() {
                            i.event.trigger("renderComplete");
                        }
                    });
                    break;

                  case "column":
                    this.animationInstance = new We({
                        timing: "easeIn",
                        duration: u,
                        onProcess: function(e) {
                            o.clearRect(0, 0, t.width, t.height), t.rotate && se(o, t), Ae(c, t, n, o), Ee(c, t, n, o);
                            var r = _e(a, t, n, o, e), i = r.xAxisPoints, s = r.calPoints, u = r.eachSpacing;
                            t.chartData.xAxisPoints = i, t.chartData.calPoints = s, t.chartData.eachSpacing = u, 
                            be(a, t, n, o), !1 !== t.enableMarkLine && 1 === e && ge(t, n, o), xe(t.series, t, n, o, t.chartData), 
                            Te(t, n, o, e, u, i), Ke(t, o);
                        },
                        onAnimationFinish: function() {
                            i.event.trigger("renderComplete");
                        }
                    });
                    break;

                  case "area":
                    this.animationInstance = new We({
                        timing: "easeIn",
                        duration: u,
                        onProcess: function(e) {
                            o.clearRect(0, 0, t.width, t.height), t.rotate && se(o, t), Ae(c, t, n, o), Ee(c, t, n, o);
                            var r = Ie(a, t, n, o, e), i = r.xAxisPoints, s = r.calPoints, u = r.eachSpacing;
                            t.chartData.xAxisPoints = i, t.chartData.calPoints = s, t.chartData.eachSpacing = u, 
                            be(a, t, n, o), !1 !== t.enableMarkLine && 1 === e && ge(t, n, o), xe(t.series, t, n, o, t.chartData), 
                            Te(t, n, o, e, u, i), Ke(t, o);
                        },
                        onAnimationFinish: function() {
                            i.event.trigger("renderComplete");
                        }
                    });
                    break;

                  case "ring":
                  case "pie":
                    this.animationInstance = new We({
                        timing: "easeInOut",
                        duration: u,
                        onProcess: function(e) {
                            o.clearRect(0, 0, t.width, t.height), t.rotate && se(o, t), t.chartData.pieData = we(a, t, n, o, e), 
                            xe(t.series, t, n, o, t.chartData), Te(t, n, o, e), Ke(t, o);
                        },
                        onAnimationFinish: function() {
                            i.event.trigger("renderComplete");
                        }
                    });
                    break;

                  case "rose":
                    this.animationInstance = new We({
                        timing: "easeInOut",
                        duration: u,
                        onProcess: function(e) {
                            o.clearRect(0, 0, t.width, t.height), t.rotate && se(o, t), t.chartData.pieData = De(a, t, n, o, e), 
                            xe(t.series, t, n, o, t.chartData), Te(t, n, o, e), Ke(t, o);
                        },
                        onAnimationFinish: function() {
                            i.event.trigger("renderComplete");
                        }
                    });
                    break;

                  case "radar":
                    this.animationInstance = new We({
                        timing: "easeInOut",
                        duration: u,
                        onProcess: function(e) {
                            o.clearRect(0, 0, t.width, t.height), t.rotate && se(o, t), t.chartData.radarData = Le(a, t, n, o, e), 
                            xe(t.series, t, n, o, t.chartData), Te(t, n, o, e), Ke(t, o);
                        },
                        onAnimationFinish: function() {
                            i.event.trigger("renderComplete");
                        }
                    });
                    break;

                  case "arcbar":
                    this.animationInstance = new We({
                        timing: "easeInOut",
                        duration: u,
                        onProcess: function(e) {
                            o.clearRect(0, 0, t.width, t.height), t.rotate && se(o, t), t.chartData.arcbarData = ke(a, t, n, o, e), 
                            Ke(t, o);
                        },
                        onAnimationFinish: function() {
                            i.event.trigger("renderComplete");
                        }
                    });
                    break;

                  case "gauge":
                    this.animationInstance = new We({
                        timing: "easeInOut",
                        duration: u,
                        onProcess: function(e) {
                            o.clearRect(0, 0, t.width, t.height), t.rotate && se(o, t), t.chartData.gaugeData = Oe(c, a, t, n, o, e), 
                            Ke(t, o);
                        },
                        onAnimationFinish: function() {
                            i.event.trigger("renderComplete");
                        }
                    });
                    break;

                  case "candle":
                    this.animationInstance = new We({
                        timing: "easeIn",
                        duration: u,
                        onProcess: function(e) {
                            o.clearRect(0, 0, t.width, t.height), t.rotate && se(o, t), Ae(c, t, n, o), Ee(c, t, n, o);
                            var r = Se(a, l, t, n, o, e), i = r.xAxisPoints, s = r.calPoints, u = r.eachSpacing;
                            t.chartData.xAxisPoints = i, t.chartData.calPoints = s, t.chartData.eachSpacing = u, 
                            be(a, t, n, o), !1 !== t.enableMarkLine && 1 === e && ge(t, n, o), xe(l || t.series, t, n, o, t.chartData), 
                            Te(t, n, o, e, u, i), Ke(t, o);
                        },
                        onAnimationFinish: function() {
                            i.event.trigger("renderComplete");
                        }
                    });
                    break;
                }
            }
            function Je() {
                this.events = {};
            }
            We.prototype.stop = function() {
                this.isStop = !0;
            }, Je.prototype.addEventListener = function(e, t) {
                this.events[e] = this.events[e] || [], this.events[e].push(t);
            }, Je.prototype.trigger = function() {
                for (var e = arguments.length, t = Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                var r = t[0], o = t.slice(1);
                this.events[r] && this.events[r].forEach(function(e) {
                    try {
                        e.apply(null, o);
                    } catch (t) {
                        console.error(t);
                    }
                });
            };
            var Xe = function(e) {
                e.pixelRatio = e.pixelRatio ? e.pixelRatio : 1, e.fontSize = e.fontSize ? e.fontSize * e.pixelRatio : 13 * e.pixelRatio, 
                e.title = r({}, e.title), e.subtitle = r({}, e.subtitle), e.duration = e.duration ? e.duration : 1e3, 
                e.yAxis = r({}, {
                    data: [],
                    showTitle: !1,
                    disabled: !1,
                    disableGrid: !1,
                    splitNumber: 5,
                    gridType: "solid",
                    dashLength: 4 * e.pixelRatio,
                    gridColor: "#cccccc",
                    padding: 10,
                    fontColor: "#666666"
                }, e.yAxis), e.yAxis.dashLength *= e.pixelRatio, e.yAxis.padding *= e.pixelRatio, 
                e.xAxis = r({}, {
                    rotateLabel: !1,
                    type: "calibration",
                    gridType: "solid",
                    dashLength: 4,
                    scrollAlign: "left",
                    boundaryGap: "center",
                    axisLine: !0,
                    axisLineColor: "#cccccc"
                }, e.xAxis), e.xAxis.dashLength *= e.pixelRatio, e.legend = r({}, {
                    show: !0,
                    position: "bottom",
                    float: "center",
                    backgroundColor: "rgba(0,0,0,0)",
                    borderColor: "rgba(0,0,0,0)",
                    borderWidth: 0,
                    padding: 5,
                    margin: 5,
                    itemGap: 10,
                    fontSize: e.fontSize,
                    lineHeight: e.fontSize,
                    fontColor: "#333333",
                    format: {},
                    hiddenColor: "#CECECE"
                }, e.legend), e.legend.borderWidth = e.legend.borderWidth * e.pixelRatio, e.legend.itemGap = e.legend.itemGap * e.pixelRatio, 
                e.legend.padding = e.legend.padding * e.pixelRatio, e.legend.margin = e.legend.margin * e.pixelRatio, 
                e.extra = r({}, e.extra), e.rotate = !!e.rotate, e.animation = !!e.animation, e.rotate = !!e.rotate, 
                e.canvas2d = !!e.canvas2d;
                var o = JSON.parse(JSON.stringify(n));
                if (o.colors = e.colors ? e.colors : o.colors, o.yAxisTitleWidth = !0 !== e.yAxis.disabled && e.yAxis.title ? o.yAxisTitleWidth : 0, 
                "pie" != e.type && "ring" != e.type || (o.pieChartLinePadding = !1 === e.dataLabel ? 0 : e.extra.pie.labelWidth * e.pixelRatio || o.pieChartLinePadding * e.pixelRatio), 
                "rose" == e.type && (o.pieChartLinePadding = !1 === e.dataLabel ? 0 : e.extra.rose.labelWidth * e.pixelRatio || o.pieChartLinePadding * e.pixelRatio), 
                o.pieChartTextPadding = !1 === e.dataLabel ? 0 : o.pieChartTextPadding * e.pixelRatio, 
                o.yAxisSplit = e.yAxis.splitNumber ? e.yAxis.splitNumber : n.yAxisSplit, o.rotate = e.rotate, 
                e.rotate) {
                    var i = e.width, a = e.height;
                    e.width = a, e.height = i;
                }
                e.padding = e.padding ? e.padding : o.padding;
                for (var s = 0; s < 4; s++) e.padding[s] *= e.pixelRatio;
                o.yAxisWidth = n.yAxisWidth * e.pixelRatio, o.xAxisHeight = n.xAxisHeight * e.pixelRatio, 
                e.enableScroll && e.xAxis.scrollShow && (o.xAxisHeight += 6 * e.pixelRatio), o.xAxisLineHeight = n.xAxisLineHeight * e.pixelRatio, 
                o.fontSize = e.fontSize, o.titleFontSize = n.titleFontSize * e.pixelRatio, o.subtitleFontSize = n.subtitleFontSize * e.pixelRatio, 
                o.toolTipPadding = n.toolTipPadding * e.pixelRatio, o.toolTipLineHeight = n.toolTipLineHeight * e.pixelRatio, 
                o.columePadding = n.columePadding * e.pixelRatio, e.$this = e.$this ? e.$this : this, 
                this.context = e.context ? e.context : t.createCanvasContext(e.canvasId, e.$this), 
                e.canvas2d && (this.context.setStrokeStyle = function(e) {
                    return this.strokeStyle = e;
                }, this.context.setLineWidth = function(e) {
                    return this.lineWidth = e;
                }, this.context.setLineCap = function(e) {
                    return this.lineCap = e;
                }, this.context.setFontSize = function(e) {
                    return this.font = e + "px sans-serif";
                }, this.context.setFillStyle = function(e) {
                    return this.fillStyle = e;
                }, this.context.draw = function() {}), e.chartData = {}, this.event = new Je(), 
                this.scrollOption = {
                    currentOffset: 0,
                    startTouchX: 0,
                    distance: 0,
                    lastMoveTime: 0
                }, this.opts = e, this.config = o, Ye.call(this, e.type, e, o, this.context);
            };
            Xe.prototype.updateData = function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                this.opts = r({}, this.opts, e), this.opts.updateData = !0;
                var t = e.scrollPosition || "current";
                switch (t) {
                  case "current":
                    this.opts._scrollDistance_ = this.scrollOption.currentOffset;
                    break;

                  case "left":
                    this.opts._scrollDistance_ = 0, this.scrollOption = {
                        currentOffset: 0,
                        startTouchX: 0,
                        distance: 0,
                        lastMoveTime: 0
                    };
                    break;

                  case "right":
                    var n = oe(this.opts.series, this.opts, this.config), o = n.yAxisWidth;
                    this.config.yAxisWidth = o;
                    var i = 0, a = Z(this.opts.categories, this.opts, this.config), s = a.xAxisPoints, c = a.startX, u = a.endX, l = a.eachSpacing, p = l * (s.length - 1), h = u - c;
                    i = h - p, this.scrollOption = {
                        currentOffset: i,
                        startTouchX: i,
                        distance: 0,
                        lastMoveTime: 0
                    }, this.opts._scrollDistance_ = i;
                    break;
                }
                Ye.call(this, this.opts.type, this.opts, this.config, this.context);
            }, Xe.prototype.zoom = function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.opts.xAxis.itemCount;
                if (!0 === this.opts.enableScroll) {
                    var t = Math.round(Math.abs(this.scrollOption.currentOffset) / this.opts.chartData.eachSpacing) + Math.round(this.opts.xAxis.itemCount / 2);
                    this.opts.animation = !1, this.opts.xAxis.itemCount = e.itemCount;
                    var n = oe(this.opts.series, this.opts, this.config), r = n.yAxisWidth;
                    this.config.yAxisWidth = r;
                    var o = 0, i = Z(this.opts.categories, this.opts, this.config), a = i.xAxisPoints, s = i.startX, c = i.endX, u = i.eachSpacing, l = u * t, p = c - s, h = p - u * (a.length - 1);
                    o = p / 2 - l, o > 0 && (o = 0), o < h && (o = h), this.scrollOption = {
                        currentOffset: o,
                        startTouchX: o,
                        distance: 0,
                        lastMoveTime: 0
                    }, this.opts._scrollDistance_ = o, Ye.call(this, this.opts.type, this.opts, this.config, this.context);
                } else console.log("请启用滚动条后使用！");
            }, Xe.prototype.stopAnimation = function() {
                this.animationInstance && this.animationInstance.stop();
            }, Xe.prototype.addEventListener = function(e, t) {
                this.event.addEventListener(e, t);
            }, Xe.prototype.getCurrentDataIndex = function(e) {
                var t = null;
                if (t = e.changedTouches ? e.changedTouches[0] : e.mp.changedTouches[0], t) {
                    var n = _(t, this.opts, e);
                    return "pie" === this.opts.type || "ring" === this.opts.type || "rose" === this.opts.type ? P({
                        x: n.x,
                        y: n.y
                    }, this.opts.chartData.pieData) : "radar" === this.opts.type ? k({
                        x: n.x,
                        y: n.y
                    }, this.opts.chartData.radarData, this.opts.categories.length) : "funnel" === this.opts.type ? O({
                        x: n.x,
                        y: n.y
                    }, this.opts.chartData.funnelData) : "map" === this.opts.type ? R({
                        x: n.x,
                        y: n.y
                    }, this.opts) : "word" === this.opts.type ? L({
                        x: n.x,
                        y: n.y
                    }, this.opts.chartData.wordCloudData) : b({
                        x: n.x,
                        y: n.y
                    }, this.opts.chartData.calPoints, this.opts, this.config, Math.abs(this.scrollOption.currentOffset));
                }
                return -1;
            }, Xe.prototype.getLegendDataIndex = function(e) {
                var t = null;
                if (t = e.changedTouches ? e.changedTouches[0] : e.mp.changedTouches[0], t) {
                    var n = _(t, this.opts, e);
                    return x({
                        x: n.x,
                        y: n.y
                    }, this.opts.chartData.legendData);
                }
                return -1;
            }, Xe.prototype.touchLegend = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = null;
                if (n = e.changedTouches ? e.changedTouches[0] : e.mp.changedTouches[0], n) {
                    _(n, this.opts, e);
                    var r = this.getLegendDataIndex(e);
                    r >= 0 && (this.opts.series[r].show = !this.opts.series[r].show, this.opts.animation = !!t.animation, 
                    this.opts._scrollDistance_ = this.scrollOption.currentOffset, Ye.call(this, this.opts.type, this.opts, this.config, this.context));
                }
            }, Xe.prototype.showToolTip = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = null;
                n = e.changedTouches ? e.changedTouches[0] : e.mp.changedTouches[0], n || console.log("touchError");
                var o = _(n, this.opts, e), i = this.scrollOption.currentOffset, a = r({}, this.opts, {
                    _scrollDistance_: i,
                    animation: !1
                });
                if ("line" === this.opts.type || "area" === this.opts.type || "column" === this.opts.type) {
                    var s = void 0 == t.index ? this.getCurrentDataIndex(e) : t.index;
                    if (s > -1) {
                        var c = S(this.opts.series, s);
                        if (0 !== c.length) {
                            var u = C(c, this.opts.chartData.calPoints, s, this.opts.categories, t), l = u.textList, p = u.offset;
                            p.y = o.y, a.tooltip = {
                                textList: t.textList ? t.textList : l,
                                offset: p,
                                option: t,
                                index: s
                            };
                        }
                    }
                    Ye.call(this, a.type, a, this.config, this.context);
                }
                if ("mix" === this.opts.type) {
                    s = void 0 == t.index ? this.getCurrentDataIndex(e) : t.index;
                    if (s > -1) {
                        i = this.scrollOption.currentOffset, a = r({}, this.opts, {
                            _scrollDistance_: i,
                            animation: !1
                        }), c = S(this.opts.series, s);
                        if (0 !== c.length) {
                            var h = T(c, this.opts.chartData.calPoints, s, this.opts.categories, t);
                            l = h.textList, p = h.offset;
                            p.y = o.y, a.tooltip = {
                                textList: t.textList ? t.textList : l,
                                offset: p,
                                option: t,
                                index: s
                            };
                        }
                    }
                    Ye.call(this, a.type, a, this.config, this.context);
                }
                if ("candle" === this.opts.type) {
                    s = void 0 == t.index ? this.getCurrentDataIndex(e) : t.index;
                    if (s > -1) {
                        i = this.scrollOption.currentOffset, a = r({}, this.opts, {
                            _scrollDistance_: i,
                            animation: !1
                        }), c = S(this.opts.series, s);
                        if (0 !== c.length) {
                            u = E(this.opts.series[0].data, c, this.opts.chartData.calPoints, s, this.opts.categories, this.opts.extra.candle, t), 
                            l = u.textList, p = u.offset;
                            p.y = o.y, a.tooltip = {
                                textList: t.textList ? t.textList : l,
                                offset: p,
                                option: t,
                                index: s
                            };
                        }
                    }
                    Ye.call(this, a.type, a, this.config, this.context);
                }
                if ("pie" === this.opts.type || "ring" === this.opts.type || "rose" === this.opts.type || "funnel" === this.opts.type) {
                    s = void 0 == t.index ? this.getCurrentDataIndex(e) : t.index;
                    if (s > -1) {
                        i = this.scrollOption.currentOffset, a = r({}, this.opts, {
                            _scrollDistance_: i,
                            animation: !1
                        }), c = this.opts._series_[s], l = [ {
                            text: t.format ? t.format(c) : c.name + ": " + c.data,
                            color: c.color
                        } ], p = {
                            x: o.x,
                            y: o.y
                        };
                        a.tooltip = {
                            textList: t.textList ? t.textList : l,
                            offset: p,
                            option: t,
                            index: s
                        };
                    }
                    Ye.call(this, a.type, a, this.config, this.context);
                }
                if ("map" === this.opts.type || "word" === this.opts.type) {
                    s = void 0 == t.index ? this.getCurrentDataIndex(e) : t.index;
                    if (s > -1) {
                        i = this.scrollOption.currentOffset, a = r({}, this.opts, {
                            _scrollDistance_: i,
                            animation: !1
                        }), c = this.opts._series_[s], l = [ {
                            text: t.format ? t.format(c) : c.properties.name,
                            color: c.color
                        } ], p = {
                            x: o.x,
                            y: o.y
                        };
                        a.tooltip = {
                            textList: t.textList ? t.textList : l,
                            offset: p,
                            option: t,
                            index: s
                        };
                    }
                    a.updateData = !1, Ye.call(this, a.type, a, this.config, this.context);
                }
                if ("radar" === this.opts.type) {
                    s = void 0 == t.index ? this.getCurrentDataIndex(e) : t.index;
                    if (s > -1) {
                        i = this.scrollOption.currentOffset, a = r({}, this.opts, {
                            _scrollDistance_: i,
                            animation: !1
                        }), c = S(this.opts.series, s);
                        if (0 !== c.length) {
                            l = c.map(function(e) {
                                return {
                                    text: t.format ? t.format(e) : e.name + ": " + e.data,
                                    color: e.color
                                };
                            }), p = {
                                x: o.x,
                                y: o.y
                            };
                            a.tooltip = {
                                textList: t.textList ? t.textList : l,
                                offset: p,
                                option: t,
                                index: s
                            };
                        }
                    }
                    Ye.call(this, a.type, a, this.config, this.context);
                }
            }, Xe.prototype.translate = function(e) {
                this.scrollOption = {
                    currentOffset: e,
                    startTouchX: e,
                    distance: 0,
                    lastMoveTime: 0
                };
                var t = r({}, this.opts, {
                    _scrollDistance_: e,
                    animation: !1
                });
                Ye.call(this, this.opts.type, t, this.config, this.context);
            }, Xe.prototype.scrollStart = function(e) {
                var t = null;
                t = e.changedTouches ? e.changedTouches[0] : e.mp.changedTouches[0];
                var n = _(t, this.opts, e);
                t && !0 === this.opts.enableScroll && (this.scrollOption.startTouchX = n.x);
            }, Xe.prototype.scroll = function(e) {
                0 === this.scrollOption.lastMoveTime && (this.scrollOption.lastMoveTime = Date.now());
                var t = this.opts.extra.touchMoveLimit || 20, n = Date.now(), o = n - this.scrollOption.lastMoveTime;
                if (!(o < Math.floor(1e3 / t))) {
                    this.scrollOption.lastMoveTime = n;
                    var i = null;
                    if (i = e.changedTouches ? e.changedTouches[0] : e.mp.changedTouches[0], i && !0 === this.opts.enableScroll) {
                        var a, s = _(i, this.opts, e);
                        a = s.x - this.scrollOption.startTouchX;
                        var u = this.scrollOption.currentOffset, l = c(this, u + a, this.opts.chartData, this.config, this.opts);
                        this.scrollOption.distance = a = l - u;
                        var p = r({}, this.opts, {
                            _scrollDistance_: u + a,
                            animation: !1
                        });
                        return Ye.call(this, p.type, p, this.config, this.context), u + a;
                    }
                }
            }, Xe.prototype.scrollEnd = function(e) {
                if (!0 === this.opts.enableScroll) {
                    var t = this.scrollOption, n = t.currentOffset, r = t.distance;
                    this.scrollOption.currentOffset = n + r, this.scrollOption.distance = 0;
                }
            }, "object" === typeof e.exports && (e.exports = Xe);
        }).call(this, n("543d")["default"]);
    },
    6057: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, Date.prototype.Format = function(e) {
            var t = {
                "M+": this.getMonth() + 1,
                "D+": this.getDate(),
                "h+": this.getHours(),
                "m+": this.getMinutes(),
                "s+": this.getSeconds(),
                "q+": Math.floor((this.getMonth() + 3) / 3),
                S: this.getMilliseconds()
            };
            for (var n in /(Y+)/.test(e) && (e = e.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length))), 
            t) new RegExp("(" + n + ")").test(e) && (e = e.replace(RegExp.$1, 1 == RegExp.$1.length ? t[n] : ("00" + t[n]).substr(("" + t[n]).length)));
            return e;
        };
        var r = function(e, t) {
            var n = new Date(e).Format("YYYY-MM-DD hh:mm:ss");
            return t && (n = new Date(e).Format(t)), n.toLocaleString();
        }, o = r;
        t.default = o;
    },
    "65e4": function(e, t, n) {
        "use strict";
        (function(e) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var r = u(n("a34a")), o = u(n("66fd")), i = u(n("2f62")), a = u(n("088b")), s = n("2afc"), c = u(n("76b3"));
            function u(e) {
                return e && e.__esModule ? e : {
                    default: e
                };
            }
            function l(e, t, n, r, o, i, a) {
                try {
                    var s = e[i](a), c = s.value;
                } catch (u) {
                    return void n(u);
                }
                s.done ? t(c) : Promise.resolve(c).then(r, o);
            }
            function p(e) {
                return function() {
                    var t = this, n = arguments;
                    return new Promise(function(r, o) {
                        var i = e.apply(t, n);
                        function a(e) {
                            l(i, r, o, a, s, "next", e);
                        }
                        function s(e) {
                            l(i, r, o, a, s, "throw", e);
                        }
                        a(void 0);
                    });
                };
            }
            function h(e) {
                return m(e) || g(e) || d(e) || f();
            }
            function f() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            function d(e, t) {
                if (e) {
                    if ("string" === typeof e) return v(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? v(e, t) : void 0;
                }
            }
            function g(e) {
                if ("undefined" !== typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);
            }
            function m(e) {
                if (Array.isArray(e)) return v(e);
            }
            function v(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
                return r;
            }
            o.default.use(i.default);
            var y = new i.default.Store({
                state: {
                    isActivityNoticeShow: !1,
                    isLogin: e.getStorageSync("isLogin"),
                    isSDKReady: !1,
                    conversationActive: {},
                    toUserId: "",
                    conversationList: [],
                    currentMessageList: [],
                    isExistPhone: e.getStorageSync("isExistPhone")
                },
                mutations: {
                    setIsActivityNoticeShow: function(e, t) {
                        e.isActivityNoticeShow = t;
                    },
                    updatePhone: function(e, t) {
                        e.isExistPhone = t;
                    },
                    toggleIsLogin: function(e, t) {
                        e.isLogin = "undefined" === typeof t ? !e.isLogin : t;
                    },
                    toggleIsSDKReady: function(e, t) {
                        e.isSDKReady = "undefined" === typeof t ? !e.isSDKReady : t;
                    },
                    reset: function(t) {
                        t.isLogin = !1, t.isSDKReady = !1, e.removeStorageSync("user_avt"), e.removeStorageSync("user_nm");
                    },
                    createConversationActive: function(e, t) {
                        e.conversationActive.conversationID = "C2C" + t, e.toUserId = t, e.currentMessageList = [];
                    },
                    updateConversationActive: function(e, t) {
                        e.conversationActive = Object.assign({}, t), e.toUserId = t.userProfile.userID, 
                        e.currentMessageList = [];
                    },
                    updateConversationList: function(t, n) {
                        t.conversationList = n;
                        var r = 0;
                        t.conversationList.forEach(function(e) {
                            r += e.unreadCount;
                        }), r > 99 && (r = 99), r > 0 ? e.setTabBarBadge({
                            index: 3,
                            text: r + "",
                            fail: function(e) {
                                console.log(e);
                            }
                        }) : e.removeTabBarBadge({
                            index: 3
                        });
                    },
                    pushCurrentMessageList: function(e, t) {
                        if (Array.isArray(t)) {
                            var n = t.filter(function(t) {
                                return t.conversationID === e.conversationActive.conversationID;
                            });
                            e.currentMessageList = [].concat(h(e.currentMessageList), h(n));
                        } else t.conversationID === e.conversationActive.conversationID && (e.currentMessageList = [].concat(h(e.currentMessageList), [ t ]));
                        console.log("1111"), console.log(e.currentMessageList);
                    },
                    unshiftCurrentMessageList: function(e, t) {
                        console.log(t), t && (e.currentMessageList = [].concat(h(t), h(e.currentMessageList)));
                    }
                },
                actions: {
                    login: function(t) {
                        return p(r.default.mark(function n() {
                            var o, i, a, c;
                            return r.default.wrap(function(n) {
                                while (1) switch (n.prev = n.next) {
                                  case 0:
                                    return o = t.commit, t.dispatch, n.next = 3, e.login({
                                        provider: "weixin"
                                    });

                                  case 3:
                                    return i = n.sent, a = e.getStorageSync("sharedChatId") ? e.getStorageSync("sharedChatId") : "", 
                                    n.next = 7, e.request({
                                        url: s.APIHOST + "wxLogin",
                                        data: {
                                            chatId: a,
                                            code: i[1].code,
                                            userType: 1
                                        },
                                        method: "POST"
                                    });

                                  case 7:
                                    c = n.sent, e.removeStorageSync("sharedChatId"), e.setStorageSync("chatId", c[1].data.data.chatId), 
                                    e.setStorageSync("user_tk", c[1].data.data.token), c[1].data.data.avatar && e.setStorageSync("user_avt", c[1].data.data.avatar), 
                                    c[1].data.data.nickName && e.setStorageSync("user_nm", c[1].data.data.nickName), 
                                    o("toggleIsLogin", !0);

                                  case 14:
                                  case "end":
                                    return n.stop();
                                }
                            }, n);
                        }))();
                    },
                    timLogin: function(t) {
                        var n = t.commit;
                        (0, c.default)("user/userSig", {}, "GET").then(function(t) {
                            if (0 == t.code && (e.setStorageSync("userTimId", JSON.stringify(t.data)), t.data)) {
                                var r = {}, o = t.data;
                                r.user = o.nickname || "im", r.userId = o.chatId, r.img = o.avatar, r.userSig = o.userSig;
                                var i = a.default.tim.login({
                                    userID: o.chatId,
                                    userSig: o.userSig
                                });
                                i.then(function(t) {
                                    n("toggleIsLogin", !0), e.setStorageSync("isLogin", !0), e.setStorageSync("userInfo", JSON.stringify(r)), 
                                    e.setStorageSync("userTIMInfo", JSON.stringify(t.data));
                                }).catch(function(e) {
                                    console.warn("login error:", e);
                                });
                            }
                        });
                    }
                }
            }), _ = y;
            t.default = _;
        }).call(this, n("543d")["default"]);
    },
    "66fd": function(e, t, n) {
        "use strict";
        n.r(t), function(e) {
            /*!
 * Vue.js v2.6.11
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */
            var n = Object.freeze({});
            function r(e) {
                return void 0 === e || null === e;
            }
            function o(e) {
                return void 0 !== e && null !== e;
            }
            function i(e) {
                return !0 === e;
            }
            function a(e) {
                return !1 === e;
            }
            function s(e) {
                return "string" === typeof e || "number" === typeof e || "symbol" === typeof e || "boolean" === typeof e;
            }
            function c(e) {
                return null !== e && "object" === typeof e;
            }
            var u = Object.prototype.toString;
            function l(e) {
                return "[object Object]" === u.call(e);
            }
            function p(e) {
                return "[object RegExp]" === u.call(e);
            }
            function h(e) {
                var t = parseFloat(String(e));
                return t >= 0 && Math.floor(t) === t && isFinite(e);
            }
            function f(e) {
                return o(e) && "function" === typeof e.then && "function" === typeof e.catch;
            }
            function d(e) {
                return null == e ? "" : Array.isArray(e) || l(e) && e.toString === u ? JSON.stringify(e, null, 2) : String(e);
            }
            function g(e) {
                var t = parseFloat(e);
                return isNaN(t) ? e : t;
            }
            function m(e, t) {
                for (var n = Object.create(null), r = e.split(","), o = 0; o < r.length; o++) n[r[o]] = !0;
                return t ? function(e) {
                    return n[e.toLowerCase()];
                } : function(e) {
                    return n[e];
                };
            }
            m("slot,component", !0);
            var v = m("key,ref,slot,slot-scope,is");
            function y(e, t) {
                if (e.length) {
                    var n = e.indexOf(t);
                    if (n > -1) return e.splice(n, 1);
                }
            }
            var _ = Object.prototype.hasOwnProperty;
            function S(e, t) {
                return _.call(e, t);
            }
            function I(e) {
                var t = Object.create(null);
                return function(n) {
                    var r = t[n];
                    return r || (t[n] = e(n));
                };
            }
            var M = /-(\w)/g, C = I(function(e) {
                return e.replace(M, function(e, t) {
                    return t ? t.toUpperCase() : "";
                });
            }), T = I(function(e) {
                return e.charAt(0).toUpperCase() + e.slice(1);
            }), E = /\B([A-Z])/g, A = I(function(e) {
                return e.replace(E, "-$1").toLowerCase();
            });
            function b(e, t) {
                function n(n) {
                    var r = arguments.length;
                    return r ? r > 1 ? e.apply(t, arguments) : e.call(t, n) : e.call(t);
                }
                return n._length = e.length, n;
            }
            function x(e, t) {
                return e.bind(t);
            }
            var w = Function.prototype.bind ? x : b;
            function D(e, t) {
                t = t || 0;
                var n = e.length - t, r = new Array(n);
                while (n--) r[n] = e[n + t];
                return r;
            }
            function k(e, t) {
                for (var n in t) e[n] = t[n];
                return e;
            }
            function O(e) {
                for (var t = {}, n = 0; n < e.length; n++) e[n] && k(t, e[n]);
                return t;
            }
            function L(e, t, n) {}
            var R = function(e, t, n) {
                return !1;
            }, P = function(e) {
                return e;
            };
            function N(e, t) {
                if (e === t) return !0;
                var n = c(e), r = c(t);
                if (!n || !r) return !n && !r && String(e) === String(t);
                try {
                    var o = Array.isArray(e), i = Array.isArray(t);
                    if (o && i) return e.length === t.length && e.every(function(e, n) {
                        return N(e, t[n]);
                    });
                    if (e instanceof Date && t instanceof Date) return e.getTime() === t.getTime();
                    if (o || i) return !1;
                    var a = Object.keys(e), s = Object.keys(t);
                    return a.length === s.length && a.every(function(n) {
                        return N(e[n], t[n]);
                    });
                } catch (u) {
                    return !1;
                }
            }
            function G(e, t) {
                for (var n = 0; n < e.length; n++) if (N(e[n], t)) return n;
                return -1;
            }
            function F(e) {
                var t = !1;
                return function() {
                    t || (t = !0, e.apply(this, arguments));
                };
            }
            var U = [ "component", "directive", "filter" ], q = [ "beforeCreate", "created", "beforeMount", "mounted", "beforeUpdate", "updated", "beforeDestroy", "destroyed", "activated", "deactivated", "errorCaptured", "serverPrefetch" ], j = {
                optionMergeStrategies: Object.create(null),
                silent: !1,
                productionTip: !1,
                devtools: !1,
                performance: !1,
                errorHandler: null,
                warnHandler: null,
                ignoredElements: [],
                keyCodes: Object.create(null),
                isReservedTag: R,
                isReservedAttr: R,
                isUnknownElement: R,
                getTagNamespace: L,
                parsePlatformTagName: P,
                mustUseProp: R,
                async: !0,
                _lifecycleHooks: q
            }, $ = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;
            function V(e) {
                var t = (e + "").charCodeAt(0);
                return 36 === t || 95 === t;
            }
            function B(e, t, n, r) {
                Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !!r,
                    writable: !0,
                    configurable: !0
                });
            }
            var H = new RegExp("[^" + $.source + ".$_\\d]");
            function K(e) {
                if (!H.test(e)) {
                    var t = e.split(".");
                    return function(e) {
                        for (var n = 0; n < t.length; n++) {
                            if (!e) return;
                            e = e[t[n]];
                        }
                        return e;
                    };
                }
            }
            var z, W = "__proto__" in {}, Y = "undefined" !== typeof window, J = "undefined" !== typeof WXEnvironment && !!WXEnvironment.platform, X = J && WXEnvironment.platform.toLowerCase(), Q = Y && window.navigator.userAgent.toLowerCase(), Z = Q && /msie|trident/.test(Q), ee = (Q && Q.indexOf("msie 9.0"), 
            Q && Q.indexOf("edge/") > 0), te = (Q && Q.indexOf("android"), Q && /iphone|ipad|ipod|ios/.test(Q) || "ios" === X), ne = (Q && /chrome\/\d+/.test(Q), 
            Q && /phantomjs/.test(Q), Q && Q.match(/firefox\/(\d+)/), {}.watch);
            if (Y) try {
                var re = {};
                Object.defineProperty(re, "passive", {
                    get: function() {}
                }), window.addEventListener("test-passive", null, re);
            } catch (no) {}
            var oe = function() {
                return void 0 === z && (z = !Y && !J && "undefined" !== typeof e && (e["process"] && "server" === e["process"].env.VUE_ENV)), 
                z;
            }, ie = Y && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;
            function ae(e) {
                return "function" === typeof e && /native code/.test(e.toString());
            }
            var se, ce = "undefined" !== typeof Symbol && ae(Symbol) && "undefined" !== typeof Reflect && ae(Reflect.ownKeys);
            se = "undefined" !== typeof Set && ae(Set) ? Set : function() {
                function e() {
                    this.set = Object.create(null);
                }
                return e.prototype.has = function(e) {
                    return !0 === this.set[e];
                }, e.prototype.add = function(e) {
                    this.set[e] = !0;
                }, e.prototype.clear = function() {
                    this.set = Object.create(null);
                }, e;
            }();
            var ue = L, le = 0, pe = function() {
                this.id = le++, this.subs = [];
            };
            function he(e) {
                pe.SharedObject.targetStack.push(e), pe.SharedObject.target = e, pe.target = e;
            }
            function fe() {
                pe.SharedObject.targetStack.pop(), pe.SharedObject.target = pe.SharedObject.targetStack[pe.SharedObject.targetStack.length - 1], 
                pe.target = pe.SharedObject.target;
            }
            pe.prototype.addSub = function(e) {
                this.subs.push(e);
            }, pe.prototype.removeSub = function(e) {
                y(this.subs, e);
            }, pe.prototype.depend = function() {
                pe.SharedObject.target && pe.SharedObject.target.addDep(this);
            }, pe.prototype.notify = function() {
                var e = this.subs.slice();
                for (var t = 0, n = e.length; t < n; t++) e[t].update();
            }, pe.SharedObject = {}, pe.SharedObject.target = null, pe.SharedObject.targetStack = [];
            var de = function(e, t, n, r, o, i, a, s) {
                this.tag = e, this.data = t, this.children = n, this.text = r, this.elm = o, this.ns = void 0, 
                this.context = i, this.fnContext = void 0, this.fnOptions = void 0, this.fnScopeId = void 0, 
                this.key = t && t.key, this.componentOptions = a, this.componentInstance = void 0, 
                this.parent = void 0, this.raw = !1, this.isStatic = !1, this.isRootInsert = !0, 
                this.isComment = !1, this.isCloned = !1, this.isOnce = !1, this.asyncFactory = s, 
                this.asyncMeta = void 0, this.isAsyncPlaceholder = !1;
            }, ge = {
                child: {
                    configurable: !0
                }
            };
            ge.child.get = function() {
                return this.componentInstance;
            }, Object.defineProperties(de.prototype, ge);
            var me = function(e) {
                void 0 === e && (e = "");
                var t = new de();
                return t.text = e, t.isComment = !0, t;
            };
            function ve(e) {
                return new de(void 0, void 0, void 0, String(e));
            }
            function ye(e) {
                var t = new de(e.tag, e.data, e.children && e.children.slice(), e.text, e.elm, e.context, e.componentOptions, e.asyncFactory);
                return t.ns = e.ns, t.isStatic = e.isStatic, t.key = e.key, t.isComment = e.isComment, 
                t.fnContext = e.fnContext, t.fnOptions = e.fnOptions, t.fnScopeId = e.fnScopeId, 
                t.asyncMeta = e.asyncMeta, t.isCloned = !0, t;
            }
            var _e = Array.prototype, Se = Object.create(_e), Ie = [ "push", "pop", "shift", "unshift", "splice", "sort", "reverse" ];
            Ie.forEach(function(e) {
                var t = _e[e];
                B(Se, e, function() {
                    var n = [], r = arguments.length;
                    while (r--) n[r] = arguments[r];
                    var o, i = t.apply(this, n), a = this.__ob__;
                    switch (e) {
                      case "push":
                      case "unshift":
                        o = n;
                        break;

                      case "splice":
                        o = n.slice(2);
                        break;
                    }
                    return o && a.observeArray(o), a.dep.notify(), i;
                });
            });
            var Me = Object.getOwnPropertyNames(Se), Ce = !0;
            function Te(e) {
                Ce = e;
            }
            var Ee = function(e) {
                this.value = e, this.dep = new pe(), this.vmCount = 0, B(e, "__ob__", this), Array.isArray(e) ? (W ? e.push !== e.__proto__.push ? be(e, Se, Me) : Ae(e, Se) : be(e, Se, Me), 
                this.observeArray(e)) : this.walk(e);
            };
            function Ae(e, t) {
                e.__proto__ = t;
            }
            function be(e, t, n) {
                for (var r = 0, o = n.length; r < o; r++) {
                    var i = n[r];
                    B(e, i, t[i]);
                }
            }
            function xe(e, t) {
                var n;
                if (c(e) && !(e instanceof de)) return S(e, "__ob__") && e.__ob__ instanceof Ee ? n = e.__ob__ : Ce && !oe() && (Array.isArray(e) || l(e)) && Object.isExtensible(e) && !e._isVue && (n = new Ee(e)), 
                t && n && n.vmCount++, n;
            }
            function we(e, t, n, r, o) {
                var i = new pe(), a = Object.getOwnPropertyDescriptor(e, t);
                if (!a || !1 !== a.configurable) {
                    var s = a && a.get, c = a && a.set;
                    s && !c || 2 !== arguments.length || (n = e[t]);
                    var u = !o && xe(n);
                    Object.defineProperty(e, t, {
                        enumerable: !0,
                        configurable: !0,
                        get: function() {
                            var t = s ? s.call(e) : n;
                            return pe.SharedObject.target && (i.depend(), u && (u.dep.depend(), Array.isArray(t) && Oe(t))), 
                            t;
                        },
                        set: function(t) {
                            var r = s ? s.call(e) : n;
                            t === r || t !== t && r !== r || s && !c || (c ? c.call(e, t) : n = t, u = !o && xe(t), 
                            i.notify());
                        }
                    });
                }
            }
            function De(e, t, n) {
                if (Array.isArray(e) && h(t)) return e.length = Math.max(e.length, t), e.splice(t, 1, n), 
                n;
                if (t in e && !(t in Object.prototype)) return e[t] = n, n;
                var r = e.__ob__;
                return e._isVue || r && r.vmCount ? n : r ? (we(r.value, t, n), r.dep.notify(), 
                n) : (e[t] = n, n);
            }
            function ke(e, t) {
                if (Array.isArray(e) && h(t)) e.splice(t, 1); else {
                    var n = e.__ob__;
                    e._isVue || n && n.vmCount || S(e, t) && (delete e[t], n && n.dep.notify());
                }
            }
            function Oe(e) {
                for (var t = void 0, n = 0, r = e.length; n < r; n++) t = e[n], t && t.__ob__ && t.__ob__.dep.depend(), 
                Array.isArray(t) && Oe(t);
            }
            Ee.prototype.walk = function(e) {
                for (var t = Object.keys(e), n = 0; n < t.length; n++) we(e, t[n]);
            }, Ee.prototype.observeArray = function(e) {
                for (var t = 0, n = e.length; t < n; t++) xe(e[t]);
            };
            var Le = j.optionMergeStrategies;
            function Re(e, t) {
                if (!t) return e;
                for (var n, r, o, i = ce ? Reflect.ownKeys(t) : Object.keys(t), a = 0; a < i.length; a++) n = i[a], 
                "__ob__" !== n && (r = e[n], o = t[n], S(e, n) ? r !== o && l(r) && l(o) && Re(r, o) : De(e, n, o));
                return e;
            }
            function Pe(e, t, n) {
                return n ? function() {
                    var r = "function" === typeof t ? t.call(n, n) : t, o = "function" === typeof e ? e.call(n, n) : e;
                    return r ? Re(r, o) : o;
                } : t ? e ? function() {
                    return Re("function" === typeof t ? t.call(this, this) : t, "function" === typeof e ? e.call(this, this) : e);
                } : t : e;
            }
            function Ne(e, t) {
                var n = t ? e ? e.concat(t) : Array.isArray(t) ? t : [ t ] : e;
                return n ? Ge(n) : n;
            }
            function Ge(e) {
                for (var t = [], n = 0; n < e.length; n++) -1 === t.indexOf(e[n]) && t.push(e[n]);
                return t;
            }
            function Fe(e, t, n, r) {
                var o = Object.create(e || null);
                return t ? k(o, t) : o;
            }
            Le.data = function(e, t, n) {
                return n ? Pe(e, t, n) : t && "function" !== typeof t ? e : Pe(e, t);
            }, q.forEach(function(e) {
                Le[e] = Ne;
            }), U.forEach(function(e) {
                Le[e + "s"] = Fe;
            }), Le.watch = function(e, t, n, r) {
                if (e === ne && (e = void 0), t === ne && (t = void 0), !t) return Object.create(e || null);
                if (!e) return t;
                var o = {};
                for (var i in k(o, e), t) {
                    var a = o[i], s = t[i];
                    a && !Array.isArray(a) && (a = [ a ]), o[i] = a ? a.concat(s) : Array.isArray(s) ? s : [ s ];
                }
                return o;
            }, Le.props = Le.methods = Le.inject = Le.computed = function(e, t, n, r) {
                if (!e) return t;
                var o = Object.create(null);
                return k(o, e), t && k(o, t), o;
            }, Le.provide = Pe;
            var Ue = function(e, t) {
                return void 0 === t ? e : t;
            };
            function qe(e, t) {
                var n = e.props;
                if (n) {
                    var r, o, i, a = {};
                    if (Array.isArray(n)) {
                        r = n.length;
                        while (r--) o = n[r], "string" === typeof o && (i = C(o), a[i] = {
                            type: null
                        });
                    } else if (l(n)) for (var s in n) o = n[s], i = C(s), a[i] = l(o) ? o : {
                        type: o
                    }; else 0;
                    e.props = a;
                }
            }
            function je(e, t) {
                var n = e.inject;
                if (n) {
                    var r = e.inject = {};
                    if (Array.isArray(n)) for (var o = 0; o < n.length; o++) r[n[o]] = {
                        from: n[o]
                    }; else if (l(n)) for (var i in n) {
                        var a = n[i];
                        r[i] = l(a) ? k({
                            from: i
                        }, a) : {
                            from: a
                        };
                    } else 0;
                }
            }
            function $e(e) {
                var t = e.directives;
                if (t) for (var n in t) {
                    var r = t[n];
                    "function" === typeof r && (t[n] = {
                        bind: r,
                        update: r
                    });
                }
            }
            function Ve(e, t, n) {
                if ("function" === typeof t && (t = t.options), qe(t, n), je(t, n), $e(t), !t._base && (t.extends && (e = Ve(e, t.extends, n)), 
                t.mixins)) for (var r = 0, o = t.mixins.length; r < o; r++) e = Ve(e, t.mixins[r], n);
                var i, a = {};
                for (i in e) s(i);
                for (i in t) S(e, i) || s(i);
                function s(r) {
                    var o = Le[r] || Ue;
                    a[r] = o(e[r], t[r], n, r);
                }
                return a;
            }
            function Be(e, t, n, r) {
                if ("string" === typeof n) {
                    var o = e[t];
                    if (S(o, n)) return o[n];
                    var i = C(n);
                    if (S(o, i)) return o[i];
                    var a = T(i);
                    if (S(o, a)) return o[a];
                    var s = o[n] || o[i] || o[a];
                    return s;
                }
            }
            function He(e, t, n, r) {
                var o = t[e], i = !S(n, e), a = n[e], s = Ye(Boolean, o.type);
                if (s > -1) if (i && !S(o, "default")) a = !1; else if ("" === a || a === A(e)) {
                    var c = Ye(String, o.type);
                    (c < 0 || s < c) && (a = !0);
                }
                if (void 0 === a) {
                    a = Ke(r, o, e);
                    var u = Ce;
                    Te(!0), xe(a), Te(u);
                }
                return a;
            }
            function Ke(e, t, n) {
                if (S(t, "default")) {
                    var r = t.default;
                    return e && e.$options.propsData && void 0 === e.$options.propsData[n] && void 0 !== e._props[n] ? e._props[n] : "function" === typeof r && "Function" !== ze(t.type) ? r.call(e) : r;
                }
            }
            function ze(e) {
                var t = e && e.toString().match(/^\s*function (\w+)/);
                return t ? t[1] : "";
            }
            function We(e, t) {
                return ze(e) === ze(t);
            }
            function Ye(e, t) {
                if (!Array.isArray(t)) return We(t, e) ? 0 : -1;
                for (var n = 0, r = t.length; n < r; n++) if (We(t[n], e)) return n;
                return -1;
            }
            function Je(e, t, n) {
                he();
                try {
                    if (t) {
                        var r = t;
                        while (r = r.$parent) {
                            var o = r.$options.errorCaptured;
                            if (o) for (var i = 0; i < o.length; i++) try {
                                var a = !1 === o[i].call(r, e, t, n);
                                if (a) return;
                            } catch (no) {
                                Qe(no, r, "errorCaptured hook");
                            }
                        }
                    }
                    Qe(e, t, n);
                } finally {
                    fe();
                }
            }
            function Xe(e, t, n, r, o) {
                var i;
                try {
                    i = n ? e.apply(t, n) : e.call(t), i && !i._isVue && f(i) && !i._handled && (i.catch(function(e) {
                        return Je(e, r, o + " (Promise/async)");
                    }), i._handled = !0);
                } catch (no) {
                    Je(no, r, o);
                }
                return i;
            }
            function Qe(e, t, n) {
                if (j.errorHandler) try {
                    return j.errorHandler.call(null, e, t, n);
                } catch (no) {
                    no !== e && Ze(no, null, "config.errorHandler");
                }
                Ze(e, t, n);
            }
            function Ze(e, t, n) {
                if (!Y && !J || "undefined" === typeof console) throw e;
                console.error(e);
            }
            var et, tt = [], nt = !1;
            function rt() {
                nt = !1;
                var e = tt.slice(0);
                tt.length = 0;
                for (var t = 0; t < e.length; t++) e[t]();
            }
            if ("undefined" !== typeof Promise && ae(Promise)) {
                var ot = Promise.resolve();
                et = function() {
                    ot.then(rt), te && setTimeout(L);
                };
            } else if (Z || "undefined" === typeof MutationObserver || !ae(MutationObserver) && "[object MutationObserverConstructor]" !== MutationObserver.toString()) et = "undefined" !== typeof setImmediate && ae(setImmediate) ? function() {
                setImmediate(rt);
            } : function() {
                setTimeout(rt, 0);
            }; else {
                var it = 1, at = new MutationObserver(rt), st = document.createTextNode(String(it));
                at.observe(st, {
                    characterData: !0
                }), et = function() {
                    it = (it + 1) % 2, st.data = String(it);
                };
            }
            function ct(e, t) {
                var n;
                if (tt.push(function() {
                    if (e) try {
                        e.call(t);
                    } catch (no) {
                        Je(no, t, "nextTick");
                    } else n && n(t);
                }), nt || (nt = !0, et()), !e && "undefined" !== typeof Promise) return new Promise(function(e) {
                    n = e;
                });
            }
            var ut = new se();
            function lt(e) {
                pt(e, ut), ut.clear();
            }
            function pt(e, t) {
                var n, r, o = Array.isArray(e);
                if (!(!o && !c(e) || Object.isFrozen(e) || e instanceof de)) {
                    if (e.__ob__) {
                        var i = e.__ob__.dep.id;
                        if (t.has(i)) return;
                        t.add(i);
                    }
                    if (o) {
                        n = e.length;
                        while (n--) pt(e[n], t);
                    } else {
                        r = Object.keys(e), n = r.length;
                        while (n--) pt(e[r[n]], t);
                    }
                }
            }
            var ht = I(function(e) {
                var t = "&" === e.charAt(0);
                e = t ? e.slice(1) : e;
                var n = "~" === e.charAt(0);
                e = n ? e.slice(1) : e;
                var r = "!" === e.charAt(0);
                return e = r ? e.slice(1) : e, {
                    name: e,
                    once: n,
                    capture: r,
                    passive: t
                };
            });
            function ft(e, t) {
                function n() {
                    var e = arguments, r = n.fns;
                    if (!Array.isArray(r)) return Xe(r, null, arguments, t, "v-on handler");
                    for (var o = r.slice(), i = 0; i < o.length; i++) Xe(o[i], null, e, t, "v-on handler");
                }
                return n.fns = e, n;
            }
            function dt(e, t, n, o, a, s) {
                var c, u, l, p;
                for (c in e) u = e[c], l = t[c], p = ht(c), r(u) || (r(l) ? (r(u.fns) && (u = e[c] = ft(u, s)), 
                i(p.once) && (u = e[c] = a(p.name, u, p.capture)), n(p.name, u, p.capture, p.passive, p.params)) : u !== l && (l.fns = u, 
                e[c] = l));
                for (c in t) r(e[c]) && (p = ht(c), o(p.name, t[c], p.capture));
            }
            function gt(e, t, n, i) {
                var a = t.options.mpOptions && t.options.mpOptions.properties;
                if (r(a)) return n;
                var s = t.options.mpOptions.externalClasses || [], c = e.attrs, u = e.props;
                if (o(c) || o(u)) for (var l in a) {
                    var p = A(l), h = vt(n, u, l, p, !0) || vt(n, c, l, p, !1);
                    h && n[l] && -1 !== s.indexOf(p) && i[C(n[l])] && (n[l] = i[C(n[l])]);
                }
                return n;
            }
            function mt(e, t, n, i) {
                var a = t.options.props;
                if (r(a)) return gt(e, t, {}, i);
                var s = {}, c = e.attrs, u = e.props;
                if (o(c) || o(u)) for (var l in a) {
                    var p = A(l);
                    vt(s, u, l, p, !0) || vt(s, c, l, p, !1);
                }
                return gt(e, t, s, i);
            }
            function vt(e, t, n, r, i) {
                if (o(t)) {
                    if (S(t, n)) return e[n] = t[n], i || delete t[n], !0;
                    if (S(t, r)) return e[n] = t[r], i || delete t[r], !0;
                }
                return !1;
            }
            function yt(e) {
                for (var t = 0; t < e.length; t++) if (Array.isArray(e[t])) return Array.prototype.concat.apply([], e);
                return e;
            }
            function _t(e) {
                return s(e) ? [ ve(e) ] : Array.isArray(e) ? It(e) : void 0;
            }
            function St(e) {
                return o(e) && o(e.text) && a(e.isComment);
            }
            function It(e, t) {
                var n, a, c, u, l = [];
                for (n = 0; n < e.length; n++) a = e[n], r(a) || "boolean" === typeof a || (c = l.length - 1, 
                u = l[c], Array.isArray(a) ? a.length > 0 && (a = It(a, (t || "") + "_" + n), St(a[0]) && St(u) && (l[c] = ve(u.text + a[0].text), 
                a.shift()), l.push.apply(l, a)) : s(a) ? St(u) ? l[c] = ve(u.text + a) : "" !== a && l.push(ve(a)) : St(a) && St(u) ? l[c] = ve(u.text + a.text) : (i(e._isVList) && o(a.tag) && r(a.key) && o(t) && (a.key = "__vlist" + t + "_" + n + "__"), 
                l.push(a)));
                return l;
            }
            function Mt(e) {
                var t = e.$options.provide;
                t && (e._provided = "function" === typeof t ? t.call(e) : t);
            }
            function Ct(e) {
                var t = Tt(e.$options.inject, e);
                t && (Te(!1), Object.keys(t).forEach(function(n) {
                    we(e, n, t[n]);
                }), Te(!0));
            }
            function Tt(e, t) {
                if (e) {
                    for (var n = Object.create(null), r = ce ? Reflect.ownKeys(e) : Object.keys(e), o = 0; o < r.length; o++) {
                        var i = r[o];
                        if ("__ob__" !== i) {
                            var a = e[i].from, s = t;
                            while (s) {
                                if (s._provided && S(s._provided, a)) {
                                    n[i] = s._provided[a];
                                    break;
                                }
                                s = s.$parent;
                            }
                            if (!s) if ("default" in e[i]) {
                                var c = e[i].default;
                                n[i] = "function" === typeof c ? c.call(t) : c;
                            } else 0;
                        }
                    }
                    return n;
                }
            }
            function Et(e, t) {
                if (!e || !e.length) return {};
                for (var n = {}, r = 0, o = e.length; r < o; r++) {
                    var i = e[r], a = i.data;
                    if (a && a.attrs && a.attrs.slot && delete a.attrs.slot, i.context !== t && i.fnContext !== t || !a || null == a.slot) i.asyncMeta && i.asyncMeta.data && "page" === i.asyncMeta.data.slot ? (n["page"] || (n["page"] = [])).push(i) : (n.default || (n.default = [])).push(i); else {
                        var s = a.slot, c = n[s] || (n[s] = []);
                        "template" === i.tag ? c.push.apply(c, i.children || []) : c.push(i);
                    }
                }
                for (var u in n) n[u].every(At) && delete n[u];
                return n;
            }
            function At(e) {
                return e.isComment && !e.asyncFactory || " " === e.text;
            }
            function bt(e, t, r) {
                var o, i = Object.keys(t).length > 0, a = e ? !!e.$stable : !i, s = e && e.$key;
                if (e) {
                    if (e._normalized) return e._normalized;
                    if (a && r && r !== n && s === r.$key && !i && !r.$hasNormal) return r;
                    for (var c in o = {}, e) e[c] && "$" !== c[0] && (o[c] = xt(t, c, e[c]));
                } else o = {};
                for (var u in t) u in o || (o[u] = wt(t, u));
                return e && Object.isExtensible(e) && (e._normalized = o), B(o, "$stable", a), B(o, "$key", s), 
                B(o, "$hasNormal", i), o;
            }
            function xt(e, t, n) {
                var r = function() {
                    var e = arguments.length ? n.apply(null, arguments) : n({});
                    return e = e && "object" === typeof e && !Array.isArray(e) ? [ e ] : _t(e), e && (0 === e.length || 1 === e.length && e[0].isComment) ? void 0 : e;
                };
                return n.proxy && Object.defineProperty(e, t, {
                    get: r,
                    enumerable: !0,
                    configurable: !0
                }), r;
            }
            function wt(e, t) {
                return function() {
                    return e[t];
                };
            }
            function Dt(e, t) {
                var n, r, i, a, s;
                if (Array.isArray(e) || "string" === typeof e) for (n = new Array(e.length), r = 0, 
                i = e.length; r < i; r++) n[r] = t(e[r], r, r, r); else if ("number" === typeof e) for (n = new Array(e), 
                r = 0; r < e; r++) n[r] = t(r + 1, r, r, r); else if (c(e)) if (ce && e[Symbol.iterator]) {
                    n = [];
                    var u = e[Symbol.iterator](), l = u.next();
                    while (!l.done) n.push(t(l.value, n.length, r, r++)), l = u.next();
                } else for (a = Object.keys(e), n = new Array(a.length), r = 0, i = a.length; r < i; r++) s = a[r], 
                n[r] = t(e[s], s, r, r);
                return o(n) || (n = []), n._isVList = !0, n;
            }
            function kt(e, t, n, r) {
                var o, i = this.$scopedSlots[e];
                i ? (n = n || {}, r && (n = k(k({}, r), n)), o = i(n, this, n._i) || t) : o = this.$slots[e] || t;
                var a = n && n.slot;
                return a ? this.$createElement("template", {
                    slot: a
                }, o) : o;
            }
            function Ot(e) {
                return Be(this.$options, "filters", e, !0) || P;
            }
            function Lt(e, t) {
                return Array.isArray(e) ? -1 === e.indexOf(t) : e !== t;
            }
            function Rt(e, t, n, r, o) {
                var i = j.keyCodes[t] || n;
                return o && r && !j.keyCodes[t] ? Lt(o, r) : i ? Lt(i, e) : r ? A(r) !== t : void 0;
            }
            function Pt(e, t, n, r, o) {
                if (n) if (c(n)) {
                    var i;
                    Array.isArray(n) && (n = O(n));
                    var a = function(a) {
                        if ("class" === a || "style" === a || v(a)) i = e; else {
                            var s = e.attrs && e.attrs.type;
                            i = r || j.mustUseProp(t, s, a) ? e.domProps || (e.domProps = {}) : e.attrs || (e.attrs = {});
                        }
                        var c = C(a), u = A(a);
                        if (!(c in i) && !(u in i) && (i[a] = n[a], o)) {
                            var l = e.on || (e.on = {});
                            l["update:" + a] = function(e) {
                                n[a] = e;
                            };
                        }
                    };
                    for (var s in n) a(s);
                } else ;
                return e;
            }
            function Nt(e, t) {
                var n = this._staticTrees || (this._staticTrees = []), r = n[e];
                return r && !t || (r = n[e] = this.$options.staticRenderFns[e].call(this._renderProxy, null, this), 
                Ft(r, "__static__" + e, !1)), r;
            }
            function Gt(e, t, n) {
                return Ft(e, "__once__" + t + (n ? "_" + n : ""), !0), e;
            }
            function Ft(e, t, n) {
                if (Array.isArray(e)) for (var r = 0; r < e.length; r++) e[r] && "string" !== typeof e[r] && Ut(e[r], t + "_" + r, n); else Ut(e, t, n);
            }
            function Ut(e, t, n) {
                e.isStatic = !0, e.key = t, e.isOnce = n;
            }
            function qt(e, t) {
                if (t) if (l(t)) {
                    var n = e.on = e.on ? k({}, e.on) : {};
                    for (var r in t) {
                        var o = n[r], i = t[r];
                        n[r] = o ? [].concat(o, i) : i;
                    }
                } else ;
                return e;
            }
            function jt(e, t, n, r) {
                t = t || {
                    $stable: !n
                };
                for (var o = 0; o < e.length; o++) {
                    var i = e[o];
                    Array.isArray(i) ? jt(i, t, n) : i && (i.proxy && (i.fn.proxy = !0), t[i.key] = i.fn);
                }
                return r && (t.$key = r), t;
            }
            function $t(e, t) {
                for (var n = 0; n < t.length; n += 2) {
                    var r = t[n];
                    "string" === typeof r && r && (e[t[n]] = t[n + 1]);
                }
                return e;
            }
            function Vt(e, t) {
                return "string" === typeof e ? t + e : e;
            }
            function Bt(e) {
                e._o = Gt, e._n = g, e._s = d, e._l = Dt, e._t = kt, e._q = N, e._i = G, e._m = Nt, 
                e._f = Ot, e._k = Rt, e._b = Pt, e._v = ve, e._e = me, e._u = jt, e._g = qt, e._d = $t, 
                e._p = Vt;
            }
            function Ht(e, t, r, o, a) {
                var s, c = this, u = a.options;
                S(o, "_uid") ? (s = Object.create(o), s._original = o) : (s = o, o = o._original);
                var l = i(u._compiled), p = !l;
                this.data = e, this.props = t, this.children = r, this.parent = o, this.listeners = e.on || n, 
                this.injections = Tt(u.inject, o), this.slots = function() {
                    return c.$slots || bt(e.scopedSlots, c.$slots = Et(r, o)), c.$slots;
                }, Object.defineProperty(this, "scopedSlots", {
                    enumerable: !0,
                    get: function() {
                        return bt(e.scopedSlots, this.slots());
                    }
                }), l && (this.$options = u, this.$slots = this.slots(), this.$scopedSlots = bt(e.scopedSlots, this.$slots)), 
                u._scopeId ? this._c = function(e, t, n, r) {
                    var i = on(s, e, t, n, r, p);
                    return i && !Array.isArray(i) && (i.fnScopeId = u._scopeId, i.fnContext = o), i;
                } : this._c = function(e, t, n, r) {
                    return on(s, e, t, n, r, p);
                };
            }
            function Kt(e, t, r, i, a) {
                var s = e.options, c = {}, u = s.props;
                if (o(u)) for (var l in u) c[l] = He(l, u, t || n); else o(r.attrs) && Wt(c, r.attrs), 
                o(r.props) && Wt(c, r.props);
                var p = new Ht(r, c, a, i, e), h = s.render.call(null, p._c, p);
                if (h instanceof de) return zt(h, r, p.parent, s, p);
                if (Array.isArray(h)) {
                    for (var f = _t(h) || [], d = new Array(f.length), g = 0; g < f.length; g++) d[g] = zt(f[g], r, p.parent, s, p);
                    return d;
                }
            }
            function zt(e, t, n, r, o) {
                var i = ye(e);
                return i.fnContext = n, i.fnOptions = r, t.slot && ((i.data || (i.data = {})).slot = t.slot), 
                i;
            }
            function Wt(e, t) {
                for (var n in t) e[C(n)] = t[n];
            }
            Bt(Ht.prototype);
            var Yt = {
                init: function(e, t) {
                    if (e.componentInstance && !e.componentInstance._isDestroyed && e.data.keepAlive) {
                        var n = e;
                        Yt.prepatch(n, n);
                    } else {
                        var r = e.componentInstance = Qt(e, Tn);
                        r.$mount(t ? e.elm : void 0, t);
                    }
                },
                prepatch: function(e, t) {
                    var n = t.componentOptions, r = t.componentInstance = e.componentInstance;
                    xn(r, n.propsData, n.listeners, t, n.children);
                },
                insert: function(e) {
                    var t = e.context, n = e.componentInstance;
                    n._isMounted || (On(n, "onServiceCreated"), On(n, "onServiceAttached"), n._isMounted = !0, 
                    On(n, "mounted")), e.data.keepAlive && (t._isMounted ? Bn(n) : Dn(n, !0));
                },
                destroy: function(e) {
                    var t = e.componentInstance;
                    t._isDestroyed || (e.data.keepAlive ? kn(t, !0) : t.$destroy());
                }
            }, Jt = Object.keys(Yt);
            function Xt(e, t, n, a, s) {
                if (!r(e)) {
                    var u = n.$options._base;
                    if (c(e) && (e = u.extend(e)), "function" === typeof e) {
                        var l;
                        if (r(e.cid) && (l = e, e = gn(l, u), void 0 === e)) return dn(l, t, n, a, s);
                        t = t || {}, fr(e), o(t.model) && tn(e.options, t);
                        var p = mt(t, e, s, n);
                        if (i(e.options.functional)) return Kt(e, p, t, n, a);
                        var h = t.on;
                        if (t.on = t.nativeOn, i(e.options.abstract)) {
                            var f = t.slot;
                            t = {}, f && (t.slot = f);
                        }
                        Zt(t);
                        var d = e.options.name || s, g = new de("vue-component-" + e.cid + (d ? "-" + d : ""), t, void 0, void 0, void 0, n, {
                            Ctor: e,
                            propsData: p,
                            listeners: h,
                            tag: s,
                            children: a
                        }, l);
                        return g;
                    }
                }
            }
            function Qt(e, t) {
                var n = {
                    _isComponent: !0,
                    _parentVnode: e,
                    parent: t
                }, r = e.data.inlineTemplate;
                return o(r) && (n.render = r.render, n.staticRenderFns = r.staticRenderFns), new e.componentOptions.Ctor(n);
            }
            function Zt(e) {
                for (var t = e.hook || (e.hook = {}), n = 0; n < Jt.length; n++) {
                    var r = Jt[n], o = t[r], i = Yt[r];
                    o === i || o && o._merged || (t[r] = o ? en(i, o) : i);
                }
            }
            function en(e, t) {
                var n = function(n, r) {
                    e(n, r), t(n, r);
                };
                return n._merged = !0, n;
            }
            function tn(e, t) {
                var n = e.model && e.model.prop || "value", r = e.model && e.model.event || "input";
                (t.attrs || (t.attrs = {}))[n] = t.model.value;
                var i = t.on || (t.on = {}), a = i[r], s = t.model.callback;
                o(a) ? (Array.isArray(a) ? -1 === a.indexOf(s) : a !== s) && (i[r] = [ s ].concat(a)) : i[r] = s;
            }
            var nn = 1, rn = 2;
            function on(e, t, n, r, o, a) {
                return (Array.isArray(n) || s(n)) && (o = r, r = n, n = void 0), i(a) && (o = rn), 
                an(e, t, n, r, o);
            }
            function an(e, t, n, r, i) {
                if (o(n) && o(n.__ob__)) return me();
                if (o(n) && o(n.is) && (t = n.is), !t) return me();
                var a, s, c;
                (Array.isArray(r) && "function" === typeof r[0] && (n = n || {}, n.scopedSlots = {
                    default: r[0]
                }, r.length = 0), i === rn ? r = _t(r) : i === nn && (r = yt(r)), "string" === typeof t) ? (s = e.$vnode && e.$vnode.ns || j.getTagNamespace(t), 
                a = j.isReservedTag(t) ? new de(j.parsePlatformTagName(t), n, r, void 0, void 0, e) : n && n.pre || !o(c = Be(e.$options, "components", t)) ? new de(t, n, r, void 0, void 0, e) : Xt(c, n, e, r, t)) : a = Xt(t, n, e, r);
                return Array.isArray(a) ? a : o(a) ? (o(s) && sn(a, s), o(n) && cn(n), a) : me();
            }
            function sn(e, t, n) {
                if (e.ns = t, "foreignObject" === e.tag && (t = void 0, n = !0), o(e.children)) for (var a = 0, s = e.children.length; a < s; a++) {
                    var c = e.children[a];
                    o(c.tag) && (r(c.ns) || i(n) && "svg" !== c.tag) && sn(c, t, n);
                }
            }
            function cn(e) {
                c(e.style) && lt(e.style), c(e.class) && lt(e.class);
            }
            function un(e) {
                e._vnode = null, e._staticTrees = null;
                var t = e.$options, r = e.$vnode = t._parentVnode, o = r && r.context;
                e.$slots = Et(t._renderChildren, o), e.$scopedSlots = n, e._c = function(t, n, r, o) {
                    return on(e, t, n, r, o, !1);
                }, e.$createElement = function(t, n, r, o) {
                    return on(e, t, n, r, o, !0);
                };
                var i = r && r.data;
                we(e, "$attrs", i && i.attrs || n, null, !0), we(e, "$listeners", t._parentListeners || n, null, !0);
            }
            var ln, pn = null;
            function hn(e) {
                Bt(e.prototype), e.prototype.$nextTick = function(e) {
                    return ct(e, this);
                }, e.prototype._render = function() {
                    var e, t = this, n = t.$options, r = n.render, o = n._parentVnode;
                    o && (t.$scopedSlots = bt(o.data.scopedSlots, t.$slots, t.$scopedSlots)), t.$vnode = o;
                    try {
                        pn = t, e = r.call(t._renderProxy, t.$createElement);
                    } catch (no) {
                        Je(no, t, "render"), e = t._vnode;
                    } finally {
                        pn = null;
                    }
                    return Array.isArray(e) && 1 === e.length && (e = e[0]), e instanceof de || (e = me()), 
                    e.parent = o, e;
                };
            }
            function fn(e, t) {
                return (e.__esModule || ce && "Module" === e[Symbol.toStringTag]) && (e = e.default), 
                c(e) ? t.extend(e) : e;
            }
            function dn(e, t, n, r, o) {
                var i = me();
                return i.asyncFactory = e, i.asyncMeta = {
                    data: t,
                    context: n,
                    children: r,
                    tag: o
                }, i;
            }
            function gn(e, t) {
                if (i(e.error) && o(e.errorComp)) return e.errorComp;
                if (o(e.resolved)) return e.resolved;
                var n = pn;
                if (n && o(e.owners) && -1 === e.owners.indexOf(n) && e.owners.push(n), i(e.loading) && o(e.loadingComp)) return e.loadingComp;
                if (n && !o(e.owners)) {
                    var a = e.owners = [ n ], s = !0, u = null, l = null;
                    n.$on("hook:destroyed", function() {
                        return y(a, n);
                    });
                    var p = function(e) {
                        for (var t = 0, n = a.length; t < n; t++) a[t].$forceUpdate();
                        e && (a.length = 0, null !== u && (clearTimeout(u), u = null), null !== l && (clearTimeout(l), 
                        l = null));
                    }, h = F(function(n) {
                        e.resolved = fn(n, t), s ? a.length = 0 : p(!0);
                    }), d = F(function(t) {
                        o(e.errorComp) && (e.error = !0, p(!0));
                    }), g = e(h, d);
                    return c(g) && (f(g) ? r(e.resolved) && g.then(h, d) : f(g.component) && (g.component.then(h, d), 
                    o(g.error) && (e.errorComp = fn(g.error, t)), o(g.loading) && (e.loadingComp = fn(g.loading, t), 
                    0 === g.delay ? e.loading = !0 : u = setTimeout(function() {
                        u = null, r(e.resolved) && r(e.error) && (e.loading = !0, p(!1));
                    }, g.delay || 200)), o(g.timeout) && (l = setTimeout(function() {
                        l = null, r(e.resolved) && d(null);
                    }, g.timeout)))), s = !1, e.loading ? e.loadingComp : e.resolved;
                }
            }
            function mn(e) {
                return e.isComment && e.asyncFactory;
            }
            function vn(e) {
                if (Array.isArray(e)) for (var t = 0; t < e.length; t++) {
                    var n = e[t];
                    if (o(n) && (o(n.componentOptions) || mn(n))) return n;
                }
            }
            function yn(e) {
                e._events = Object.create(null), e._hasHookEvent = !1;
                var t = e.$options._parentListeners;
                t && Mn(e, t);
            }
            function _n(e, t) {
                ln.$on(e, t);
            }
            function Sn(e, t) {
                ln.$off(e, t);
            }
            function In(e, t) {
                var n = ln;
                return function r() {
                    var o = t.apply(null, arguments);
                    null !== o && n.$off(e, r);
                };
            }
            function Mn(e, t, n) {
                ln = e, dt(t, n || {}, _n, Sn, In, e), ln = void 0;
            }
            function Cn(e) {
                var t = /^hook:/;
                e.prototype.$on = function(e, n) {
                    var r = this;
                    if (Array.isArray(e)) for (var o = 0, i = e.length; o < i; o++) r.$on(e[o], n); else (r._events[e] || (r._events[e] = [])).push(n), 
                    t.test(e) && (r._hasHookEvent = !0);
                    return r;
                }, e.prototype.$once = function(e, t) {
                    var n = this;
                    function r() {
                        n.$off(e, r), t.apply(n, arguments);
                    }
                    return r.fn = t, n.$on(e, r), n;
                }, e.prototype.$off = function(e, t) {
                    var n = this;
                    if (!arguments.length) return n._events = Object.create(null), n;
                    if (Array.isArray(e)) {
                        for (var r = 0, o = e.length; r < o; r++) n.$off(e[r], t);
                        return n;
                    }
                    var i, a = n._events[e];
                    if (!a) return n;
                    if (!t) return n._events[e] = null, n;
                    var s = a.length;
                    while (s--) if (i = a[s], i === t || i.fn === t) {
                        a.splice(s, 1);
                        break;
                    }
                    return n;
                }, e.prototype.$emit = function(e) {
                    var t = this, n = t._events[e];
                    if (n) {
                        n = n.length > 1 ? D(n) : n;
                        for (var r = D(arguments, 1), o = 'event handler for "' + e + '"', i = 0, a = n.length; i < a; i++) Xe(n[i], t, r, t, o);
                    }
                    return t;
                };
            }
            var Tn = null;
            function En(e) {
                var t = Tn;
                return Tn = e, function() {
                    Tn = t;
                };
            }
            function An(e) {
                var t = e.$options, n = t.parent;
                if (n && !t.abstract) {
                    while (n.$options.abstract && n.$parent) n = n.$parent;
                    n.$children.push(e);
                }
                e.$parent = n, e.$root = n ? n.$root : e, e.$children = [], e.$refs = {}, e._watcher = null, 
                e._inactive = null, e._directInactive = !1, e._isMounted = !1, e._isDestroyed = !1, 
                e._isBeingDestroyed = !1;
            }
            function bn(e) {
                e.prototype._update = function(e, t) {
                    var n = this, r = n.$el, o = n._vnode, i = En(n);
                    n._vnode = e, n.$el = o ? n.__patch__(o, e) : n.__patch__(n.$el, e, t, !1), i(), 
                    r && (r.__vue__ = null), n.$el && (n.$el.__vue__ = n), n.$vnode && n.$parent && n.$vnode === n.$parent._vnode && (n.$parent.$el = n.$el);
                }, e.prototype.$forceUpdate = function() {
                    var e = this;
                    e._watcher && e._watcher.update();
                }, e.prototype.$destroy = function() {
                    var e = this;
                    if (!e._isBeingDestroyed) {
                        On(e, "beforeDestroy"), e._isBeingDestroyed = !0;
                        var t = e.$parent;
                        !t || t._isBeingDestroyed || e.$options.abstract || y(t.$children, e), e._watcher && e._watcher.teardown();
                        var n = e._watchers.length;
                        while (n--) e._watchers[n].teardown();
                        e._data.__ob__ && e._data.__ob__.vmCount--, e._isDestroyed = !0, e.__patch__(e._vnode, null), 
                        On(e, "destroyed"), e.$off(), e.$el && (e.$el.__vue__ = null), e.$vnode && (e.$vnode.parent = null);
                    }
                };
            }
            function xn(e, t, r, o, i) {
                var a = o.data.scopedSlots, s = e.$scopedSlots, c = !!(a && !a.$stable || s !== n && !s.$stable || a && e.$scopedSlots.$key !== a.$key), u = !!(i || e.$options._renderChildren || c);
                if (e.$options._parentVnode = o, e.$vnode = o, e._vnode && (e._vnode.parent = o), 
                e.$options._renderChildren = i, e.$attrs = o.data.attrs || n, e.$listeners = r || n, 
                t && e.$options.props) {
                    Te(!1);
                    for (var l = e._props, p = e.$options._propKeys || [], h = 0; h < p.length; h++) {
                        var f = p[h], d = e.$options.props;
                        l[f] = He(f, d, t, e);
                    }
                    Te(!0), e.$options.propsData = t;
                }
                e._$updateProperties && e._$updateProperties(e), r = r || n;
                var g = e.$options._parentListeners;
                e.$options._parentListeners = r, Mn(e, r, g), u && (e.$slots = Et(i, o.context), 
                e.$forceUpdate());
            }
            function wn(e) {
                while (e && (e = e.$parent)) if (e._inactive) return !0;
                return !1;
            }
            function Dn(e, t) {
                if (t) {
                    if (e._directInactive = !1, wn(e)) return;
                } else if (e._directInactive) return;
                if (e._inactive || null === e._inactive) {
                    e._inactive = !1;
                    for (var n = 0; n < e.$children.length; n++) Dn(e.$children[n]);
                    On(e, "activated");
                }
            }
            function kn(e, t) {
                if ((!t || (e._directInactive = !0, !wn(e))) && !e._inactive) {
                    e._inactive = !0;
                    for (var n = 0; n < e.$children.length; n++) kn(e.$children[n]);
                    On(e, "deactivated");
                }
            }
            function On(e, t) {
                he();
                var n = e.$options[t], r = t + " hook";
                if (n) for (var o = 0, i = n.length; o < i; o++) Xe(n[o], e, null, e, r);
                e._hasHookEvent && e.$emit("hook:" + t), fe();
            }
            var Ln = [], Rn = [], Pn = {}, Nn = !1, Gn = !1, Fn = 0;
            function Un() {
                Fn = Ln.length = Rn.length = 0, Pn = {}, Nn = Gn = !1;
            }
            var qn = Date.now;
            if (Y && !Z) {
                var jn = window.performance;
                jn && "function" === typeof jn.now && qn() > document.createEvent("Event").timeStamp && (qn = function() {
                    return jn.now();
                });
            }
            function $n() {
                var e, t;
                for (qn(), Gn = !0, Ln.sort(function(e, t) {
                    return e.id - t.id;
                }), Fn = 0; Fn < Ln.length; Fn++) e = Ln[Fn], e.before && e.before(), t = e.id, 
                Pn[t] = null, e.run();
                var n = Rn.slice(), r = Ln.slice();
                Un(), Hn(n), Vn(r), ie && j.devtools && ie.emit("flush");
            }
            function Vn(e) {
                var t = e.length;
                while (t--) {
                    var n = e[t], r = n.vm;
                    r._watcher === n && r._isMounted && !r._isDestroyed && On(r, "updated");
                }
            }
            function Bn(e) {
                e._inactive = !1, Rn.push(e);
            }
            function Hn(e) {
                for (var t = 0; t < e.length; t++) e[t]._inactive = !0, Dn(e[t], !0);
            }
            function Kn(e) {
                var t = e.id;
                if (null == Pn[t]) {
                    if (Pn[t] = !0, Gn) {
                        var n = Ln.length - 1;
                        while (n > Fn && Ln[n].id > e.id) n--;
                        Ln.splice(n + 1, 0, e);
                    } else Ln.push(e);
                    Nn || (Nn = !0, ct($n));
                }
            }
            var zn = 0, Wn = function(e, t, n, r, o) {
                this.vm = e, o && (e._watcher = this), e._watchers.push(this), r ? (this.deep = !!r.deep, 
                this.user = !!r.user, this.lazy = !!r.lazy, this.sync = !!r.sync, this.before = r.before) : this.deep = this.user = this.lazy = this.sync = !1, 
                this.cb = n, this.id = ++zn, this.active = !0, this.dirty = this.lazy, this.deps = [], 
                this.newDeps = [], this.depIds = new se(), this.newDepIds = new se(), this.expression = "", 
                "function" === typeof t ? this.getter = t : (this.getter = K(t), this.getter || (this.getter = L)), 
                this.value = this.lazy ? void 0 : this.get();
            };
            Wn.prototype.get = function() {
                var e;
                he(this);
                var t = this.vm;
                try {
                    e = this.getter.call(t, t);
                } catch (no) {
                    if (!this.user) throw no;
                    Je(no, t, 'getter for watcher "' + this.expression + '"');
                } finally {
                    this.deep && lt(e), fe(), this.cleanupDeps();
                }
                return e;
            }, Wn.prototype.addDep = function(e) {
                var t = e.id;
                this.newDepIds.has(t) || (this.newDepIds.add(t), this.newDeps.push(e), this.depIds.has(t) || e.addSub(this));
            }, Wn.prototype.cleanupDeps = function() {
                var e = this.deps.length;
                while (e--) {
                    var t = this.deps[e];
                    this.newDepIds.has(t.id) || t.removeSub(this);
                }
                var n = this.depIds;
                this.depIds = this.newDepIds, this.newDepIds = n, this.newDepIds.clear(), n = this.deps, 
                this.deps = this.newDeps, this.newDeps = n, this.newDeps.length = 0;
            }, Wn.prototype.update = function() {
                this.lazy ? this.dirty = !0 : this.sync ? this.run() : Kn(this);
            }, Wn.prototype.run = function() {
                if (this.active) {
                    var e = this.get();
                    if (e !== this.value || c(e) || this.deep) {
                        var t = this.value;
                        if (this.value = e, this.user) try {
                            this.cb.call(this.vm, e, t);
                        } catch (no) {
                            Je(no, this.vm, 'callback for watcher "' + this.expression + '"');
                        } else this.cb.call(this.vm, e, t);
                    }
                }
            }, Wn.prototype.evaluate = function() {
                this.value = this.get(), this.dirty = !1;
            }, Wn.prototype.depend = function() {
                var e = this.deps.length;
                while (e--) this.deps[e].depend();
            }, Wn.prototype.teardown = function() {
                if (this.active) {
                    this.vm._isBeingDestroyed || y(this.vm._watchers, this);
                    var e = this.deps.length;
                    while (e--) this.deps[e].removeSub(this);
                    this.active = !1;
                }
            };
            var Yn = {
                enumerable: !0,
                configurable: !0,
                get: L,
                set: L
            };
            function Jn(e, t, n) {
                Yn.get = function() {
                    return this[t][n];
                }, Yn.set = function(e) {
                    this[t][n] = e;
                }, Object.defineProperty(e, n, Yn);
            }
            function Xn(e) {
                e._watchers = [];
                var t = e.$options;
                t.props && Qn(e, t.props), t.methods && ar(e, t.methods), t.data ? Zn(e) : xe(e._data = {}, !0), 
                t.computed && nr(e, t.computed), t.watch && t.watch !== ne && sr(e, t.watch);
            }
            function Qn(e, t) {
                var n = e.$options.propsData || {}, r = e._props = {}, o = e.$options._propKeys = [], i = !e.$parent;
                i || Te(!1);
                var a = function(i) {
                    o.push(i);
                    var a = He(i, t, n, e);
                    we(r, i, a), i in e || Jn(e, "_props", i);
                };
                for (var s in t) a(s);
                Te(!0);
            }
            function Zn(e) {
                var t = e.$options.data;
                t = e._data = "function" === typeof t ? er(t, e) : t || {}, l(t) || (t = {});
                var n = Object.keys(t), r = e.$options.props, o = (e.$options.methods, n.length);
                while (o--) {
                    var i = n[o];
                    0, r && S(r, i) || V(i) || Jn(e, "_data", i);
                }
                xe(t, !0);
            }
            function er(e, t) {
                he();
                try {
                    return e.call(t, t);
                } catch (no) {
                    return Je(no, t, "data()"), {};
                } finally {
                    fe();
                }
            }
            var tr = {
                lazy: !0
            };
            function nr(e, t) {
                var n = e._computedWatchers = Object.create(null), r = oe();
                for (var o in t) {
                    var i = t[o], a = "function" === typeof i ? i : i.get;
                    0, r || (n[o] = new Wn(e, a || L, L, tr)), o in e || rr(e, o, i);
                }
            }
            function rr(e, t, n) {
                var r = !oe();
                "function" === typeof n ? (Yn.get = r ? or(t) : ir(n), Yn.set = L) : (Yn.get = n.get ? r && !1 !== n.cache ? or(t) : ir(n.get) : L, 
                Yn.set = n.set || L), Object.defineProperty(e, t, Yn);
            }
            function or(e) {
                return function() {
                    var t = this._computedWatchers && this._computedWatchers[e];
                    if (t) return t.dirty && t.evaluate(), pe.SharedObject.target && t.depend(), t.value;
                };
            }
            function ir(e) {
                return function() {
                    return e.call(this, this);
                };
            }
            function ar(e, t) {
                e.$options.props;
                for (var n in t) e[n] = "function" !== typeof t[n] ? L : w(t[n], e);
            }
            function sr(e, t) {
                for (var n in t) {
                    var r = t[n];
                    if (Array.isArray(r)) for (var o = 0; o < r.length; o++) cr(e, n, r[o]); else cr(e, n, r);
                }
            }
            function cr(e, t, n, r) {
                return l(n) && (r = n, n = n.handler), "string" === typeof n && (n = e[n]), e.$watch(t, n, r);
            }
            function ur(e) {
                var t = {
                    get: function() {
                        return this._data;
                    }
                }, n = {
                    get: function() {
                        return this._props;
                    }
                };
                Object.defineProperty(e.prototype, "$data", t), Object.defineProperty(e.prototype, "$props", n), 
                e.prototype.$set = De, e.prototype.$delete = ke, e.prototype.$watch = function(e, t, n) {
                    var r = this;
                    if (l(t)) return cr(r, e, t, n);
                    n = n || {}, n.user = !0;
                    var o = new Wn(r, e, t, n);
                    if (n.immediate) try {
                        t.call(r, o.value);
                    } catch (i) {
                        Je(i, r, 'callback for immediate watcher "' + o.expression + '"');
                    }
                    return function() {
                        o.teardown();
                    };
                };
            }
            var lr = 0;
            function pr(e) {
                e.prototype._init = function(e) {
                    var t = this;
                    t._uid = lr++, t._isVue = !0, e && e._isComponent ? hr(t, e) : t.$options = Ve(fr(t.constructor), e || {}, t), 
                    t._renderProxy = t, t._self = t, An(t), yn(t), un(t), On(t, "beforeCreate"), !t._$fallback && Ct(t), 
                    Xn(t), !t._$fallback && Mt(t), !t._$fallback && On(t, "created"), t.$options.el && t.$mount(t.$options.el);
                };
            }
            function hr(e, t) {
                var n = e.$options = Object.create(e.constructor.options), r = t._parentVnode;
                n.parent = t.parent, n._parentVnode = r;
                var o = r.componentOptions;
                n.propsData = o.propsData, n._parentListeners = o.listeners, n._renderChildren = o.children, 
                n._componentTag = o.tag, t.render && (n.render = t.render, n.staticRenderFns = t.staticRenderFns);
            }
            function fr(e) {
                var t = e.options;
                if (e.super) {
                    var n = fr(e.super), r = e.superOptions;
                    if (n !== r) {
                        e.superOptions = n;
                        var o = dr(e);
                        o && k(e.extendOptions, o), t = e.options = Ve(n, e.extendOptions), t.name && (t.components[t.name] = e);
                    }
                }
                return t;
            }
            function dr(e) {
                var t, n = e.options, r = e.sealedOptions;
                for (var o in n) n[o] !== r[o] && (t || (t = {}), t[o] = n[o]);
                return t;
            }
            function gr(e) {
                this._init(e);
            }
            function mr(e) {
                e.use = function(e) {
                    var t = this._installedPlugins || (this._installedPlugins = []);
                    if (t.indexOf(e) > -1) return this;
                    var n = D(arguments, 1);
                    return n.unshift(this), "function" === typeof e.install ? e.install.apply(e, n) : "function" === typeof e && e.apply(null, n), 
                    t.push(e), this;
                };
            }
            function vr(e) {
                e.mixin = function(e) {
                    return this.options = Ve(this.options, e), this;
                };
            }
            function yr(e) {
                e.cid = 0;
                var t = 1;
                e.extend = function(e) {
                    e = e || {};
                    var n = this, r = n.cid, o = e._Ctor || (e._Ctor = {});
                    if (o[r]) return o[r];
                    var i = e.name || n.options.name;
                    var a = function(e) {
                        this._init(e);
                    };
                    return a.prototype = Object.create(n.prototype), a.prototype.constructor = a, a.cid = t++, 
                    a.options = Ve(n.options, e), a["super"] = n, a.options.props && _r(a), a.options.computed && Sr(a), 
                    a.extend = n.extend, a.mixin = n.mixin, a.use = n.use, U.forEach(function(e) {
                        a[e] = n[e];
                    }), i && (a.options.components[i] = a), a.superOptions = n.options, a.extendOptions = e, 
                    a.sealedOptions = k({}, a.options), o[r] = a, a;
                };
            }
            function _r(e) {
                var t = e.options.props;
                for (var n in t) Jn(e.prototype, "_props", n);
            }
            function Sr(e) {
                var t = e.options.computed;
                for (var n in t) rr(e.prototype, n, t[n]);
            }
            function Ir(e) {
                U.forEach(function(t) {
                    e[t] = function(e, n) {
                        return n ? ("component" === t && l(n) && (n.name = n.name || e, n = this.options._base.extend(n)), 
                        "directive" === t && "function" === typeof n && (n = {
                            bind: n,
                            update: n
                        }), this.options[t + "s"][e] = n, n) : this.options[t + "s"][e];
                    };
                });
            }
            function Mr(e) {
                return e && (e.Ctor.options.name || e.tag);
            }
            function Cr(e, t) {
                return Array.isArray(e) ? e.indexOf(t) > -1 : "string" === typeof e ? e.split(",").indexOf(t) > -1 : !!p(e) && e.test(t);
            }
            function Tr(e, t) {
                var n = e.cache, r = e.keys, o = e._vnode;
                for (var i in n) {
                    var a = n[i];
                    if (a) {
                        var s = Mr(a.componentOptions);
                        s && !t(s) && Er(n, i, r, o);
                    }
                }
            }
            function Er(e, t, n, r) {
                var o = e[t];
                !o || r && o.tag === r.tag || o.componentInstance.$destroy(), e[t] = null, y(n, t);
            }
            pr(gr), ur(gr), Cn(gr), bn(gr), hn(gr);
            var Ar = [ String, RegExp, Array ], br = {
                name: "keep-alive",
                abstract: !0,
                props: {
                    include: Ar,
                    exclude: Ar,
                    max: [ String, Number ]
                },
                created: function() {
                    this.cache = Object.create(null), this.keys = [];
                },
                destroyed: function() {
                    for (var e in this.cache) Er(this.cache, e, this.keys);
                },
                mounted: function() {
                    var e = this;
                    this.$watch("include", function(t) {
                        Tr(e, function(e) {
                            return Cr(t, e);
                        });
                    }), this.$watch("exclude", function(t) {
                        Tr(e, function(e) {
                            return !Cr(t, e);
                        });
                    });
                },
                render: function() {
                    var e = this.$slots.default, t = vn(e), n = t && t.componentOptions;
                    if (n) {
                        var r = Mr(n), o = this, i = o.include, a = o.exclude;
                        if (i && (!r || !Cr(i, r)) || a && r && Cr(a, r)) return t;
                        var s = this, c = s.cache, u = s.keys, l = null == t.key ? n.Ctor.cid + (n.tag ? "::" + n.tag : "") : t.key;
                        c[l] ? (t.componentInstance = c[l].componentInstance, y(u, l), u.push(l)) : (c[l] = t, 
                        u.push(l), this.max && u.length > parseInt(this.max) && Er(c, u[0], u, this._vnode)), 
                        t.data.keepAlive = !0;
                    }
                    return t || e && e[0];
                }
            }, xr = {
                KeepAlive: br
            };
            function wr(e) {
                var t = {
                    get: function() {
                        return j;
                    }
                };
                Object.defineProperty(e, "config", t), e.util = {
                    warn: ue,
                    extend: k,
                    mergeOptions: Ve,
                    defineReactive: we
                }, e.set = De, e.delete = ke, e.nextTick = ct, e.observable = function(e) {
                    return xe(e), e;
                }, e.options = Object.create(null), U.forEach(function(t) {
                    e.options[t + "s"] = Object.create(null);
                }), e.options._base = e, k(e.options.components, xr), mr(e), vr(e), yr(e), Ir(e);
            }
            wr(gr), Object.defineProperty(gr.prototype, "$isServer", {
                get: oe
            }), Object.defineProperty(gr.prototype, "$ssrContext", {
                get: function() {
                    return this.$vnode && this.$vnode.ssrContext;
                }
            }), Object.defineProperty(gr, "FunctionalRenderContext", {
                value: Ht
            }), gr.version = "2.6.11";
            var Dr = "[object Array]", kr = "[object Object]";
            function Or(e, t) {
                var n = {};
                return Lr(e, t), Rr(e, t, "", n), n;
            }
            function Lr(e, t) {
                if (e !== t) {
                    var n = Nr(e), r = Nr(t);
                    if (n == kr && r == kr) {
                        if (Object.keys(e).length >= Object.keys(t).length) for (var o in t) {
                            var i = e[o];
                            void 0 === i ? e[o] = null : Lr(i, t[o]);
                        }
                    } else n == Dr && r == Dr && e.length >= t.length && t.forEach(function(t, n) {
                        Lr(e[n], t);
                    });
                }
            }
            function Rr(e, t, n, r) {
                if (e !== t) {
                    var o = Nr(e), i = Nr(t);
                    if (o == kr) if (i != kr || Object.keys(e).length < Object.keys(t).length) Pr(r, n, e); else {
                        var a = function(o) {
                            var i = e[o], a = t[o], s = Nr(i), c = Nr(a);
                            if (s != Dr && s != kr) i != t[o] && Pr(r, ("" == n ? "" : n + ".") + o, i); else if (s == Dr) c != Dr || i.length < a.length ? Pr(r, ("" == n ? "" : n + ".") + o, i) : i.forEach(function(e, t) {
                                Rr(e, a[t], ("" == n ? "" : n + ".") + o + "[" + t + "]", r);
                            }); else if (s == kr) if (c != kr || Object.keys(i).length < Object.keys(a).length) Pr(r, ("" == n ? "" : n + ".") + o, i); else for (var u in i) Rr(i[u], a[u], ("" == n ? "" : n + ".") + o + "." + u, r);
                        };
                        for (var s in e) a(s);
                    } else o == Dr ? i != Dr || e.length < t.length ? Pr(r, n, e) : e.forEach(function(e, o) {
                        Rr(e, t[o], n + "[" + o + "]", r);
                    }) : Pr(r, n, e);
                }
            }
            function Pr(e, t, n) {
                e[t] = n;
            }
            function Nr(e) {
                return Object.prototype.toString.call(e);
            }
            function Gr(e) {
                if (e.__next_tick_callbacks && e.__next_tick_callbacks.length) {
                    if (Object({
                        VUE_APP_NAME: "lottery",
                        VUE_APP_PLATFORM: "mp-weixin",
                        NODE_ENV: "production",
                        BASE_URL: "/"
                    }).VUE_APP_DEBUG) {
                        var t = e.$scope;
                        console.log("[" + +new Date() + "][" + (t.is || t.route) + "][" + e._uid + "]:flushCallbacks[" + e.__next_tick_callbacks.length + "]");
                    }
                    var n = e.__next_tick_callbacks.slice(0);
                    e.__next_tick_callbacks.length = 0;
                    for (var r = 0; r < n.length; r++) n[r]();
                }
            }
            function Fr(e) {
                return Ln.find(function(t) {
                    return e._watcher === t;
                });
            }
            function Ur(e, t) {
                if (!e.__next_tick_pending && !Fr(e)) {
                    if (Object({
                        VUE_APP_NAME: "lottery",
                        VUE_APP_PLATFORM: "mp-weixin",
                        NODE_ENV: "production",
                        BASE_URL: "/"
                    }).VUE_APP_DEBUG) {
                        var n = e.$scope;
                        console.log("[" + +new Date() + "][" + (n.is || n.route) + "][" + e._uid + "]:nextVueTick");
                    }
                    return ct(t, e);
                }
                if (Object({
                    VUE_APP_NAME: "lottery",
                    VUE_APP_PLATFORM: "mp-weixin",
                    NODE_ENV: "production",
                    BASE_URL: "/"
                }).VUE_APP_DEBUG) {
                    var r = e.$scope;
                    console.log("[" + +new Date() + "][" + (r.is || r.route) + "][" + e._uid + "]:nextMPTick");
                }
                var o;
                if (e.__next_tick_callbacks || (e.__next_tick_callbacks = []), e.__next_tick_callbacks.push(function() {
                    if (t) try {
                        t.call(e);
                    } catch (no) {
                        Je(no, e, "nextTick");
                    } else o && o(e);
                }), !t && "undefined" !== typeof Promise) return new Promise(function(e) {
                    o = e;
                });
            }
            function qr(e) {
                var t = Object.create(null), n = [].concat(Object.keys(e._data || {}), Object.keys(e._computedWatchers || {}));
                n.reduce(function(t, n) {
                    return t[n] = e[n], t;
                }, t);
                var r = e.__composition_api_state__ || e.__secret_vfa_state__, o = r && r.rawBindings;
                return o && Object.keys(o).forEach(function(n) {
                    t[n] = e[n];
                }), Object.assign(t, e.$mp.data || {}), Array.isArray(e.$options.behaviors) && -1 !== e.$options.behaviors.indexOf("uni://form-field") && (t["name"] = e.name, 
                t["value"] = e.value), JSON.parse(JSON.stringify(t));
            }
            var jr = function(e, t) {
                var n = this;
                if (null !== t && ("page" === this.mpType || "component" === this.mpType)) {
                    var r = this.$scope, o = Object.create(null);
                    try {
                        o = qr(this);
                    } catch (s) {
                        console.error(s);
                    }
                    o.__webviewId__ = r.data.__webviewId__;
                    var i = Object.create(null);
                    Object.keys(o).forEach(function(e) {
                        i[e] = r.data[e];
                    });
                    var a = !1 === this.$shouldDiffData ? o : Or(o, i);
                    Object.keys(a).length ? (Object({
                        VUE_APP_NAME: "lottery",
                        VUE_APP_PLATFORM: "mp-weixin",
                        NODE_ENV: "production",
                        BASE_URL: "/"
                    }).VUE_APP_DEBUG && console.log("[" + +new Date() + "][" + (r.is || r.route) + "][" + this._uid + "]差量更新", JSON.stringify(a)), 
                    this.__next_tick_pending = !0, r.setData(a, function() {
                        n.__next_tick_pending = !1, Gr(n);
                    })) : Gr(this);
                }
            };
            function $r() {}
            function Vr(e, t, n) {
                if (!e.mpType) return e;
                "app" === e.mpType && (e.$options.render = $r), e.$options.render || (e.$options.render = $r), 
                !e._$fallback && On(e, "beforeMount");
                var r = function() {
                    e._update(e._render(), n);
                };
                return new Wn(e, r, L, {
                    before: function() {
                        e._isMounted && !e._isDestroyed && On(e, "beforeUpdate");
                    }
                }, !0), n = !1, e;
            }
            function Br(e, t) {
                return o(e) || o(t) ? Hr(e, Kr(t)) : "";
            }
            function Hr(e, t) {
                return e ? t ? e + " " + t : e : t || "";
            }
            function Kr(e) {
                return Array.isArray(e) ? zr(e) : c(e) ? Wr(e) : "string" === typeof e ? e : "";
            }
            function zr(e) {
                for (var t, n = "", r = 0, i = e.length; r < i; r++) o(t = Kr(e[r])) && "" !== t && (n && (n += " "), 
                n += t);
                return n;
            }
            function Wr(e) {
                var t = "";
                for (var n in e) e[n] && (t && (t += " "), t += n);
                return t;
            }
            var Yr = I(function(e) {
                var t = {}, n = /;(?![^(]*\))/g, r = /:(.+)/;
                return e.split(n).forEach(function(e) {
                    if (e) {
                        var n = e.split(r);
                        n.length > 1 && (t[n[0].trim()] = n[1].trim());
                    }
                }), t;
            });
            function Jr(e) {
                return Array.isArray(e) ? O(e) : "string" === typeof e ? Yr(e) : e;
            }
            var Xr = [ "createSelectorQuery", "createIntersectionObserver", "selectAllComponents", "selectComponent" ];
            function Qr(e, t) {
                var n = t.split("."), r = n[0];
                return 0 === r.indexOf("__$n") && (r = parseInt(r.replace("__$n", ""))), 1 === n.length ? e[r] : Qr(e[r], n.slice(1).join("."));
            }
            function Zr(e) {
                e.config.errorHandler = function(t, n, r) {
                    e.util.warn("Error in " + r + ': "' + t.toString() + '"', n), console.error(t);
                    var o = "function" === typeof getApp && getApp();
                    o && o.onError && o.onError(t);
                };
                var t = e.prototype.$emit;
                e.prototype.$emit = function(e) {
                    return this.$scope && e && this.$scope["triggerEvent"](e, {
                        __args__: D(arguments, 1)
                    }), t.apply(this, arguments);
                }, e.prototype.$nextTick = function(e) {
                    return Ur(this, e);
                }, Xr.forEach(function(t) {
                    e.prototype[t] = function(e) {
                        return this.$scope && this.$scope[t] ? this.$scope[t](e) : "undefined" !== typeof my ? "createSelectorQuery" === t ? my.createSelectorQuery(e) : "createIntersectionObserver" === t ? my.createIntersectionObserver(e) : void 0 : void 0;
                    };
                }), e.prototype.__init_provide = Mt, e.prototype.__init_injections = Ct, e.prototype.__call_hook = function(e, t) {
                    var n = this;
                    he();
                    var r, o = n.$options[e], i = e + " hook";
                    if (o) for (var a = 0, s = o.length; a < s; a++) r = Xe(o[a], n, t ? [ t ] : null, n, i);
                    return n._hasHookEvent && n.$emit("hook:" + e, t), fe(), r;
                }, e.prototype.__set_model = function(e, t, n, r) {
                    Array.isArray(r) && (-1 !== r.indexOf("trim") && (n = n.trim()), -1 !== r.indexOf("number") && (n = this._n(n))), 
                    e || (e = this), e[t] = n;
                }, e.prototype.__set_sync = function(e, t, n) {
                    e || (e = this), e[t] = n;
                }, e.prototype.__get_orig = function(e) {
                    return l(e) && e["$orig"] || e;
                }, e.prototype.__get_value = function(e, t) {
                    return Qr(t || this, e);
                }, e.prototype.__get_class = function(e, t) {
                    return Br(t, e);
                }, e.prototype.__get_style = function(e, t) {
                    if (!e && !t) return "";
                    var n = Jr(e), r = t ? k(t, n) : n;
                    return Object.keys(r).map(function(e) {
                        return A(e) + ":" + r[e];
                    }).join(";");
                }, e.prototype.__map = function(e, t) {
                    var n, r, o, i, a;
                    if (Array.isArray(e)) {
                        for (n = new Array(e.length), r = 0, o = e.length; r < o; r++) n[r] = t(e[r], r);
                        return n;
                    }
                    if (c(e)) {
                        for (i = Object.keys(e), n = Object.create(null), r = 0, o = i.length; r < o; r++) a = i[r], 
                        n[a] = t(e[a], a, r);
                        return n;
                    }
                    if ("number" === typeof e) {
                        for (n = new Array(e), r = 0, o = e; r < o; r++) n[r] = t(r, r);
                        return n;
                    }
                    return [];
                };
            }
            var eo = [ "onLaunch", "onShow", "onHide", "onUniNViewMessage", "onPageNotFound", "onThemeChange", "onError", "onUnhandledRejection", "onInit", "onLoad", "onReady", "onUnload", "onPullDownRefresh", "onReachBottom", "onTabItemTap", "onAddToFavorites", "onShareTimeline", "onShareAppMessage", "onResize", "onPageScroll", "onNavigationBarButtonTap", "onBackPress", "onNavigationBarSearchInputChanged", "onNavigationBarSearchInputConfirmed", "onNavigationBarSearchInputClicked", "onPageShow", "onPageHide", "onPageResize" ];
            function to(e) {
                var t = e.extend;
                e.extend = function(e) {
                    e = e || {};
                    var n = e.methods;
                    return n && Object.keys(n).forEach(function(t) {
                        -1 !== eo.indexOf(t) && (e[t] = n[t], delete n[t]);
                    }), t.call(this, e);
                };
                var n = e.config.optionMergeStrategies, r = n.created;
                eo.forEach(function(e) {
                    n[e] = r;
                }), e.prototype.__lifecycle_hooks__ = eo;
            }
            gr.prototype.__patch__ = jr, gr.prototype.$mount = function(e, t) {
                return Vr(this, e, t);
            }, to(gr), Zr(gr), t["default"] = gr;
        }.call(this, n("c8ba"));
    },
    "6d7c": function(e, t) {},
    "76b3": function(e, t, n) {
        "use strict";
        (function(e) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var r = n("2afc"), o = i(n("65e4"));
            function i(e) {
                return e && e.__esModule ? e : {
                    default: e
                };
            }
            function a(e, t) {
                return p(e) || l(e, t) || c(e, t) || s();
            }
            function s() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            function c(e, t) {
                if (e) {
                    if ("string" === typeof e) return u(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? u(e, t) : void 0;
                }
            }
            function u(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
                return r;
            }
            function l(e, t) {
                if ("undefined" !== typeof Symbol && Symbol.iterator in Object(e)) {
                    var n = [], r = !0, o = !1, i = void 0;
                    try {
                        for (var a, s = e[Symbol.iterator](); !(r = (a = s.next()).done); r = !0) if (n.push(a.value), 
                        t && n.length === t) break;
                    } catch (c) {
                        o = !0, i = c;
                    } finally {
                        try {
                            r || null == s["return"] || s["return"]();
                        } finally {
                            if (o) throw i;
                        }
                    }
                    return n;
                }
            }
            function p(e) {
                if (Array.isArray(e)) return e;
            }
            var h = function() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "GET", s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {
                    "x-token": e.getStorageSync("user_tk")
                }, c = arguments.length > 4 ? arguments[4] : void 0;
                return new Promise(function(u, l) {
                    var p = "";
                    p = t.includes("https") > 0 ? t : r.APIHOST + t;
                    var h = {
                        method: i,
                        url: p,
                        data: n,
                        header: s,
                        dataType: "json"
                    };
                    c && (h.responseType = c), e.request(h).then(function(t) {
                        var n = a(t, 2), r = (n[0], n[1]);
                        "40011" === r.data.code && (e.setStorageSync("isLogin", !1), e.removeStorageSync("user_nm", !1), 
                        e.removeStorageSync("user_tk"), o.default.commit("reset"), o.default.dispatch("login").then(function() {
                            o.default.dispatch("timLogin");
                        })), u(r.data);
                    }).catch(function(e) {
                        var t = a(e, 2), n = t[0];
                        t[1];
                        l(n);
                    });
                });
            }, f = h;
            t.default = f;
        }).call(this, n("543d")["default"]);
    },
    "7a1d": function(e, t, n) {
        "use strict";
        (function(e) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var r = s(n("a34a")), o = s(n("66fd")), i = s(n("65e4")), a = n("88b3");
            function s(e) {
                return e && e.__esModule ? e : {
                    default: e
                };
            }
            function c(e, t, n, r, o, i, a) {
                try {
                    var s = e[i](a), c = s.value;
                } catch (u) {
                    return void n(u);
                }
                s.done ? t(c) : Promise.resolve(c).then(r, o);
            }
            function u(e) {
                return function() {
                    var t = this, n = arguments;
                    return new Promise(function(r, o) {
                        var i = e.apply(t, n);
                        function a(e) {
                            c(i, r, o, a, s, "next", e);
                        }
                        function s(e) {
                            c(i, r, o, a, s, "throw", e);
                        }
                        a(void 0);
                    });
                };
            }
            var l = function() {
                o.default.mixin({
                    data: function() {
                        return {
                            code: "",
                            token: "",
                            openId: "",
                            sessionKey: "",
                            userType: "",
                            userInfo: null
                        };
                    },
                    computed: {
                        isLogin: function() {
                            return i.default.state.isLogin;
                        },
                        isExistPhone: function() {
                            return i.default.state.isExistPhone;
                        }
                    },
                    methods: {
                        getPhoneNumber: function(t) {
                            var n = this;
                            if (console.log("++++++++++++++++++++++"), console.log(t, "==e"), t.detail.encryptedData) {
                                var o = t.detail.iv, i = t.detail.encryptedData, a = t.detail.cloudID;
                                wx.login({
                                    success: function() {
                                        var t = u(r.default.mark(function t(s) {
                                            var c, u;
                                            return r.default.wrap(function(t) {
                                                while (1) switch (t.prev = t.next) {
                                                  case 0:
                                                    return console.log("code转换", s.code), t.next = 3, n.$request("wxLogin", {
                                                        chatId: "",
                                                        code: s.code,
                                                        userType: 1,
                                                        type: 2
                                                    }, "POST");

                                                  case 3:
                                                    c = t.sent, u = c.data.sessionKey, console.log(), n.$request("wxUser/phone/dataSave", {
                                                        cloudID: a,
                                                        sessionKey: u,
                                                        encryptedData: i,
                                                        iv: o
                                                    }, "post").then(function(t) {
                                                        "0" === t.code ? (n.$store.commit("updatePhone", !0), e.setStorageSync("isExistPhone", !0)) : (n.$store.commit("updatePhone", !1), 
                                                        e.setStorageSync("isExistPhone", !1));
                                                    });

                                                  case 7:
                                                  case "end":
                                                    return t.stop();
                                                }
                                            }, t);
                                        }));
                                        function s(e) {
                                            return t.apply(this, arguments);
                                        }
                                        return s;
                                    }()
                                });
                            } else e.showToast({
                                title: "授权失败！",
                                icon: "none"
                            });
                        },
                        handleShare: function(t) {
                            if (t.chatId) {
                                e.setStorageSync("sharedChatId", t.chatId);
                                var n = e.getStorageSync("userInfo");
                                n ? this.$request("share/to/oldUser/".concat(t.chatId)) : this.login();
                            }
                        },
                        back: function() {
                            e.navigateBack({
                                delta: 1,
                                success: function() {
                                    var e = getCurrentPages().pop();
                                    console.log(e);
                                },
                                fail: function() {
                                    wx.reLaunch({
                                        url: "/pages/index/index"
                                    });
                                }
                            });
                        },
                        login: function(t) {
                            var n = this;
                            e.login({
                                provider: "weixin",
                                success: function(r) {
                                    var o = "";
                                    o = e.getStorageSync("sharedChatId") ? e.getStorageSync("sharedChatId") : "", n.code = r.code, 
                                    e.request({
                                        url: n.apiServer + "wxLogin",
                                        data: {
                                            chatId: o,
                                            code: n.code,
                                            userType: 1
                                        },
                                        method: "POST",
                                        success: function(r) {
                                            e.removeStorageSync("sharedChatId"), console.log("ywl:codeRes:", r), e.hideLoading(), 
                                            n.token = r.data.data.token, n.openId = r.data.data.openId, n.sessionKey = r.data.data.sessionKey, 
                                            n.userType = r.data.data.userType, e.setStorageSync("chatId", r.data.data.chatId), 
                                            e.setStorageSync("user_tk", n.token), r.data.data.avatar && e.setStorageSync("user_avt", r.data.data.avatar), 
                                            r.data.data.nickName && e.setStorageSync("user_nm", r.data.data.nickName), n.loginUser(), 
                                            t && t();
                                        }
                                    });
                                }
                            });
                        },
                        loginUser: function(t) {
                            var n = this, r = e.getStorageSync("user_tk");
                            r ? this.$request("user/userSig", {}, "GET").then(function(r) {
                                if (0 == r.code && (e.setStorageSync("userTimId", JSON.stringify(r.data)), r.data)) {
                                    var o = {}, i = r.data;
                                    o.user = i.nickname || "im", o.userId = i.chatId, o.img = i.avatar, o.userSig = i.userSig;
                                    var a = n.tim.login({
                                        userID: i.chatId,
                                        userSig: i.userSig
                                    });
                                    e.hideLoading(), a.then(function(r) {
                                        console.log("登录成功----------", r, o), n.$store.commit("toggleIsLogin", !0), console.log("==============", n.isLogin), 
                                        e.setStorageSync("isLogin", !0), e.setStorageSync("userInfo", JSON.stringify(o)), 
                                        e.setStorageSync("userTIMInfo", JSON.stringify(r.data)), "function" === typeof t && t();
                                    }).catch(function(t) {
                                        e.hideLoading(), console.warn("login error:", t);
                                    });
                                }
                            }) : this.login();
                        },
                        wxGetUserInfo: (0, a.throttle)(function(t) {
                            var n = this, r = this;
                            wx.getUserProfile({
                                desc: "用于完善会员资料",
                                success: function(o) {
                                    e.showLoading({
                                        title: "登录中..."
                                    }), r.userInfo = o.userInfo, r.login(function() {
                                        return e.request({
                                            url: r.apiServer + "wxLogin/dataSave",
                                            data: {
                                                openid: r.openId,
                                                avatarUrl: r.userInfo.avatarUrl,
                                                city: r.userInfo.city,
                                                country: r.userInfo.country,
                                                gender: r.userInfo.gender,
                                                language: r.userInfo.language,
                                                nickName: r.userInfo.nickName
                                            },
                                            header: {
                                                "x-token": r.token
                                            },
                                            method: "POST",
                                            success: function(o) {
                                                if (0 != o.data.code) return e.showToast({
                                                    title: o.data.msg,
                                                    icon: "none"
                                                }), !1;
                                                e.showToast({
                                                    title: "登录成功"
                                                }), null != o.data.data.phone && "" != o.data.data.phone ? e.setStorageSync("isExistPhone", !0) : e.setStorageSync("isExistPhone", !1), 
                                                e.setStorageSync("user_tk", r.token), e.setStorageSync("user_nm", o.data.data.nickName), 
                                                e.setStorageSync("user_avt", o.data.data.avatarUrl), n.loginUser(t);
                                            },
                                            fail: function() {
                                                e.showToast({
                                                    title: "获取用户信息失败",
                                                    icon: "none"
                                                });
                                            }
                                        }), !1;
                                    });
                                },
                                fail: function(e) {
                                    return console.log(e, "res"), !1;
                                },
                                complete: function(e) {
                                    return console.log(e, "complete"), !1;
                                }
                            });
                        }, 1500)
                    }
                });
            }, p = l;
            t.default = p;
        }).call(this, n("543d")["default"]);
    },
    "7bbb": function(e, t) {
        var n, r = [ [ "div", "line-height:2em;" ], [ "h1", "font-size:3em; line-height:1.5em;" ], [ "h2", "font-size:2em; line-height:1.8em;" ], [ "h3", "font-size:1.6em; line-height:2em;" ], [ "h4", "font-size:1.2em; line-height:2em;" ], [ "h5", "font-size:1em; line-height:2em;" ], [ "h6", "font-size:0.9em; line-height:2em;" ], [ "p", "font-size:1em; line-height:2em;" ], [ "b", "font-size:1em; line-height:2em;" ], [ "strong", "font-size:1em; line-height:2em;" ], [ "code", "font-size:1em; line-height:1.2em; background:#F6F7F8; padding:8px 2%; width:96%;" ], [ "img", "width:100%; margin:8px 0;" ], [ "blockquote", "font-size:1em; border-left:3px solid #D1D1D1; line-height:2em; border-radius:5px; background:#F6F7F8; padding:8px 2%;" ], [ "ul", "padding:5px 0; list-style:none; padding:0; margin:0;" ], [ "li", "line-height:1.5em; padding:5px 0; list-style:none; padding:0; margin:0; margin-top:10px;" ], [ "table", "width:100%; border-left:1px solid #F2F3F4; border-top:1px solid #F2F3F4;" ], [ "th", "border-right:1px solid #F2F3F4; border-bottom:1px solid #F2F3F4;" ], [ "td", "border-right:1px solid #F2F3F4; border-bottom:1px solid #F2F3F4; padding-left:5px;" ] ];
        e.exports = {
            format: function(e) {
                e = e.replace(/<pre[\s\S]*pre>?/gi, function(e) {
                    return e = e.replace(/[\n]/gi, "<br />"), e = e.replace(/    /gi, '<span style="padding-left:2em;"></span>'), 
                    e.replace(/[\t]/gi, '<span style="padding-left:2em;"></span>');
                }), e = e.replace(/<pre/gi, '<p style="font-size:1em; margin:12px 0; line-height:1.2em; background:#F6F7F8; border-radius:5px; padding:8px 4%; width:92%;"'), 
                e = e.replace(/<\/pre/gi, "</p");
                for (var t = function(t) {
                    n = new RegExp("<" + r[t][0] + ">|<" + r[t][0] + " (.*?)>", "gi"), e = e.replace(n, function(e) {
                        if (-1 != e.indexOf("style=")) {
                            var n = new RegExp("<" + r[t][0] + '(.*?)style="(.*?)"(.*?)(/?)>', "gi");
                            return e.replace(n, "<" + r[t][0] + '$1style="$2 ' + r[t][1] + '"$3$4>');
                        }
                        n = new RegExp("<" + r[t][0] + "(.*?)(/?)>", "gi");
                        return e.replace(n, "<" + r[t][0] + '$1 style="' + r[t][1] + '$2">');
                    });
                }, o = 0; o < r.length; o++) t(o);
                return e;
            }
        };
    },
    "88b3": function(e, t) {
        function n(e) {
            return e < 10 && e >= 0 ? "0".concat(e) : e;
        }
        function r(e) {
            e instanceof Date || (e = new Date(Number(e)));
            var t = e.getFullYear(), r = n(e.getMonth() + 1), o = n(e.getDate()), i = (n(e.getDay()), 
            n(e.getHours())), a = n(e.getMinutes()), s = n(e.getSeconds());
            n(e.getMilliseconds());
            return "".concat(t, "-").concat(r, "-").concat(o, " ").concat(i, ":").concat(a, ":").concat(s);
        }
        function o(e) {
            if (!e || !e.toString().trim()) return "";
            if (!(e instanceof Date) && !/^\d+$/.test(e.toString().trim())) return e;
            e instanceof Date || (e = new Date(Number(e)));
            var t = e.getFullYear(), r = n(e.getMonth() + 1), o = n(e.getDate());
            return "".concat(t, "-").concat(r, "-").concat(o);
        }
        function i(e) {
            e instanceof Date || (e = new Date(Number(e)));
            var t = n(e.getMonth() + 1);
            return "".concat(t);
        }
        function a(e) {
            if (!e || void 0 === e || null === e) return "";
            var t = RegExp("\\\\n", "g");
            return e.replace(t, "\n");
        }
        function s(e) {
            if (!e || void 0 === e || null === e) return "";
            var t = RegExp("\\\\n", "g");
            return e.replace(t, "");
        }
        function c(e) {
            var t = {
                1: "高层",
                2: "中层",
                3: "低层"
            };
            return t[e] ? t[e] : "未知";
        }
        function u(e) {
            var t = {
                1: "预售",
                2: "公示",
                3: "登记",
                4: "摇号",
                5: "补交资料",
                6: "摇号结束",
                7: "在售",
                8: "售罄",
                9: "等待摇号",
                10: "待首开",
                11: "即将加推"
            };
            return t[e] ? t[e] : "未知";
        }
        function l(e, t) {
            null != t && void 0 != t || (t = 1500);
            var n = null;
            return function() {
                var r = +new Date();
                (r - n > t || !n) && (e.apply(this, arguments), n = r);
            };
        }
        function p(e) {
            var t, n, r, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", i = 0, a = e.length, s = "";
            while (i < a) {
                if (t = 255 & e.charCodeAt(i++), i == a) {
                    s += o.charAt(t >> 2), s += o.charAt((3 & t) << 4), s += "==";
                    break;
                }
                if (n = e.charCodeAt(i++), i == a) {
                    s += o.charAt(t >> 2), s += o.charAt((3 & t) << 4 | (240 & n) >> 4), s += o.charAt((15 & n) << 2), 
                    s += "=";
                    break;
                }
                r = e.charCodeAt(i++), s += o.charAt(t >> 2), s += o.charAt((3 & t) << 4 | (240 & n) >> 4), 
                s += o.charAt((15 & n) << 2 | (192 & r) >> 6), s += o.charAt(63 & r);
            }
            return s;
        }
        e.exports = {
            throttle: l,
            formatText: a,
            formatChangeText: s,
            appendZero: n,
            formatTime: r,
            formatDate: o,
            getMonth: i,
            getFloorLevelName: c,
            getSaleStatus: u,
            base64Encode: p
        };
    },
    "96cf": function(e, t) {
        !function(t) {
            "use strict";
            var n, r = Object.prototype, o = r.hasOwnProperty, i = "function" === typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", s = i.asyncIterator || "@@asyncIterator", c = i.toStringTag || "@@toStringTag", u = "object" === typeof e, l = t.regeneratorRuntime;
            if (l) u && (e.exports = l); else {
                l = t.regeneratorRuntime = u ? e.exports : {}, l.wrap = S;
                var p = "suspendedStart", h = "suspendedYield", f = "executing", d = "completed", g = {}, m = {};
                m[a] = function() {
                    return this;
                };
                var v = Object.getPrototypeOf, y = v && v(v(O([])));
                y && y !== r && o.call(y, a) && (m = y);
                var _ = T.prototype = M.prototype = Object.create(m);
                C.prototype = _.constructor = T, T.constructor = C, T[c] = C.displayName = "GeneratorFunction", 
                l.isGeneratorFunction = function(e) {
                    var t = "function" === typeof e && e.constructor;
                    return !!t && (t === C || "GeneratorFunction" === (t.displayName || t.name));
                }, l.mark = function(e) {
                    return Object.setPrototypeOf ? Object.setPrototypeOf(e, T) : (e.__proto__ = T, c in e || (e[c] = "GeneratorFunction")), 
                    e.prototype = Object.create(_), e;
                }, l.awrap = function(e) {
                    return {
                        __await: e
                    };
                }, E(A.prototype), A.prototype[s] = function() {
                    return this;
                }, l.AsyncIterator = A, l.async = function(e, t, n, r) {
                    var o = new A(S(e, t, n, r));
                    return l.isGeneratorFunction(t) ? o : o.next().then(function(e) {
                        return e.done ? e.value : o.next();
                    });
                }, E(_), _[c] = "Generator", _[a] = function() {
                    return this;
                }, _.toString = function() {
                    return "[object Generator]";
                }, l.keys = function(e) {
                    var t = [];
                    for (var n in e) t.push(n);
                    return t.reverse(), function n() {
                        while (t.length) {
                            var r = t.pop();
                            if (r in e) return n.value = r, n.done = !1, n;
                        }
                        return n.done = !0, n;
                    };
                }, l.values = O, k.prototype = {
                    constructor: k,
                    reset: function(e) {
                        if (this.prev = 0, this.next = 0, this.sent = this._sent = n, this.done = !1, this.delegate = null, 
                        this.method = "next", this.arg = n, this.tryEntries.forEach(D), !e) for (var t in this) "t" === t.charAt(0) && o.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = n);
                    },
                    stop: function() {
                        this.done = !0;
                        var e = this.tryEntries[0], t = e.completion;
                        if ("throw" === t.type) throw t.arg;
                        return this.rval;
                    },
                    dispatchException: function(e) {
                        if (this.done) throw e;
                        var t = this;
                        function r(r, o) {
                            return s.type = "throw", s.arg = e, t.next = r, o && (t.method = "next", t.arg = n), 
                            !!o;
                        }
                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                            var a = this.tryEntries[i], s = a.completion;
                            if ("root" === a.tryLoc) return r("end");
                            if (a.tryLoc <= this.prev) {
                                var c = o.call(a, "catchLoc"), u = o.call(a, "finallyLoc");
                                if (c && u) {
                                    if (this.prev < a.catchLoc) return r(a.catchLoc, !0);
                                    if (this.prev < a.finallyLoc) return r(a.finallyLoc);
                                } else if (c) {
                                    if (this.prev < a.catchLoc) return r(a.catchLoc, !0);
                                } else {
                                    if (!u) throw new Error("try statement without catch or finally");
                                    if (this.prev < a.finallyLoc) return r(a.finallyLoc);
                                }
                            }
                        }
                    },
                    abrupt: function(e, t) {
                        for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                            var r = this.tryEntries[n];
                            if (r.tryLoc <= this.prev && o.call(r, "finallyLoc") && this.prev < r.finallyLoc) {
                                var i = r;
                                break;
                            }
                        }
                        i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                        var a = i ? i.completion : {};
                        return a.type = e, a.arg = t, i ? (this.method = "next", this.next = i.finallyLoc, 
                        g) : this.complete(a);
                    },
                    complete: function(e, t) {
                        if ("throw" === e.type) throw e.arg;
                        return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, 
                        this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), 
                        g;
                    },
                    finish: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var n = this.tryEntries[t];
                            if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), D(n), g;
                        }
                    },
                    catch: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var n = this.tryEntries[t];
                            if (n.tryLoc === e) {
                                var r = n.completion;
                                if ("throw" === r.type) {
                                    var o = r.arg;
                                    D(n);
                                }
                                return o;
                            }
                        }
                        throw new Error("illegal catch attempt");
                    },
                    delegateYield: function(e, t, r) {
                        return this.delegate = {
                            iterator: O(e),
                            resultName: t,
                            nextLoc: r
                        }, "next" === this.method && (this.arg = n), g;
                    }
                };
            }
            function S(e, t, n, r) {
                var o = t && t.prototype instanceof M ? t : M, i = Object.create(o.prototype), a = new k(r || []);
                return i._invoke = b(e, n, a), i;
            }
            function I(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    };
                } catch (r) {
                    return {
                        type: "throw",
                        arg: r
                    };
                }
            }
            function M() {}
            function C() {}
            function T() {}
            function E(e) {
                [ "next", "throw", "return" ].forEach(function(t) {
                    e[t] = function(e) {
                        return this._invoke(t, e);
                    };
                });
            }
            function A(e) {
                function t(n, r, i, a) {
                    var s = I(e[n], e, r);
                    if ("throw" !== s.type) {
                        var c = s.arg, u = c.value;
                        return u && "object" === typeof u && o.call(u, "__await") ? Promise.resolve(u.__await).then(function(e) {
                            t("next", e, i, a);
                        }, function(e) {
                            t("throw", e, i, a);
                        }) : Promise.resolve(u).then(function(e) {
                            c.value = e, i(c);
                        }, function(e) {
                            return t("throw", e, i, a);
                        });
                    }
                    a(s.arg);
                }
                var n;
                function r(e, r) {
                    function o() {
                        return new Promise(function(n, o) {
                            t(e, r, n, o);
                        });
                    }
                    return n = n ? n.then(o, o) : o();
                }
                this._invoke = r;
            }
            function b(e, t, n) {
                var r = p;
                return function(o, i) {
                    if (r === f) throw new Error("Generator is already running");
                    if (r === d) {
                        if ("throw" === o) throw i;
                        return L();
                    }
                    n.method = o, n.arg = i;
                    while (1) {
                        var a = n.delegate;
                        if (a) {
                            var s = x(a, n);
                            if (s) {
                                if (s === g) continue;
                                return s;
                            }
                        }
                        if ("next" === n.method) n.sent = n._sent = n.arg; else if ("throw" === n.method) {
                            if (r === p) throw r = d, n.arg;
                            n.dispatchException(n.arg);
                        } else "return" === n.method && n.abrupt("return", n.arg);
                        r = f;
                        var c = I(e, t, n);
                        if ("normal" === c.type) {
                            if (r = n.done ? d : h, c.arg === g) continue;
                            return {
                                value: c.arg,
                                done: n.done
                            };
                        }
                        "throw" === c.type && (r = d, n.method = "throw", n.arg = c.arg);
                    }
                };
            }
            function x(e, t) {
                var r = e.iterator[t.method];
                if (r === n) {
                    if (t.delegate = null, "throw" === t.method) {
                        if (e.iterator.return && (t.method = "return", t.arg = n, x(e, t), "throw" === t.method)) return g;
                        t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method");
                    }
                    return g;
                }
                var o = I(r, e.iterator, t.arg);
                if ("throw" === o.type) return t.method = "throw", t.arg = o.arg, t.delegate = null, 
                g;
                var i = o.arg;
                return i ? i.done ? (t[e.resultName] = i.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", 
                t.arg = n), t.delegate = null, g) : i : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), 
                t.delegate = null, g);
            }
            function w(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), 
                this.tryEntries.push(t);
            }
            function D(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t;
            }
            function k(e) {
                this.tryEntries = [ {
                    tryLoc: "root"
                } ], e.forEach(w, this), this.reset(!0);
            }
            function O(e) {
                if (e) {
                    var t = e[a];
                    if (t) return t.call(e);
                    if ("function" === typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1, i = function t() {
                            while (++r < e.length) if (o.call(e, r)) return t.value = e[r], t.done = !1, t;
                            return t.value = n, t.done = !0, t;
                        };
                        return i.next = i;
                    }
                }
                return {
                    next: L
                };
            }
            function L() {
                return {
                    value: n,
                    done: !0
                };
            }
        }(function() {
            return this || "object" === typeof self && self;
        }() || Function("return this")());
    },
    "99ef": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0;
        var r = [ {
            user: "admin",
            userId: "admin",
            userSig: "eJwtzMEKgkAUheF3mW1hd6aZNKGF2CKhRZO2CNoMzDUuqQxmVkbvnqnL8x34Pyzbp16LNQuZ8IDNh00Wq4ZyGtjYkqrpuNubcY4sC7kEkL5QvhoffDmqsXellACAURsq-7biIPyllHyq0LXv6t07eSRZGgEe4wAviy4rDuYJXaC43M6waLo4XevTOWr1hn1-Su0xNw__",
            img: "https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=1735490596,2760195857&fm=26&gp=0.jpg"
        }, {
            user: "yuwen",
            userId: "yuwen",
            img: "https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2262632647,543198910&fm=26&gp=0.jpg",
            userSig: "eJyrVgrxCdYrSy1SslIy0jNQ0gHzM1NS80oy0zLBwpWl5al5UInilOzEgoLMFCUrQxMDAxNzI1NzU4hMakVBZlEqUNzU1NTIwMAAIlqSmQsSMzM0MDI3BkKoKZnpQHM9Q4wd09wcw-PSq1IjLIrD-QuMfbxcDWP0TVMiIh29qgJdvFJNgjOKvcIjkm2VagFjIjF2"
        }, {
            user: "yuge",
            userId: "yuge",
            img: "https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2262632647,543198910&fm=26&gp=0.jpg",
            userSig: "eJyrVgrxCdYrSy1SslIy0jNQ0gHzM1NS80oy0zLBwpWl6alQ8eKU7MSCgswUJStDEwMDE3MjU3NTiExqRUFmUSpQ3NTU1MjAwAAiWpKZCxIzMzSwMDcyNjCBmpKZDjTWLz1GvyojPCnb1yWpqLDY3M*xxNm4JCDPOzsiJ8MnNcDPrNTDJSDPK9XS3dNWqRYANeMxxQ__"
        } ], o = r;
        t.default = o;
    },
    a13e: function(e, t, n) {
        (function(t) {
            !function(t, n) {
                e.exports = n();
            }(0, function() {
                var e = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof t ? t : "undefined" != typeof self ? self : {};
                function n(e, t) {
                    return e(t = {
                        exports: {}
                    }, t.exports), t.exports;
                }
                var r = function(e) {
                    return e && e.Math == Math && e;
                }, o = r("object" == typeof globalThis && globalThis) || r("object" == typeof window && window) || r("object" == typeof self && self) || r("object" == typeof e && e) || Function("return this")(), i = function(e) {
                    try {
                        return !!e();
                    } catch (n) {
                        return !0;
                    }
                }, a = !i(function() {
                    return 7 != Object.defineProperty({}, 1, {
                        get: function() {
                            return 7;
                        }
                    })[1];
                }), s = {}.propertyIsEnumerable, c = Object.getOwnPropertyDescriptor, u = {
                    f: c && !s.call({
                        1: 2
                    }, 1) ? function(e) {
                        var t = c(this, e);
                        return !!t && t.enumerable;
                    } : s
                }, l = function(e, t) {
                    return {
                        enumerable: !(1 & e),
                        configurable: !(2 & e),
                        writable: !(4 & e),
                        value: t
                    };
                }, p = {}.toString, h = function(e) {
                    return p.call(e).slice(8, -1);
                }, f = "".split, d = i(function() {
                    return !Object("z").propertyIsEnumerable(0);
                }) ? function(e) {
                    return "String" == h(e) ? f.call(e, "") : Object(e);
                } : Object, g = function(e) {
                    if (null == e) throw TypeError("Can't call method on " + e);
                    return e;
                }, m = function(e) {
                    return d(g(e));
                }, v = function(e) {
                    return "object" == typeof e ? null !== e : "function" == typeof e;
                }, y = function(e, t) {
                    if (!v(e)) return e;
                    var n, r;
                    if (t && "function" == typeof (n = e.toString) && !v(r = n.call(e))) return r;
                    if ("function" == typeof (n = e.valueOf) && !v(r = n.call(e))) return r;
                    if (!t && "function" == typeof (n = e.toString) && !v(r = n.call(e))) return r;
                    throw TypeError("Can't convert object to primitive value");
                }, _ = {}.hasOwnProperty, S = function(e, t) {
                    return _.call(e, t);
                }, I = o.document, M = v(I) && v(I.createElement), C = function(e) {
                    return M ? I.createElement(e) : {};
                }, T = !a && !i(function() {
                    return 7 != Object.defineProperty(C("div"), "a", {
                        get: function() {
                            return 7;
                        }
                    }).a;
                }), E = Object.getOwnPropertyDescriptor, A = {
                    f: a ? E : function(e, t) {
                        if (e = m(e), t = y(t, !0), T) try {
                            return E(e, t);
                        } catch (r) {}
                        if (S(e, t)) return l(!u.f.call(e, t), e[t]);
                    }
                }, b = function(e) {
                    if (!v(e)) throw TypeError(String(e) + " is not an object");
                    return e;
                }, x = Object.defineProperty, w = {
                    f: a ? x : function(e, t, n) {
                        if (b(e), t = y(t, !0), b(n), T) try {
                            return x(e, t, n);
                        } catch (o) {}
                        if ("get" in n || "set" in n) throw TypeError("Accessors not supported");
                        return "value" in n && (e[t] = n.value), e;
                    }
                }, D = a ? function(e, t, n) {
                    return w.f(e, t, l(1, n));
                } : function(e, t, n) {
                    return e[t] = n, e;
                }, k = function(e, t) {
                    try {
                        D(o, e, t);
                    } catch (r) {
                        o[e] = t;
                    }
                    return t;
                }, O = o["__core-js_shared__"] || k("__core-js_shared__", {}), L = Function.toString;
                "function" != typeof O.inspectSource && (O.inspectSource = function(e) {
                    return L.call(e);
                });
                var R, P, N, G = O.inspectSource, F = o.WeakMap, U = "function" == typeof F && /native code/.test(G(F)), q = n(function(e) {
                    (e.exports = function(e, t) {
                        return O[e] || (O[e] = void 0 !== t ? t : {});
                    })("versions", []).push({
                        version: "3.6.5",
                        mode: "global",
                        copyright: "© 2020 Denis Pushkarev (zloirock.ru)"
                    });
                }), j = 0, $ = Math.random(), V = function(e) {
                    return "Symbol(" + String(void 0 === e ? "" : e) + ")_" + (++j + $).toString(36);
                }, B = q("keys"), H = function(e) {
                    return B[e] || (B[e] = V(e));
                }, K = {}, z = o.WeakMap;
                if (U) {
                    var W = new z(), Y = W.get, J = W.has, X = W.set;
                    R = function(e, t) {
                        return X.call(W, e, t), t;
                    }, P = function(e) {
                        return Y.call(W, e) || {};
                    }, N = function(e) {
                        return J.call(W, e);
                    };
                } else {
                    var Q = H("state");
                    K[Q] = !0, R = function(e, t) {
                        return D(e, Q, t), t;
                    }, P = function(e) {
                        return S(e, Q) ? e[Q] : {};
                    }, N = function(e) {
                        return S(e, Q);
                    };
                }
                var Z, ee, te = {
                    set: R,
                    get: P,
                    has: N,
                    enforce: function(e) {
                        return N(e) ? P(e) : R(e, {});
                    },
                    getterFor: function(e) {
                        return function(t) {
                            var n;
                            if (!v(t) || (n = P(t)).type !== e) throw TypeError("Incompatible receiver, " + e + " required");
                            return n;
                        };
                    }
                }, ne = n(function(e) {
                    var t = te.get, n = te.enforce, r = String(String).split("String");
                    (e.exports = function(e, t, i, a) {
                        var s = !!a && !!a.unsafe, c = !!a && !!a.enumerable, u = !!a && !!a.noTargetGet;
                        "function" == typeof i && ("string" != typeof t || S(i, "name") || D(i, "name", t), 
                        n(i).source = r.join("string" == typeof t ? t : "")), e !== o ? (s ? !u && e[t] && (c = !0) : delete e[t], 
                        c ? e[t] = i : D(e, t, i)) : c ? e[t] = i : k(t, i);
                    })(Function.prototype, "toString", function() {
                        return "function" == typeof this && t(this).source || G(this);
                    });
                }), re = o, oe = function(e) {
                    return "function" == typeof e ? e : void 0;
                }, ie = function(e, t) {
                    return arguments.length < 2 ? oe(re[e]) || oe(o[e]) : re[e] && re[e][t] || o[e] && o[e][t];
                }, ae = Math.ceil, se = Math.floor, ce = function(e) {
                    return isNaN(e = +e) ? 0 : (e > 0 ? se : ae)(e);
                }, ue = Math.min, le = function(e) {
                    return e > 0 ? ue(ce(e), 9007199254740991) : 0;
                }, pe = Math.max, he = Math.min, fe = function(e, t) {
                    var n = ce(e);
                    return n < 0 ? pe(n + t, 0) : he(n, t);
                }, de = function(e) {
                    return function(t, n, r) {
                        var o, i = m(t), a = le(i.length), s = fe(r, a);
                        if (e && n != n) {
                            for (;a > s; ) if ((o = i[s++]) != o) return !0;
                        } else for (;a > s; s++) if ((e || s in i) && i[s] === n) return e || s || 0;
                        return !e && -1;
                    };
                }, ge = {
                    includes: de(!0),
                    indexOf: de(!1)
                }, me = ge.indexOf, ve = function(e, t) {
                    var n, r = m(e), o = 0, i = [];
                    for (n in r) !S(K, n) && S(r, n) && i.push(n);
                    for (;t.length > o; ) S(r, n = t[o++]) && (~me(i, n) || i.push(n));
                    return i;
                }, ye = [ "constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf" ], _e = ye.concat("length", "prototype"), Se = {
                    f: Object.getOwnPropertyNames || function(e) {
                        return ve(e, _e);
                    }
                }, Ie = {
                    f: Object.getOwnPropertySymbols
                }, Me = ie("Reflect", "ownKeys") || function(e) {
                    var t = Se.f(b(e)), n = Ie.f;
                    return n ? t.concat(n(e)) : t;
                }, Ce = function(e, t) {
                    for (var n = Me(t), r = w.f, o = A.f, i = 0; i < n.length; i++) {
                        var a = n[i];
                        S(e, a) || r(e, a, o(t, a));
                    }
                }, Te = /#|\.prototype\./, Ee = function(e, t) {
                    var n = be[Ae(e)];
                    return n == we || n != xe && ("function" == typeof t ? i(t) : !!t);
                }, Ae = Ee.normalize = function(e) {
                    return String(e).replace(Te, ".").toLowerCase();
                }, be = Ee.data = {}, xe = Ee.NATIVE = "N", we = Ee.POLYFILL = "P", De = Ee, ke = A.f, Oe = function(e, t) {
                    var n, r, i, a, s, c = e.target, u = e.global, l = e.stat;
                    if (n = u ? o : l ? o[c] || k(c, {}) : (o[c] || {}).prototype) for (r in t) {
                        if (a = t[r], i = e.noTargetGet ? (s = ke(n, r)) && s.value : n[r], !De(u ? r : c + (l ? "." : "#") + r, e.forced) && void 0 !== i) {
                            if (typeof a == typeof i) continue;
                            Ce(a, i);
                        }
                        (e.sham || i && i.sham) && D(a, "sham", !0), ne(n, r, a, e);
                    }
                }, Le = Array.isArray || function(e) {
                    return "Array" == h(e);
                }, Re = function(e) {
                    return Object(g(e));
                }, Pe = function(e, t, n) {
                    var r = y(t);
                    r in e ? w.f(e, r, l(0, n)) : e[r] = n;
                }, Ne = !!Object.getOwnPropertySymbols && !i(function() {
                    return !String(Symbol());
                }), Ge = Ne && !Symbol.sham && "symbol" == typeof Symbol.iterator, Fe = q("wks"), Ue = o.Symbol, qe = Ge ? Ue : Ue && Ue.withoutSetter || V, je = function(e) {
                    return S(Fe, e) || (Ne && S(Ue, e) ? Fe[e] = Ue[e] : Fe[e] = qe("Symbol." + e)), 
                    Fe[e];
                }, $e = je("species"), Ve = function(e, t) {
                    var n;
                    return Le(e) && ("function" != typeof (n = e.constructor) || n !== Array && !Le(n.prototype) ? v(n) && null === (n = n[$e]) && (n = void 0) : n = void 0), 
                    new (void 0 === n ? Array : n)(0 === t ? 0 : t);
                }, Be = ie("navigator", "userAgent") || "", He = o.process, Ke = He && He.versions, ze = Ke && Ke.v8;
                ze ? ee = (Z = ze.split("."))[0] + Z[1] : Be && (!(Z = Be.match(/Edge\/(\d+)/)) || Z[1] >= 74) && (Z = Be.match(/Chrome\/(\d+)/)) && (ee = Z[1]);
                var We = ee && +ee, Ye = je("species"), Je = function(e) {
                    return We >= 51 || !i(function() {
                        var t = [];
                        return (t.constructor = {})[Ye] = function() {
                            return {
                                foo: 1
                            };
                        }, 1 !== t[e](Boolean).foo;
                    });
                }, Xe = je("isConcatSpreadable"), Qe = We >= 51 || !i(function() {
                    var e = [];
                    return e[Xe] = !1, e.concat()[0] !== e;
                }), Ze = Je("concat"), et = function(e) {
                    if (!v(e)) return !1;
                    var t = e[Xe];
                    return void 0 !== t ? !!t : Le(e);
                };
                Oe({
                    target: "Array",
                    proto: !0,
                    forced: !Qe || !Ze
                }, {
                    concat: function(e) {
                        var t, n, r, o, i, a = Re(this), s = Ve(a, 0), c = 0;
                        for (t = -1, r = arguments.length; t < r; t++) if (et(i = -1 === t ? a : arguments[t])) {
                            if (c + (o = le(i.length)) > 9007199254740991) throw TypeError("Maximum allowed index exceeded");
                            for (n = 0; n < o; n++, c++) n in i && Pe(s, c, i[n]);
                        } else {
                            if (c >= 9007199254740991) throw TypeError("Maximum allowed index exceeded");
                            Pe(s, c++, i);
                        }
                        return s.length = c, s;
                    }
                });
                var nt = function(e) {
                    if ("function" != typeof e) throw TypeError(String(e) + " is not a function");
                    return e;
                }, rt = function(e, t, n) {
                    if (nt(e), void 0 === t) return e;
                    switch (n) {
                      case 0:
                        return function() {
                            return e.call(t);
                        };

                      case 1:
                        return function(n) {
                            return e.call(t, n);
                        };

                      case 2:
                        return function(n, r) {
                            return e.call(t, n, r);
                        };

                      case 3:
                        return function(n, r, o) {
                            return e.call(t, n, r, o);
                        };
                    }
                    return function() {
                        return e.apply(t, arguments);
                    };
                }, ot = [].push, it = function(e) {
                    var t = 1 == e, n = 2 == e, r = 3 == e, o = 4 == e, i = 6 == e, a = 5 == e || i;
                    return function(s, c, u, l) {
                        for (var p, h, f = Re(s), g = d(f), m = rt(c, u, 3), v = le(g.length), y = 0, _ = l || Ve, S = t ? _(s, v) : n ? _(s, 0) : void 0; v > y; y++) if ((a || y in g) && (h = m(p = g[y], y, f), 
                        e)) if (t) S[y] = h; else if (h) switch (e) {
                          case 3:
                            return !0;

                          case 5:
                            return p;

                          case 6:
                            return y;

                          case 2:
                            ot.call(S, p);
                        } else if (o) return !1;
                        return i ? -1 : r || o ? o : S;
                    };
                }, at = {
                    forEach: it(0),
                    map: it(1),
                    filter: it(2),
                    some: it(3),
                    every: it(4),
                    find: it(5),
                    findIndex: it(6)
                }, st = function(e, t) {
                    var n = [][e];
                    return !!n && i(function() {
                        n.call(null, t || function() {
                            throw 1;
                        }, 1);
                    });
                }, ct = Object.defineProperty, ut = {}, lt = function(e) {
                    throw e;
                }, pt = function(e, t) {
                    if (S(ut, e)) return ut[e];
                    t || (t = {});
                    var n = [][e], r = !!S(t, "ACCESSORS") && t.ACCESSORS, o = S(t, 0) ? t[0] : lt, s = S(t, 1) ? t[1] : void 0;
                    return ut[e] = !!n && !i(function() {
                        if (r && !a) return !0;
                        var e = {
                            length: -1
                        };
                        r ? ct(e, 1, {
                            enumerable: !0,
                            get: lt
                        }) : e[1] = 1, n.call(e, o, s);
                    });
                }, ht = at.forEach, ft = st("forEach"), dt = pt("forEach"), gt = ft && dt ? [].forEach : function(e) {
                    return ht(this, e, arguments.length > 1 ? arguments[1] : void 0);
                };
                Oe({
                    target: "Array",
                    proto: !0,
                    forced: [].forEach != gt
                }, {
                    forEach: gt
                });
                var mt = function(e, t, n, r) {
                    try {
                        return r ? t(b(n)[0], n[1]) : t(n);
                    } catch (a) {
                        var o = e.return;
                        throw void 0 !== o && b(o.call(e)), a;
                    }
                }, vt = {}, yt = je("iterator"), _t = Array.prototype, St = function(e) {
                    return void 0 !== e && (vt.Array === e || _t[yt] === e);
                }, It = {};
                It[je("toStringTag")] = "z";
                var Mt = "[object z]" === String(It), Ct = je("toStringTag"), Tt = "Arguments" == h(function() {
                    return arguments;
                }()), Et = Mt ? h : function(e) {
                    var t, n, r;
                    return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof (n = function(e, t) {
                        try {
                            return e[t];
                        } catch (n) {}
                    }(t = Object(e), Ct)) ? n : Tt ? h(t) : "Object" == (r = h(t)) && "function" == typeof t.callee ? "Arguments" : r;
                }, At = je("iterator"), bt = function(e) {
                    if (null != e) return e[At] || e["@@iterator"] || vt[Et(e)];
                }, xt = function(e) {
                    var t, n, r, o, i, a, s = Re(e), c = "function" == typeof this ? this : Array, u = arguments.length, l = u > 1 ? arguments[1] : void 0, p = void 0 !== l, h = bt(s), f = 0;
                    if (p && (l = rt(l, u > 2 ? arguments[2] : void 0, 2)), null == h || c == Array && St(h)) for (n = new c(t = le(s.length)); t > f; f++) a = p ? l(s[f], f) : s[f], 
                    Pe(n, f, a); else for (i = (o = h.call(s)).next, n = new c(); !(r = i.call(o)).done; f++) a = p ? mt(o, l, [ r.value, f ], !0) : r.value, 
                    Pe(n, f, a);
                    return n.length = f, n;
                }, wt = je("iterator"), Dt = !1;
                try {
                    var kt = 0, Ot = {
                        next: function() {
                            return {
                                done: !!kt++
                            };
                        },
                        return: function() {
                            Dt = !0;
                        }
                    };
                    Ot[wt] = function() {
                        return this;
                    }, Array.from(Ot, function() {
                        throw 2;
                    });
                } catch (f_) {}
                var Lt = function(e, t) {
                    if (!t && !Dt) return !1;
                    var n = !1;
                    try {
                        var r = {};
                        r[wt] = function() {
                            return {
                                next: function() {
                                    return {
                                        done: n = !0
                                    };
                                }
                            };
                        }, e(r);
                    } catch (f_) {}
                    return n;
                }, Rt = !Lt(function(e) {
                    Array.from(e);
                });
                Oe({
                    target: "Array",
                    stat: !0,
                    forced: Rt
                }, {
                    from: xt
                });
                var Pt, Nt = Object.keys || function(e) {
                    return ve(e, ye);
                }, Gt = a ? Object.defineProperties : function(e, t) {
                    b(e);
                    for (var n, r = Nt(t), o = r.length, i = 0; o > i; ) w.f(e, n = r[i++], t[n]);
                    return e;
                }, Ft = ie("document", "documentElement"), Ut = H("IE_PROTO"), qt = function() {}, jt = function(e) {
                    return "<script>" + e + "<\/script>";
                }, $t = function() {
                    try {
                        Pt = document.domain && new ActiveXObject("htmlfile");
                    } catch (f_) {}
                    var e, t;
                    $t = Pt ? function(e) {
                        e.write(jt("")), e.close();
                        var t = e.parentWindow.Object;
                        return e = null, t;
                    }(Pt) : ((t = C("iframe")).style.display = "none", Ft.appendChild(t), t.src = String("javascript:"), 
                    (e = t.contentWindow.document).open(), e.write(jt("document.F=Object")), e.close(), 
                    e.F);
                    for (var n = ye.length; n--; ) delete $t.prototype[ye[n]];
                    return $t();
                };
                K[Ut] = !0;
                var Vt = Object.create || function(e, t) {
                    var n;
                    return null !== e ? (qt.prototype = b(e), n = new qt(), qt.prototype = null, n[Ut] = e) : n = $t(), 
                    void 0 === t ? n : Gt(n, t);
                };
                Oe({
                    target: "Object",
                    stat: !0,
                    sham: !a
                }, {
                    create: Vt
                });
                var Bt = i(function() {
                    Nt(1);
                });
                Oe({
                    target: "Object",
                    stat: !0,
                    forced: Bt
                }, {
                    keys: function(e) {
                        return Nt(Re(e));
                    }
                });
                var Ht, Kt, zt, Wt = function(e) {
                    return function(t, n) {
                        var r, o, i = String(g(t)), a = ce(n), s = i.length;
                        return a < 0 || a >= s ? e ? "" : void 0 : (r = i.charCodeAt(a)) < 55296 || r > 56319 || a + 1 === s || (o = i.charCodeAt(a + 1)) < 56320 || o > 57343 ? e ? i.charAt(a) : r : e ? i.slice(a, a + 2) : o - 56320 + (r - 55296 << 10) + 65536;
                    };
                }, Yt = {
                    codeAt: Wt(!1),
                    charAt: Wt(!0)
                }, Jt = !i(function() {
                    function e() {}
                    return e.prototype.constructor = null, Object.getPrototypeOf(new e()) !== e.prototype;
                }), Xt = H("IE_PROTO"), Qt = Object.prototype, Zt = Jt ? Object.getPrototypeOf : function(e) {
                    return e = Re(e), S(e, Xt) ? e[Xt] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? Qt : null;
                }, en = je("iterator"), tn = !1;
                [].keys && ("next" in (zt = [].keys()) ? (Kt = Zt(Zt(zt))) !== Object.prototype && (Ht = Kt) : tn = !0), 
                null == Ht && (Ht = {}), S(Ht, en) || D(Ht, en, function() {
                    return this;
                });
                var nn = {
                    IteratorPrototype: Ht,
                    BUGGY_SAFARI_ITERATORS: tn
                }, rn = w.f, on = je("toStringTag"), an = function(e, t, n) {
                    e && !S(e = n ? e : e.prototype, on) && rn(e, on, {
                        configurable: !0,
                        value: t
                    });
                }, sn = nn.IteratorPrototype, cn = function() {
                    return this;
                }, un = function(e, t, n) {
                    var r = t + " Iterator";
                    return e.prototype = Vt(sn, {
                        next: l(1, n)
                    }), an(e, r, !1), vt[r] = cn, e;
                }, ln = Object.setPrototypeOf || ("__proto__" in {} ? function() {
                    var e, t = !1, n = {};
                    try {
                        (e = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set).call(n, []), 
                        t = n instanceof Array;
                    } catch (f_) {}
                    return function(n, r) {
                        return b(n), function(e) {
                            if (!v(e) && null !== e) throw TypeError("Can't set " + String(e) + " as a prototype");
                        }(r), t ? e.call(n, r) : n.__proto__ = r, n;
                    };
                }() : void 0), pn = nn.IteratorPrototype, hn = nn.BUGGY_SAFARI_ITERATORS, fn = je("iterator"), dn = function() {
                    return this;
                }, gn = function(e, t, n, r, o, i, a) {
                    un(n, t, r);
                    var s, c, u, l = function(e) {
                        if (e === o && g) return g;
                        if (!hn && e in f) return f[e];
                        switch (e) {
                          case "keys":
                          case "values":
                          case "entries":
                            return function() {
                                return new n(this, e);
                            };
                        }
                        return function() {
                            return new n(this);
                        };
                    }, p = t + " Iterator", h = !1, f = e.prototype, d = f[fn] || f["@@iterator"] || o && f[o], g = !hn && d || l(o), m = "Array" == t && f.entries || d;
                    if (m && (s = Zt(m.call(new e())), pn !== Object.prototype && s.next && (Zt(s) !== pn && (ln ? ln(s, pn) : "function" != typeof s[fn] && D(s, fn, dn)), 
                    an(s, p, !0))), "values" == o && d && "values" !== d.name && (h = !0, g = function() {
                        return d.call(this);
                    }), f[fn] !== g && D(f, fn, g), vt[t] = g, o) if (c = {
                        values: l("values"),
                        keys: i ? g : l("keys"),
                        entries: l("entries")
                    }, a) for (u in c) (hn || h || !(u in f)) && ne(f, u, c[u]); else Oe({
                        target: t,
                        proto: !0,
                        forced: hn || h
                    }, c);
                    return c;
                }, mn = Yt.charAt, vn = te.set, yn = te.getterFor("String Iterator");
                gn(String, "String", function(e) {
                    vn(this, {
                        type: "String Iterator",
                        string: String(e),
                        index: 0
                    });
                }, function() {
                    var e, t = yn(this), n = t.string, r = t.index;
                    return r >= n.length ? {
                        value: void 0,
                        done: !0
                    } : (e = mn(n, r), t.index += e.length, {
                        value: e,
                        done: !1
                    });
                });
                var _n = {
                    CSSRuleList: 0,
                    CSSStyleDeclaration: 0,
                    CSSValueList: 0,
                    ClientRectList: 0,
                    DOMRectList: 0,
                    DOMStringList: 0,
                    DOMTokenList: 1,
                    DataTransferItemList: 0,
                    FileList: 0,
                    HTMLAllCollection: 0,
                    HTMLCollection: 0,
                    HTMLFormElement: 0,
                    HTMLSelectElement: 0,
                    MediaList: 0,
                    MimeTypeArray: 0,
                    NamedNodeMap: 0,
                    NodeList: 1,
                    PaintRequestList: 0,
                    Plugin: 0,
                    PluginArray: 0,
                    SVGLengthList: 0,
                    SVGNumberList: 0,
                    SVGPathSegList: 0,
                    SVGPointList: 0,
                    SVGStringList: 0,
                    SVGTransformList: 0,
                    SourceBufferList: 0,
                    StyleSheetList: 0,
                    TextTrackCueList: 0,
                    TextTrackList: 0,
                    TouchList: 0
                };
                for (var Sn in _n) {
                    var In = o[Sn], Mn = In && In.prototype;
                    if (Mn && Mn.forEach !== gt) try {
                        D(Mn, "forEach", gt);
                    } catch (f_) {
                        Mn.forEach = gt;
                    }
                }
                var Cn = {
                    SDK_READY: "sdkStateReady",
                    SDK_NOT_READY: "sdkStateNotReady",
                    SDK_DESTROY: "sdkDestroy",
                    MESSAGE_RECEIVED: "onMessageReceived",
                    MESSAGE_REVOKED: "onMessageRevoked",
                    MESSAGE_READ_BY_PEER: "onMessageReadByPeer",
                    CONVERSATION_LIST_UPDATED: "onConversationListUpdated",
                    GROUP_LIST_UPDATED: "onGroupListUpdated",
                    GROUP_SYSTEM_NOTICE_RECEIVED: "receiveGroupSystemNotice",
                    PROFILE_UPDATED: "onProfileUpdated",
                    BLACKLIST_UPDATED: "blacklistUpdated",
                    KICKED_OUT: "kickedOut",
                    ERROR: "error",
                    NET_STATE_CHANGE: "netStateChange",
                    SDK_RELOAD: "sdkReload"
                }, Tn = {
                    MSG_TEXT: "TIMTextElem",
                    MSG_IMAGE: "TIMImageElem",
                    MSG_SOUND: "TIMSoundElem",
                    MSG_AUDIO: "TIMSoundElem",
                    MSG_FILE: "TIMFileElem",
                    MSG_FACE: "TIMFaceElem",
                    MSG_VIDEO: "TIMVideoFileElem",
                    MSG_GEO: "TIMLocationElem",
                    MSG_GRP_TIP: "TIMGroupTipElem",
                    MSG_GRP_SYS_NOTICE: "TIMGroupSystemNoticeElem",
                    MSG_CUSTOM: "TIMCustomElem",
                    MSG_PRIORITY_HIGH: "High",
                    MSG_PRIORITY_NORMAL: "Normal",
                    MSG_PRIORITY_LOW: "Low",
                    MSG_PRIORITY_LOWEST: "Lowest",
                    CONV_C2C: "C2C",
                    CONV_GROUP: "GROUP",
                    CONV_SYSTEM: "@TIM#SYSTEM",
                    CONV_AT_ME: 1,
                    CONV_AT_ALL: 2,
                    CONV_AT_ALL_AT_ME: 3,
                    GRP_PRIVATE: "Private",
                    GRP_WORK: "Private",
                    GRP_PUBLIC: "Public",
                    GRP_CHATROOM: "ChatRoom",
                    GRP_MEETING: "ChatRoom",
                    GRP_AVCHATROOM: "AVChatRoom",
                    GRP_MBR_ROLE_OWNER: "Owner",
                    GRP_MBR_ROLE_ADMIN: "Admin",
                    GRP_MBR_ROLE_MEMBER: "Member",
                    GRP_TIP_MBR_JOIN: 1,
                    GRP_TIP_MBR_QUIT: 2,
                    GRP_TIP_MBR_KICKED_OUT: 3,
                    GRP_TIP_MBR_SET_ADMIN: 4,
                    GRP_TIP_MBR_CANCELED_ADMIN: 5,
                    GRP_TIP_GRP_PROFILE_UPDATED: 6,
                    GRP_TIP_MBR_PROFILE_UPDATED: 7,
                    MSG_REMIND_ACPT_AND_NOTE: "AcceptAndNotify",
                    MSG_REMIND_ACPT_NOT_NOTE: "AcceptNotNotify",
                    MSG_REMIND_DISCARD: "Discard",
                    GENDER_UNKNOWN: "Gender_Type_Unknown",
                    GENDER_FEMALE: "Gender_Type_Female",
                    GENDER_MALE: "Gender_Type_Male",
                    KICKED_OUT_MULT_ACCOUNT: "multipleAccount",
                    KICKED_OUT_MULT_DEVICE: "multipleDevice",
                    KICKED_OUT_USERSIG_EXPIRED: "userSigExpired",
                    ALLOW_TYPE_ALLOW_ANY: "AllowType_Type_AllowAny",
                    ALLOW_TYPE_NEED_CONFIRM: "AllowType_Type_NeedConfirm",
                    ALLOW_TYPE_DENY_ANY: "AllowType_Type_DenyAny",
                    FORBID_TYPE_NONE: "AdminForbid_Type_None",
                    FORBID_TYPE_SEND_OUT: "AdminForbid_Type_SendOut",
                    JOIN_OPTIONS_FREE_ACCESS: "FreeAccess",
                    JOIN_OPTIONS_NEED_PERMISSION: "NeedPermission",
                    JOIN_OPTIONS_DISABLE_APPLY: "DisableApply",
                    JOIN_STATUS_SUCCESS: "JoinedSuccess",
                    JOIN_STATUS_ALREADY_IN_GROUP: "AlreadyInGroup",
                    JOIN_STATUS_WAIT_APPROVAL: "WaitAdminApproval",
                    GRP_PROFILE_OWNER_ID: "ownerID",
                    GRP_PROFILE_CREATE_TIME: "createTime",
                    GRP_PROFILE_LAST_INFO_TIME: "lastInfoTime",
                    GRP_PROFILE_MEMBER_NUM: "memberNum",
                    GRP_PROFILE_MAX_MEMBER_NUM: "maxMemberNum",
                    GRP_PROFILE_JOIN_OPTION: "joinOption",
                    GRP_PROFILE_INTRODUCTION: "introduction",
                    GRP_PROFILE_NOTIFICATION: "notification",
                    GRP_PROFILE_MUTE_ALL_MBRS: "muteAllMembers",
                    NET_STATE_CONNECTED: "connected",
                    NET_STATE_CONNECTING: "connecting",
                    NET_STATE_DISCONNECTED: "disconnected",
                    MSG_AT_ALL: "__kImSDK_MesssageAtALL__"
                }, En = at.map, An = Je("map"), bn = pt("map");
                Oe({
                    target: "Array",
                    proto: !0,
                    forced: !An || !bn
                }, {
                    map: function(e) {
                        return En(this, e, arguments.length > 1 ? arguments[1] : void 0);
                    }
                });
                var xn = [].slice, wn = {}, Dn = function(e, t, n) {
                    if (!(t in wn)) {
                        for (var r = [], o = 0; o < t; o++) r[o] = "a[" + o + "]";
                        wn[t] = Function("C,a", "return new C(" + r.join(",") + ")");
                    }
                    return wn[t](e, n);
                }, kn = Function.bind || function(e) {
                    var t = nt(this), n = xn.call(arguments, 1), r = function r() {
                        var o = n.concat(xn.call(arguments));
                        return this instanceof r ? Dn(t, o.length, o) : t.apply(e, o);
                    };
                    return v(t.prototype) && (r.prototype = t.prototype), r;
                };
                function On(e) {
                    return (On = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function Ln(e, t) {
                    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
                }
                function Rn(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), 
                        Object.defineProperty(e, r.key, r);
                    }
                }
                function Pn(e, t, n) {
                    return t && Rn(e.prototype, t), n && Rn(e, n), e;
                }
                function Nn(e, t, n) {
                    return t in e ? Object.defineProperty(e, t, {
                        value: n,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : e[t] = n, e;
                }
                function Gn(e, t) {
                    var n = Object.keys(e);
                    if (Object.getOwnPropertySymbols) {
                        var r = Object.getOwnPropertySymbols(e);
                        t && (r = r.filter(function(t) {
                            return Object.getOwnPropertyDescriptor(e, t).enumerable;
                        })), n.push.apply(n, r);
                    }
                    return n;
                }
                function Fn(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = null != arguments[t] ? arguments[t] : {};
                        t % 2 ? Gn(Object(n), !0).forEach(function(t) {
                            Nn(e, t, n[t]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Gn(Object(n)).forEach(function(t) {
                            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
                        });
                    }
                    return e;
                }
                function Un(e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && jn(e, t);
                }
                function qn(e) {
                    return (qn = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
                        return e.__proto__ || Object.getPrototypeOf(e);
                    })(e);
                }
                function jn(e, t) {
                    return (jn = Object.setPrototypeOf || function(e, t) {
                        return e.__proto__ = t, e;
                    })(e, t);
                }
                function $n() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), 
                        !0;
                    } catch (e) {
                        return !1;
                    }
                }
                function Vn(e, t, n) {
                    return (Vn = $n() ? Reflect.construct : function(e, t, n) {
                        var r = [ null ];
                        r.push.apply(r, t);
                        var o = new (Function.bind.apply(e, r))();
                        return n && jn(o, n.prototype), o;
                    }).apply(null, arguments);
                }
                function Bn(e) {
                    var t = "function" == typeof Map ? new Map() : void 0;
                    return (Bn = function(e) {
                        if (null === e || (n = e, -1 === Function.toString.call(n).indexOf("[native code]"))) return e;
                        var n;
                        if ("function" != typeof e) throw new TypeError("Super expression must either be null or a function");
                        if (void 0 !== t) {
                            if (t.has(e)) return t.get(e);
                            t.set(e, r);
                        }
                        function r() {
                            return Vn(e, arguments, qn(this).constructor);
                        }
                        return r.prototype = Object.create(e.prototype, {
                            constructor: {
                                value: r,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), jn(r, e);
                    })(e);
                }
                function Hn(e, t) {
                    if (null == e) return {};
                    var n, r, o = function(e, t) {
                        if (null == e) return {};
                        var n, r, o = {}, i = Object.keys(e);
                        for (r = 0; r < i.length; r++) n = i[r], t.indexOf(n) >= 0 || (o[n] = e[n]);
                        return o;
                    }(e, t);
                    if (Object.getOwnPropertySymbols) {
                        var i = Object.getOwnPropertySymbols(e);
                        for (r = 0; r < i.length; r++) n = i[r], t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
                    }
                    return o;
                }
                function Kn(e) {
                    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return e;
                }
                function zn(e, t) {
                    return !t || "object" != typeof t && "function" != typeof t ? Kn(e) : t;
                }
                function Wn(e) {
                    var t = $n();
                    return function() {
                        var n, r = qn(e);
                        if (t) {
                            var o = qn(this).constructor;
                            n = Reflect.construct(r, arguments, o);
                        } else n = r.apply(this, arguments);
                        return zn(this, n);
                    };
                }
                function Yn(e, t) {
                    return Xn(e) || function(e, t) {
                        if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) {
                            var n = [], r = !0, o = !1, i = void 0;
                            try {
                                for (var a, s = e[Symbol.iterator](); !(r = (a = s.next()).done) && (n.push(a.value), 
                                !t || n.length !== t); r = !0) ;
                            } catch (u) {
                                o = !0, i = u;
                            } finally {
                                try {
                                    r || null == s.return || s.return();
                                } finally {
                                    if (o) throw i;
                                }
                            }
                            return n;
                        }
                    }(e, t) || Zn(e, t) || tr();
                }
                function Jn(e) {
                    return function(e) {
                        if (Array.isArray(e)) return er(e);
                    }(e) || Qn(e) || Zn(e) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }();
                }
                function Xn(e) {
                    if (Array.isArray(e)) return e;
                }
                function Qn(e) {
                    if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);
                }
                function Zn(e, t) {
                    if (e) {
                        if ("string" == typeof e) return er(e, t);
                        var n = Object.prototype.toString.call(e).slice(8, -1);
                        return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? er(e, t) : void 0;
                    }
                }
                function er(e, t) {
                    (null == t || t > e.length) && (t = e.length);
                    for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
                    return r;
                }
                function tr() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                function nr(e, t) {
                    var n;
                    if ("undefined" == typeof Symbol || null == e[Symbol.iterator]) {
                        if (Array.isArray(e) || (n = Zn(e)) || t && e && "number" == typeof e.length) {
                            n && (e = n);
                            var r = 0, o = function() {};
                            return {
                                s: o,
                                n: function() {
                                    return r >= e.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: e[r++]
                                    };
                                },
                                e: function(e) {
                                    throw e;
                                },
                                f: o
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var i, a = !0, s = !1;
                    return {
                        s: function() {
                            n = e[Symbol.iterator]();
                        },
                        n: function() {
                            var e = n.next();
                            return a = e.done, e;
                        },
                        e: function(e) {
                            s = !0, i = e;
                        },
                        f: function() {
                            try {
                                a || null == n.return || n.return();
                            } finally {
                                if (s) throw i;
                            }
                        }
                    };
                }
                Oe({
                    target: "Function",
                    proto: !0
                }, {
                    bind: kn
                });
                var rr = function() {
                    function e() {
                        Ln(this, e), this.cache = [], this.options = null;
                    }
                    return Pn(e, [ {
                        key: "use",
                        value: function(e) {
                            if ("function" != typeof e) throw "middleware must be a function";
                            return this.cache.push(e), this;
                        }
                    }, {
                        key: "next",
                        value: function(e) {
                            if (this.middlewares && this.middlewares.length > 0) return this.middlewares.shift().call(this, this.options, this.next.bind(this));
                        }
                    }, {
                        key: "run",
                        value: function(e) {
                            return this.middlewares = this.cache.map(function(e) {
                                return e;
                            }), this.options = e, this.next();
                        }
                    } ]), e;
                }(), or = w.f, ir = Function.prototype, ar = ir.toString, sr = /^\s*function ([^ (]*)/;
                a && !("name" in ir) && or(ir, "name", {
                    configurable: !0,
                    get: function() {
                        try {
                            return ar.call(this).match(sr)[1];
                        } catch (f_) {
                            return "";
                        }
                    }
                });
                var cr = n(function(t, n) {
                    var r, o, i, a, s, c, u, l, p, h, f, d, g, m, v, y, _, S;
                    t.exports = (r = "function" == typeof Promise, o = "object" == typeof self ? self : e, 
                    i = "undefined" != typeof Symbol, a = "undefined" != typeof Map, s = "undefined" != typeof Set, 
                    c = "undefined" != typeof WeakMap, u = "undefined" != typeof WeakSet, l = "undefined" != typeof DataView, 
                    p = i && void 0 !== Symbol.iterator, h = i && void 0 !== Symbol.toStringTag, f = s && "function" == typeof Set.prototype.entries, 
                    d = a && "function" == typeof Map.prototype.entries, g = f && Object.getPrototypeOf(new Set().entries()), 
                    m = d && Object.getPrototypeOf(new Map().entries()), v = p && "function" == typeof Array.prototype[Symbol.iterator], 
                    y = v && Object.getPrototypeOf([][Symbol.iterator]()), _ = p && "function" == typeof String.prototype[Symbol.iterator], 
                    S = _ && Object.getPrototypeOf(""[Symbol.iterator]()), function(e) {
                        var t = typeof e;
                        if ("object" !== t) return t;
                        if (null === e) return "null";
                        if (e === o) return "global";
                        if (Array.isArray(e) && (!1 === h || !(Symbol.toStringTag in e))) return "Array";
                        if ("object" == typeof window && null !== window) {
                            if ("object" == typeof window.location && e === window.location) return "Location";
                            if ("object" == typeof window.document && e === window.document) return "Document";
                            if ("object" == typeof window.navigator) {
                                if ("object" == typeof window.navigator.mimeTypes && e === window.navigator.mimeTypes) return "MimeTypeArray";
                                if ("object" == typeof window.navigator.plugins && e === window.navigator.plugins) return "PluginArray";
                            }
                            if (("function" == typeof window.HTMLElement || "object" == typeof window.HTMLElement) && e instanceof window.HTMLElement) {
                                if ("BLOCKQUOTE" === e.tagName) return "HTMLQuoteElement";
                                if ("TD" === e.tagName) return "HTMLTableDataCellElement";
                                if ("TH" === e.tagName) return "HTMLTableHeaderCellElement";
                            }
                        }
                        var n = h && e[Symbol.toStringTag];
                        if ("string" == typeof n) return n;
                        var i = Object.getPrototypeOf(e);
                        return i === RegExp.prototype ? "RegExp" : i === Date.prototype ? "Date" : r && i === Promise.prototype ? "Promise" : s && i === Set.prototype ? "Set" : a && i === Map.prototype ? "Map" : u && i === WeakSet.prototype ? "WeakSet" : c && i === WeakMap.prototype ? "WeakMap" : l && i === DataView.prototype ? "DataView" : a && i === m ? "Map Iterator" : s && i === g ? "Set Iterator" : v && i === y ? "Array Iterator" : _ && i === S ? "String Iterator" : null === i ? "Object" : Object.prototype.toString.call(e).slice(8, -1);
                    });
                });
                Oe({
                    target: "Array",
                    stat: !0
                }, {
                    isArray: Le
                });
                var ur = je("unscopables"), lr = Array.prototype;
                null == lr[ur] && w.f(lr, ur, {
                    configurable: !0,
                    value: Vt(null)
                });
                var pr = function(e) {
                    lr[ur][e] = !0;
                }, hr = at.find, fr = !0, dr = pt("find");
                "find" in [] && Array(1).find(function() {
                    fr = !1;
                }), Oe({
                    target: "Array",
                    proto: !0,
                    forced: fr || !dr
                }, {
                    find: function(e) {
                        return hr(this, e, arguments.length > 1 ? arguments[1] : void 0);
                    }
                }), pr("find");
                var gr = ge.includes, mr = pt("indexOf", {
                    ACCESSORS: !0,
                    1: 0
                });
                Oe({
                    target: "Array",
                    proto: !0,
                    forced: !mr
                }, {
                    includes: function(e) {
                        return gr(this, e, arguments.length > 1 ? arguments[1] : void 0);
                    }
                }), pr("includes");
                var vr = ge.indexOf, yr = [].indexOf, _r = !!yr && 1 / [ 1 ].indexOf(1, -0) < 0, Sr = st("indexOf"), Ir = pt("indexOf", {
                    ACCESSORS: !0,
                    1: 0
                });
                Oe({
                    target: "Array",
                    proto: !0,
                    forced: _r || !Sr || !Ir
                }, {
                    indexOf: function(e) {
                        return _r ? yr.apply(this, arguments) || 0 : vr(this, e, arguments.length > 1 ? arguments[1] : void 0);
                    }
                });
                var Mr = te.set, Cr = te.getterFor("Array Iterator"), Tr = gn(Array, "Array", function(e, t) {
                    Mr(this, {
                        type: "Array Iterator",
                        target: m(e),
                        index: 0,
                        kind: t
                    });
                }, function() {
                    var e = Cr(this), t = e.target, n = e.kind, r = e.index++;
                    return !t || r >= t.length ? (e.target = void 0, {
                        value: void 0,
                        done: !0
                    }) : "keys" == n ? {
                        value: r,
                        done: !1
                    } : "values" == n ? {
                        value: t[r],
                        done: !1
                    } : {
                        value: [ r, t[r] ],
                        done: !1
                    };
                }, "values");
                vt.Arguments = vt.Array, pr("keys"), pr("values"), pr("entries");
                var Er = [].join, Ar = d != Object, br = st("join", ",");
                Oe({
                    target: "Array",
                    proto: !0,
                    forced: Ar || !br
                }, {
                    join: function(e) {
                        return Er.call(m(this), void 0 === e ? "," : e);
                    }
                });
                var xr = Je("slice"), wr = pt("slice", {
                    ACCESSORS: !0,
                    0: 0,
                    1: 2
                }), Dr = je("species"), kr = [].slice, Or = Math.max;
                Oe({
                    target: "Array",
                    proto: !0,
                    forced: !xr || !wr
                }, {
                    slice: function(e, t) {
                        var n, r, o, i = m(this), a = le(i.length), s = fe(e, a), c = fe(void 0 === t ? a : t, a);
                        if (Le(i) && ("function" != typeof (n = i.constructor) || n !== Array && !Le(n.prototype) ? v(n) && null === (n = n[Dr]) && (n = void 0) : n = void 0, 
                        n === Array || void 0 === n)) return kr.call(i, s, c);
                        for (r = new (void 0 === n ? Array : n)(Or(c - s, 0)), o = 0; s < c; s++, o++) s in i && Pe(r, o, i[s]);
                        return r.length = o, r;
                    }
                }), Oe({
                    target: "Date",
                    stat: !0
                }, {
                    now: function() {
                        return new Date().getTime();
                    }
                });
                var Lr = "".repeat || function(e) {
                    var t = String(g(this)), n = "", r = ce(e);
                    if (r < 0 || 1 / 0 == r) throw RangeError("Wrong number of repetitions");
                    for (;r > 0; (r >>>= 1) && (t += t)) 1 & r && (n += t);
                    return n;
                }, Rr = Math.ceil, Pr = function(e) {
                    return function(t, n, r) {
                        var o, i, a = String(g(t)), s = a.length, c = void 0 === r ? " " : String(r), u = le(n);
                        return u <= s || "" == c ? a : (o = u - s, (i = Lr.call(c, Rr(o / c.length))).length > o && (i = i.slice(0, o)), 
                        e ? a + i : i + a);
                    };
                }, Nr = {
                    start: Pr(!1),
                    end: Pr(!0)
                }.start, Gr = Math.abs, Fr = Date.prototype, Ur = Fr.getTime, qr = Fr.toISOString, jr = i(function() {
                    return "0385-07-25T07:06:39.999Z" != qr.call(new Date(-50000000000001));
                }) || !i(function() {
                    qr.call(new Date(NaN));
                }) ? function() {
                    if (!isFinite(Ur.call(this))) throw RangeError("Invalid time value");
                    var e = this.getUTCFullYear(), t = this.getUTCMilliseconds(), n = e < 0 ? "-" : e > 9999 ? "+" : "";
                    return n + Nr(Gr(e), n ? 6 : 4, 0) + "-" + Nr(this.getUTCMonth() + 1, 2, 0) + "-" + Nr(this.getUTCDate(), 2, 0) + "T" + Nr(this.getUTCHours(), 2, 0) + ":" + Nr(this.getUTCMinutes(), 2, 0) + ":" + Nr(this.getUTCSeconds(), 2, 0) + "." + Nr(t, 3, 0) + "Z";
                } : qr;
                Oe({
                    target: "Date",
                    proto: !0,
                    forced: Date.prototype.toISOString !== jr
                }, {
                    toISOString: jr
                });
                var $r = Date.prototype, Vr = $r.toString, Br = $r.getTime;
                new Date(NaN) + "" != "Invalid Date" && ne($r, "toString", function() {
                    var e = Br.call(this);
                    return e == e ? Vr.call(this) : "Invalid Date";
                });
                var Hr = function(e, t, n) {
                    var r, o;
                    return ln && "function" == typeof (r = t.constructor) && r !== n && v(o = r.prototype) && o !== n.prototype && ln(e, o), 
                    e;
                }, Kr = "\t\n\v\f\r                　\u2028\u2029\ufeff", zr = "[" + Kr + "]", Wr = RegExp("^" + zr + zr + "*"), Yr = RegExp(zr + zr + "*$"), Jr = function(e) {
                    return function(t) {
                        var n = String(g(t));
                        return 1 & e && (n = n.replace(Wr, "")), 2 & e && (n = n.replace(Yr, "")), n;
                    };
                }, Xr = {
                    start: Jr(1),
                    end: Jr(2),
                    trim: Jr(3)
                }, Qr = Se.f, Zr = A.f, eo = w.f, to = Xr.trim, no = o.Number, ro = no.prototype, oo = "Number" == h(Vt(ro)), io = function(e) {
                    var t, n, r, o, i, a, s, c, u = y(e, !1);
                    if ("string" == typeof u && u.length > 2) if (43 === (t = (u = to(u)).charCodeAt(0)) || 45 === t) {
                        if (88 === (n = u.charCodeAt(2)) || 120 === n) return NaN;
                    } else if (48 === t) {
                        switch (u.charCodeAt(1)) {
                          case 66:
                          case 98:
                            r = 2, o = 49;
                            break;

                          case 79:
                          case 111:
                            r = 8, o = 55;
                            break;

                          default:
                            return +u;
                        }
                        for (a = (i = u.slice(2)).length, s = 0; s < a; s++) if ((c = i.charCodeAt(s)) < 48 || c > o) return NaN;
                        return parseInt(i, r);
                    }
                    return +u;
                };
                if (De("Number", !no(" 0o1") || !no("0b1") || no("+0x1"))) {
                    for (var ao, so = function e(t) {
                        var n = arguments.length < 1 ? 0 : t, r = this;
                        return r instanceof e && (oo ? i(function() {
                            ro.valueOf.call(r);
                        }) : "Number" != h(r)) ? Hr(new no(io(n)), r, e) : io(n);
                    }, co = a ? Qr(no) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), uo = 0; co.length > uo; uo++) S(no, ao = co[uo]) && !S(so, ao) && eo(so, ao, Zr(no, ao));
                    so.prototype = ro, ro.constructor = so, ne(o, "Number", so);
                }
                var lo = Se.f, po = {}.toString, ho = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [], fo = {
                    f: function(e) {
                        return ho && "[object Window]" == po.call(e) ? function(e) {
                            try {
                                return lo(e);
                            } catch (f_) {
                                return ho.slice();
                            }
                        }(e) : lo(m(e));
                    }
                }, go = fo.f, mo = i(function() {
                    return !Object.getOwnPropertyNames(1);
                });
                Oe({
                    target: "Object",
                    stat: !0,
                    forced: mo
                }, {
                    getOwnPropertyNames: go
                });
                var vo = i(function() {
                    Zt(1);
                });
                Oe({
                    target: "Object",
                    stat: !0,
                    forced: vo,
                    sham: !Jt
                }, {
                    getPrototypeOf: function(e) {
                        return Zt(Re(e));
                    }
                });
                var yo = Mt ? {}.toString : function() {
                    return "[object " + Et(this) + "]";
                };
                Mt || ne(Object.prototype, "toString", yo, {
                    unsafe: !0
                });
                var _o = Xr.trim, So = o.parseInt, Io = /^[+-]?0[Xx]/, Mo = 8 !== So(Kr + "08") || 22 !== So(Kr + "0x16") ? function(e, t) {
                    var n = _o(String(e));
                    return So(n, t >>> 0 || (Io.test(n) ? 16 : 10));
                } : So;
                Oe({
                    global: !0,
                    forced: parseInt != Mo
                }, {
                    parseInt: Mo
                });
                var Co, To, Eo, Ao = o.Promise, bo = function(e, t, n) {
                    for (var r in t) ne(e, r, t[r], n);
                    return e;
                }, xo = je("species"), wo = function(e) {
                    var t = ie(e), n = w.f;
                    a && t && !t[xo] && n(t, xo, {
                        configurable: !0,
                        get: function() {
                            return this;
                        }
                    });
                }, Do = function(e, t, n) {
                    if (!(e instanceof t)) throw TypeError("Incorrect " + (n ? n + " " : "") + "invocation");
                    return e;
                }, ko = n(function(e) {
                    var t = function(e, t) {
                        this.stopped = e, this.result = t;
                    };
                    (e.exports = function(e, n, r, o, i) {
                        var a, s, c, u, l, p, h, f = rt(n, r, o ? 2 : 1);
                        if (i) a = e; else {
                            if ("function" != typeof (s = bt(e))) throw TypeError("Target is not iterable");
                            if (St(s)) {
                                for (c = 0, u = le(e.length); u > c; c++) if ((l = o ? f(b(h = e[c])[0], h[1]) : f(e[c])) && l instanceof t) return l;
                                return new t(!1);
                            }
                            a = s.call(e);
                        }
                        for (p = a.next; !(h = p.call(a)).done; ) if ("object" == typeof (l = mt(a, f, h.value, o)) && l && l instanceof t) return l;
                        return new t(!1);
                    }).stop = function(e) {
                        return new t(!0, e);
                    };
                }), Oo = je("species"), Lo = function(e, t) {
                    var n, r = b(e).constructor;
                    return void 0 === r || null == (n = b(r)[Oo]) ? t : nt(n);
                }, Ro = /(iphone|ipod|ipad).*applewebkit/i.test(Be), Po = o.location, No = o.setImmediate, Go = o.clearImmediate, Fo = o.process, Uo = o.MessageChannel, qo = o.Dispatch, jo = 0, $o = {}, Vo = function(e) {
                    if ($o.hasOwnProperty(e)) {
                        var t = $o[e];
                        delete $o[e], t();
                    }
                }, Bo = function(e) {
                    return function() {
                        Vo(e);
                    };
                }, Ho = function(e) {
                    Vo(e.data);
                }, Ko = function(e) {
                    o.postMessage(e + "", Po.protocol + "//" + Po.host);
                };
                No && Go || (No = function(e) {
                    for (var t = [], n = 1; arguments.length > n; ) t.push(arguments[n++]);
                    return $o[++jo] = function() {
                        ("function" == typeof e ? e : Function(e)).apply(void 0, t);
                    }, Co(jo), jo;
                }, Go = function(e) {
                    delete $o[e];
                }, "process" == h(Fo) ? Co = function(e) {
                    Fo.nextTick(Bo(e));
                } : qo && qo.now ? Co = function(e) {
                    qo.now(Bo(e));
                } : Uo && !Ro ? (Eo = (To = new Uo()).port2, To.port1.onmessage = Ho, Co = rt(Eo.postMessage, Eo, 1)) : !o.addEventListener || "function" != typeof postMessage || o.importScripts || i(Ko) || "file:" === Po.protocol ? Co = "onreadystatechange" in C("script") ? function(e) {
                    Ft.appendChild(C("script")).onreadystatechange = function() {
                        Ft.removeChild(this), Vo(e);
                    };
                } : function(e) {
                    setTimeout(Bo(e), 0);
                } : (Co = Ko, o.addEventListener("message", Ho, !1)));
                var zo, Wo, Yo, Jo, Xo, Qo, Zo, ei, ti = {
                    set: No,
                    clear: Go
                }, ni = A.f, ri = ti.set, oi = o.MutationObserver || o.WebKitMutationObserver, ii = o.process, ai = o.Promise, si = "process" == h(ii), ci = ni(o, "queueMicrotask"), ui = ci && ci.value;
                ui || (zo = function() {
                    var e, t;
                    for (si && (e = ii.domain) && e.exit(); Wo; ) {
                        t = Wo.fn, Wo = Wo.next;
                        try {
                            t();
                        } catch (f_) {
                            throw Wo ? Jo() : Yo = void 0, f_;
                        }
                    }
                    Yo = void 0, e && e.enter();
                }, si ? Jo = function() {
                    ii.nextTick(zo);
                } : oi && !Ro ? (Xo = !0, Qo = document.createTextNode(""), new oi(zo).observe(Qo, {
                    characterData: !0
                }), Jo = function() {
                    Qo.data = Xo = !Xo;
                }) : ai && ai.resolve ? (Zo = ai.resolve(void 0), ei = Zo.then, Jo = function() {
                    ei.call(Zo, zo);
                }) : Jo = function() {
                    ri.call(o, zo);
                });
                var li, pi, hi, fi, di = ui || function(e) {
                    var t = {
                        fn: e,
                        next: void 0
                    };
                    Yo && (Yo.next = t), Wo || (Wo = t, Jo()), Yo = t;
                }, gi = function(e) {
                    var t, n;
                    this.promise = new e(function(e, r) {
                        if (void 0 !== t || void 0 !== n) throw TypeError("Bad Promise constructor");
                        t = e, n = r;
                    }), this.resolve = nt(t), this.reject = nt(n);
                }, mi = {
                    f: function(e) {
                        return new gi(e);
                    }
                }, vi = function(e, t) {
                    if (b(e), v(t) && t.constructor === e) return t;
                    var n = mi.f(e);
                    return (0, n.resolve)(t), n.promise;
                }, yi = function(e) {
                    try {
                        return {
                            error: !1,
                            value: e()
                        };
                    } catch (f_) {
                        return {
                            error: !0,
                            value: f_
                        };
                    }
                }, _i = ti.set, Si = je("species"), Ii = "Promise", Mi = te.get, Ci = te.set, Ti = te.getterFor(Ii), Ei = Ao, Ai = o.TypeError, bi = o.document, xi = o.process, wi = ie("fetch"), Di = mi.f, ki = Di, Oi = "process" == h(xi), Li = !!(bi && bi.createEvent && o.dispatchEvent), Ri = De(Ii, function() {
                    if (G(Ei) === String(Ei)) {
                        if (66 === We) return !0;
                        if (!Oi && "function" != typeof PromiseRejectionEvent) return !0;
                    }
                    if (We >= 51 && /native code/.test(Ei)) return !1;
                    var e = Ei.resolve(1), t = function(e) {
                        e(function() {}, function() {});
                    };
                    return (e.constructor = {})[Si] = t, !(e.then(function() {}) instanceof t);
                }), Pi = Ri || !Lt(function(e) {
                    Ei.all(e).catch(function() {});
                }), Ni = function(e) {
                    var t;
                    return !(!v(e) || "function" != typeof (t = e.then)) && t;
                }, Gi = function(e, t, n) {
                    if (!t.notified) {
                        t.notified = !0;
                        var r = t.reactions;
                        di(function() {
                            for (var o = t.value, i = 1 == t.state, a = 0; r.length > a; ) {
                                var s, c, u, l = r[a++], p = i ? l.ok : l.fail, h = l.resolve, f = l.reject, d = l.domain;
                                try {
                                    p ? (i || (2 === t.rejection && ji(e, t), t.rejection = 1), !0 === p ? s = o : (d && d.enter(), 
                                    s = p(o), d && (d.exit(), u = !0)), s === l.promise ? f(Ai("Promise-chain cycle")) : (c = Ni(s)) ? c.call(s, h, f) : h(s)) : f(o);
                                } catch (f_) {
                                    d && !u && d.exit(), f(f_);
                                }
                            }
                            t.reactions = [], t.notified = !1, n && !t.rejection && Ui(e, t);
                        });
                    }
                }, Fi = function(e, t, n) {
                    var r, i;
                    Li ? ((r = bi.createEvent("Event")).promise = t, r.reason = n, r.initEvent(e, !1, !0), 
                    o.dispatchEvent(r)) : r = {
                        promise: t,
                        reason: n
                    }, (i = o["on" + e]) ? i(r) : "unhandledrejection" === e && function(e, t) {
                        var n = o.console;
                        n && n.error && (1 === arguments.length ? n.error(e) : n.error(e, t));
                    }("Unhandled promise rejection", n);
                }, Ui = function(e, t) {
                    _i.call(o, function() {
                        var n, r = t.value;
                        if (qi(t) && (n = yi(function() {
                            Oi ? xi.emit("unhandledRejection", r, e) : Fi("unhandledrejection", e, r);
                        }), t.rejection = Oi || qi(t) ? 2 : 1, n.error)) throw n.value;
                    });
                }, qi = function(e) {
                    return 1 !== e.rejection && !e.parent;
                }, ji = function(e, t) {
                    _i.call(o, function() {
                        Oi ? xi.emit("rejectionHandled", e) : Fi("rejectionhandled", e, t.value);
                    });
                }, $i = function(e, t, n, r) {
                    return function(o) {
                        e(t, n, o, r);
                    };
                }, Vi = function(e, t, n, r) {
                    t.done || (t.done = !0, r && (t = r), t.value = n, t.state = 2, Gi(e, t, !0));
                }, Bi = function e(t, n, r, o) {
                    if (!n.done) {
                        n.done = !0, o && (n = o);
                        try {
                            if (t === r) throw Ai("Promise can't be resolved itself");
                            var i = Ni(r);
                            i ? di(function() {
                                var o = {
                                    done: !1
                                };
                                try {
                                    i.call(r, $i(e, t, o, n), $i(Vi, t, o, n));
                                } catch (f_) {
                                    Vi(t, o, f_, n);
                                }
                            }) : (n.value = r, n.state = 1, Gi(t, n, !1));
                        } catch (f_) {
                            Vi(t, {
                                done: !1
                            }, f_, n);
                        }
                    }
                };
                Ri && (Ei = function(e) {
                    Do(this, Ei, Ii), nt(e), li.call(this);
                    var t = Mi(this);
                    try {
                        e($i(Bi, this, t), $i(Vi, this, t));
                    } catch (f_) {
                        Vi(this, t, f_);
                    }
                }, (li = function(e) {
                    Ci(this, {
                        type: Ii,
                        done: !1,
                        notified: !1,
                        parent: !1,
                        reactions: [],
                        rejection: !1,
                        state: 0,
                        value: void 0
                    });
                }).prototype = bo(Ei.prototype, {
                    then: function(e, t) {
                        var n = Ti(this), r = Di(Lo(this, Ei));
                        return r.ok = "function" != typeof e || e, r.fail = "function" == typeof t && t, 
                        r.domain = Oi ? xi.domain : void 0, n.parent = !0, n.reactions.push(r), 0 != n.state && Gi(this, n, !1), 
                        r.promise;
                    },
                    catch: function(e) {
                        return this.then(void 0, e);
                    }
                }), pi = function() {
                    var e = new li(), t = Mi(e);
                    this.promise = e, this.resolve = $i(Bi, e, t), this.reject = $i(Vi, e, t);
                }, mi.f = Di = function(e) {
                    return e === Ei || e === hi ? new pi(e) : ki(e);
                }, "function" == typeof Ao && (fi = Ao.prototype.then, ne(Ao.prototype, "then", function(e, t) {
                    var n = this;
                    return new Ei(function(e, t) {
                        fi.call(n, e, t);
                    }).then(e, t);
                }, {
                    unsafe: !0
                }), "function" == typeof wi && Oe({
                    global: !0,
                    enumerable: !0,
                    forced: !0
                }, {
                    fetch: function(e) {
                        return vi(Ei, wi.apply(o, arguments));
                    }
                }))), Oe({
                    global: !0,
                    wrap: !0,
                    forced: Ri
                }, {
                    Promise: Ei
                }), an(Ei, Ii, !1), wo(Ii), hi = ie(Ii), Oe({
                    target: Ii,
                    stat: !0,
                    forced: Ri
                }, {
                    reject: function(e) {
                        var t = Di(this);
                        return t.reject.call(void 0, e), t.promise;
                    }
                }), Oe({
                    target: Ii,
                    stat: !0,
                    forced: Ri
                }, {
                    resolve: function(e) {
                        return vi(this, e);
                    }
                }), Oe({
                    target: Ii,
                    stat: !0,
                    forced: Pi
                }, {
                    all: function(e) {
                        var t = this, n = Di(t), r = n.resolve, o = n.reject, i = yi(function() {
                            var n = nt(t.resolve), i = [], a = 0, s = 1;
                            ko(e, function(e) {
                                var c = a++, u = !1;
                                i.push(void 0), s++, n.call(t, e).then(function(e) {
                                    u || (u = !0, i[c] = e, --s || r(i));
                                }, o);
                            }), --s || r(i);
                        });
                        return i.error && o(i.value), n.promise;
                    },
                    race: function(e) {
                        var t = this, n = Di(t), r = n.reject, o = yi(function() {
                            var o = nt(t.resolve);
                            ko(e, function(e) {
                                o.call(t, e).then(n.resolve, r);
                            });
                        });
                        return o.error && r(o.value), n.promise;
                    }
                });
                var Hi = function() {
                    var e = b(this), t = "";
                    return e.global && (t += "g"), e.ignoreCase && (t += "i"), e.multiline && (t += "m"), 
                    e.dotAll && (t += "s"), e.unicode && (t += "u"), e.sticky && (t += "y"), t;
                };
                function Ki(e, t) {
                    return RegExp(e, t);
                }
                var zi, Wi, Yi = {
                    UNSUPPORTED_Y: i(function() {
                        var e = Ki("a", "y");
                        return e.lastIndex = 2, null != e.exec("abcd");
                    }),
                    BROKEN_CARET: i(function() {
                        var e = Ki("^r", "gy");
                        return e.lastIndex = 2, null != e.exec("str");
                    })
                }, Ji = RegExp.prototype.exec, Xi = String.prototype.replace, Qi = Ji, Zi = (zi = /a/, 
                Wi = /b*/g, Ji.call(zi, "a"), Ji.call(Wi, "a"), 0 !== zi.lastIndex || 0 !== Wi.lastIndex), ea = Yi.UNSUPPORTED_Y || Yi.BROKEN_CARET, ta = void 0 !== /()??/.exec("")[1];
                (Zi || ta || ea) && (Qi = function(e) {
                    var t, n, r, o, i = this, a = ea && i.sticky, s = Hi.call(i), c = i.source, u = 0, l = e;
                    return a && (-1 === (s = s.replace("y", "")).indexOf("g") && (s += "g"), l = String(e).slice(i.lastIndex), 
                    i.lastIndex > 0 && (!i.multiline || i.multiline && "\n" !== e[i.lastIndex - 1]) && (c = "(?: " + c + ")", 
                    l = " " + l, u++), n = new RegExp("^(?:" + c + ")", s)), ta && (n = new RegExp("^" + c + "$(?!\\s)", s)), 
                    Zi && (t = i.lastIndex), r = Ji.call(a ? n : i, l), a ? r ? (r.input = r.input.slice(u), 
                    r[0] = r[0].slice(u), r.index = i.lastIndex, i.lastIndex += r[0].length) : i.lastIndex = 0 : Zi && r && (i.lastIndex = i.global ? r.index + r[0].length : t), 
                    ta && r && r.length > 1 && Xi.call(r[0], n, function() {
                        for (o = 1; o < arguments.length - 2; o++) void 0 === arguments[o] && (r[o] = void 0);
                    }), r;
                });
                var na = Qi;
                Oe({
                    target: "RegExp",
                    proto: !0,
                    forced: /./.exec !== na
                }, {
                    exec: na
                });
                var ra = RegExp.prototype, oa = ra.toString, ia = i(function() {
                    return "/a/b" != oa.call({
                        source: "a",
                        flags: "b"
                    });
                }), aa = "toString" != oa.name;
                (ia || aa) && ne(RegExp.prototype, "toString", function() {
                    var e = b(this), t = String(e.source), n = e.flags;
                    return "/" + t + "/" + String(void 0 === n && e instanceof RegExp && !("flags" in ra) ? Hi.call(e) : n);
                }, {
                    unsafe: !0
                });
                var sa = je("match"), ca = function(e) {
                    var t;
                    return v(e) && (void 0 !== (t = e[sa]) ? !!t : "RegExp" == h(e));
                }, ua = function(e) {
                    if (ca(e)) throw TypeError("The method doesn't accept regular expressions");
                    return e;
                }, la = je("match"), pa = function(e) {
                    var t = /./;
                    try {
                        "/./"[e](t);
                    } catch (r) {
                        try {
                            return t[la] = !1, "/./"[e](t);
                        } catch (o) {}
                    }
                    return !1;
                };
                Oe({
                    target: "String",
                    proto: !0,
                    forced: !pa("includes")
                }, {
                    includes: function(e) {
                        return !!~String(g(this)).indexOf(ua(e), arguments.length > 1 ? arguments[1] : void 0);
                    }
                });
                var ha = je("species"), fa = !i(function() {
                    var e = /./;
                    return e.exec = function() {
                        var e = [];
                        return e.groups = {
                            a: "7"
                        }, e;
                    }, "7" !== "".replace(e, "$<a>");
                }), da = "$0" === "a".replace(/./, "$0"), ga = je("replace"), ma = !!/./[ga] && "" === /./[ga]("a", "$0"), va = !i(function() {
                    var e = /(?:)/, t = e.exec;
                    e.exec = function() {
                        return t.apply(this, arguments);
                    };
                    var n = "ab".split(e);
                    return 2 !== n.length || "a" !== n[0] || "b" !== n[1];
                }), ya = function(e, t, n, r) {
                    var o = je(e), a = !i(function() {
                        var t = {};
                        return t[o] = function() {
                            return 7;
                        }, 7 != ""[e](t);
                    }), s = a && !i(function() {
                        var t = !1, n = /a/;
                        return "split" === e && ((n = {}).constructor = {}, n.constructor[ha] = function() {
                            return n;
                        }, n.flags = "", n[o] = /./[o]), n.exec = function() {
                            return t = !0, null;
                        }, n[o](""), !t;
                    });
                    if (!a || !s || "replace" === e && (!fa || !da || ma) || "split" === e && !va) {
                        var c = /./[o], u = n(o, ""[e], function(e, t, n, r, o) {
                            return t.exec === na ? a && !o ? {
                                done: !0,
                                value: c.call(t, n, r)
                            } : {
                                done: !0,
                                value: e.call(n, t, r)
                            } : {
                                done: !1
                            };
                        }, {
                            REPLACE_KEEPS_$0: da,
                            REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: ma
                        }), l = u[0], p = u[1];
                        ne(String.prototype, e, l), ne(RegExp.prototype, o, 2 == t ? function(e, t) {
                            return p.call(e, this, t);
                        } : function(e) {
                            return p.call(e, this);
                        });
                    }
                    r && D(RegExp.prototype[o], "sham", !0);
                }, _a = Yt.charAt, Sa = function(e, t, n) {
                    return t + (n ? _a(e, t).length : 1);
                }, Ia = function(e, t) {
                    var n = e.exec;
                    if ("function" == typeof n) {
                        var r = n.call(e, t);
                        if ("object" != typeof r) throw TypeError("RegExp exec method returned something other than an Object or null");
                        return r;
                    }
                    if ("RegExp" !== h(e)) throw TypeError("RegExp#exec called on incompatible receiver");
                    return na.call(e, t);
                };
                ya("match", 1, function(e, t, n) {
                    return [ function(t) {
                        var n = g(this), r = null == t ? void 0 : t[e];
                        return void 0 !== r ? r.call(t, n) : new RegExp(t)[e](String(n));
                    }, function(e) {
                        var r = n(t, e, this);
                        if (r.done) return r.value;
                        var o = b(e), i = String(this);
                        if (!o.global) return Ia(o, i);
                        var a = o.unicode;
                        o.lastIndex = 0;
                        for (var s, c = [], u = 0; null !== (s = Ia(o, i)); ) {
                            var l = String(s[0]);
                            c[u] = l, "" === l && (o.lastIndex = Sa(i, le(o.lastIndex), a)), u++;
                        }
                        return 0 === u ? null : c;
                    } ];
                });
                var Ma = Math.max, Ca = Math.min, Ta = Math.floor, Ea = /\$([$&'`]|\d\d?|<[^>]*>)/g, Aa = /\$([$&'`]|\d\d?)/g;
                ya("replace", 2, function(e, t, n, r) {
                    var o = r.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE, i = r.REPLACE_KEEPS_$0, a = o ? "$" : "$0";
                    return [ function(n, r) {
                        var o = g(this), i = null == n ? void 0 : n[e];
                        return void 0 !== i ? i.call(n, o, r) : t.call(String(o), n, r);
                    }, function(e, r) {
                        if (!o && i || "string" == typeof r && -1 === r.indexOf(a)) {
                            var c = n(t, e, this, r);
                            if (c.done) return c.value;
                        }
                        var u = b(e), l = String(this), p = "function" == typeof r;
                        p || (r = String(r));
                        var h = u.global;
                        if (h) {
                            var f = u.unicode;
                            u.lastIndex = 0;
                        }
                        for (var d = []; ;) {
                            var g = Ia(u, l);
                            if (null === g) break;
                            if (d.push(g), !h) break;
                            "" === String(g[0]) && (u.lastIndex = Sa(l, le(u.lastIndex), f));
                        }
                        for (var m, v = "", y = 0, _ = 0; _ < d.length; _++) {
                            g = d[_];
                            for (var S = String(g[0]), I = Ma(Ca(ce(g.index), l.length), 0), M = [], C = 1; C < g.length; C++) M.push(void 0 === (m = g[C]) ? m : String(m));
                            var T = g.groups;
                            if (p) {
                                var E = [ S ].concat(M, I, l);
                                void 0 !== T && E.push(T);
                                var A = String(r.apply(void 0, E));
                            } else A = s(S, l, I, M, T, r);
                            I >= y && (v += l.slice(y, I) + A, y = I + S.length);
                        }
                        return v + l.slice(y);
                    } ];
                    function s(e, n, r, o, i, a) {
                        var s = r + e.length, c = o.length, u = Aa;
                        return void 0 !== i && (i = Re(i), u = Ea), t.call(a, u, function(t, a) {
                            var u;
                            switch (a.charAt(0)) {
                              case "$":
                                return "$";

                              case "&":
                                return e;

                              case "`":
                                return n.slice(0, r);

                              case "'":
                                return n.slice(s);

                              case "<":
                                u = i[a.slice(1, -1)];
                                break;

                              default:
                                var l = +a;
                                if (0 === l) return t;
                                if (l > c) {
                                    var p = Ta(l / 10);
                                    return 0 === p ? t : p <= c ? void 0 === o[p - 1] ? a.charAt(1) : o[p - 1] + a.charAt(1) : t;
                                }
                                u = o[l - 1];
                            }
                            return void 0 === u ? "" : u;
                        });
                    }
                });
                var ba = je("iterator"), xa = je("toStringTag"), wa = Tr.values;
                for (var Da in _n) {
                    var ka = o[Da], Oa = ka && ka.prototype;
                    if (Oa) {
                        if (Oa[ba] !== wa) try {
                            D(Oa, ba, wa);
                        } catch (f_) {
                            Oa[ba] = wa;
                        }
                        if (Oa[xa] || D(Oa, xa, Da), _n[Da]) for (var La in Tr) if (Oa[La] !== Tr[La]) try {
                            D(Oa, La, Tr[La]);
                        } catch (f_) {
                            Oa[La] = Tr[La];
                        }
                    }
                }
                var Ra = Xr.trim, Pa = o.parseFloat, Na = 1 / Pa(Kr + "-0") != -1 / 0 ? function(e) {
                    var t = Ra(String(e)), n = Pa(t);
                    return 0 === n && "-" == t.charAt(0) ? -0 : n;
                } : Pa;
                Oe({
                    global: !0,
                    forced: parseFloat != Na
                }, {
                    parseFloat: Na
                });
                var Ga, Fa, Ua, qa = "undefined" != typeof window, ja = "undefined" != typeof wx && "function" == typeof wx.getSystemInfoSync, $a = "undefined" != typeof qq && "function" == typeof qq.getSystemInfoSync, Va = "undefined" != typeof tt && "function" == typeof tt.getSystemInfoSync, Ba = "undefined" != typeof swan && "function" == typeof swan.getSystemInfoSync, Ha = "undefined" != typeof my && "function" == typeof my.getSystemInfoSync, Ka = ja || $a || Va || Ba || Ha, za = $a ? qq : Va ? tt : Ba ? swan : Ha ? my : ja ? wx : {}, Wa = (Ga = "web", 
                as ? Ga = "wechat" : $a ? Ga = "qqmp" : Va ? Ga = "ttmp" : Ba ? Ga = "baidump" : Ha ? Ga = "alipaymp" : ja && (Ga = "wxmp"), 
                Ga), Ya = qa && window.navigator && window.navigator.userAgent || "", Ja = /AppleWebKit\/([\d.]+)/i.exec(Ya), Xa = (Ja && parseFloat(Ja.pop()), 
                /iPad/i.test(Ya)), Qa = /iPhone/i.test(Ya) && !Xa, Za = /iPod/i.test(Ya), es = Qa || Xa || Za, ts = (function() {
                    var e = Ya.match(/OS (\d+)_/i);
                    e && e[1] && e[1];
                }(), /Android/i.test(Ya)), ns = (function() {
                    var e = Ya.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);
                    if (!e) return null;
                    var t = e[1] && parseFloat(e[1]), n = e[2] && parseFloat(e[2]);
                    t && n && parseFloat(e[1] + "." + e[2]);
                }(), ts && /webkit/i.test(Ya), /Firefox/i.test(Ya), /Edge/i.test(Ya)), rs = (!ns && /Chrome/i.test(Ya), 
                function() {
                    var e = Ya.match(/Chrome\/(\d+)/);
                    e && e[1] && parseFloat(e[1]);
                }(), /MSIE/.test(Ya)), os = (/MSIE\s8\.0/.test(Ya), function() {
                    var e = /MSIE\s(\d+)\.\d/.exec(Ya), t = e && parseFloat(e[1]);
                    return !t && /Trident\/7.0/i.test(Ya) && /rv:11.0/.test(Ya) && (t = 11), t;
                }()), is = (/Safari/i.test(Ya), /TBS\/\d+/i.test(Ya)), as = (function() {
                    var e = Ya.match(/TBS\/(\d+)/i);
                    e && e[1] && e[1];
                }(), !is && /MQQBrowser\/\d+/i.test(Ya), !is && / QQBrowser\/\d+/i.test(Ya), /(micromessenger|webbrowser)/i.test(Ya)), ss = /Windows/i.test(Ya), cs = /MAC OS X/i.test(Ya), us = (/MicroMessenger/i.test(Ya), 
                !i(function() {
                    return Object.isExtensible(Object.preventExtensions({}));
                })), ls = n(function(e) {
                    var t = w.f, n = V("meta"), r = 0, o = Object.isExtensible || function() {
                        return !0;
                    }, i = function(e) {
                        t(e, n, {
                            value: {
                                objectID: "O" + ++r,
                                weakData: {}
                            }
                        });
                    }, a = e.exports = {
                        REQUIRED: !1,
                        fastKey: function(e, t) {
                            if (!v(e)) return "symbol" == typeof e ? e : ("string" == typeof e ? "S" : "P") + e;
                            if (!S(e, n)) {
                                if (!o(e)) return "F";
                                if (!t) return "E";
                                i(e);
                            }
                            return e[n].objectID;
                        },
                        getWeakData: function(e, t) {
                            if (!S(e, n)) {
                                if (!o(e)) return !0;
                                if (!t) return !1;
                                i(e);
                            }
                            return e[n].weakData;
                        },
                        onFreeze: function(e) {
                            return us && a.REQUIRED && o(e) && !S(e, n) && i(e), e;
                        }
                    };
                    K[n] = !0;
                }), ps = (ls.REQUIRED, ls.fastKey, ls.getWeakData, ls.onFreeze, w.f), hs = ls.fastKey, fs = te.set, ds = te.getterFor, gs = (function(e, t, n) {
                    var r = -1 !== e.indexOf("Map"), a = -1 !== e.indexOf("Weak"), s = r ? "set" : "add", c = o[e], u = c && c.prototype, l = c, p = {}, h = function(e) {
                        var t = u[e];
                        ne(u, e, "add" == e ? function(e) {
                            return t.call(this, 0 === e ? 0 : e), this;
                        } : "delete" == e ? function(e) {
                            return !(a && !v(e)) && t.call(this, 0 === e ? 0 : e);
                        } : "get" == e ? function(e) {
                            return a && !v(e) ? void 0 : t.call(this, 0 === e ? 0 : e);
                        } : "has" == e ? function(e) {
                            return !(a && !v(e)) && t.call(this, 0 === e ? 0 : e);
                        } : function(e, n) {
                            return t.call(this, 0 === e ? 0 : e, n), this;
                        });
                    };
                    if (De(e, "function" != typeof c || !(a || u.forEach && !i(function() {
                        new c().entries().next();
                    })))) l = n.getConstructor(t, e, r, s), ls.REQUIRED = !0; else if (De(e, !0)) {
                        var f = new l(), d = f[s](a ? {} : -0, 1) != f, g = i(function() {
                            f.has(1);
                        }), m = Lt(function(e) {
                            new c(e);
                        }), y = !a && i(function() {
                            for (var e = new c(), t = 5; t--; ) e[s](t, t);
                            return !e.has(-0);
                        });
                        m || ((l = t(function(t, n) {
                            Do(t, l, e);
                            var o = Hr(new c(), t, l);
                            return null != n && ko(n, o[s], o, r), o;
                        })).prototype = u, u.constructor = l), (g || y) && (h("delete"), h("has"), r && h("get")), 
                        (y || d) && h(s), a && u.clear && delete u.clear;
                    }
                    p[e] = l, Oe({
                        global: !0,
                        forced: l != c
                    }, p), an(l, e), a || n.setStrong(l, e, r);
                }("Map", function(e) {
                    return function() {
                        return e(this, arguments.length ? arguments[0] : void 0);
                    };
                }, {
                    getConstructor: function(e, t, n, r) {
                        var o = e(function(e, i) {
                            Do(e, o, t), fs(e, {
                                type: t,
                                index: Vt(null),
                                first: void 0,
                                last: void 0,
                                size: 0
                            }), a || (e.size = 0), null != i && ko(i, e[r], e, n);
                        }), i = ds(t), s = function(e, t, n) {
                            var r, o, s = i(e), u = c(e, t);
                            return u ? u.value = n : (s.last = u = {
                                index: o = hs(t, !0),
                                key: t,
                                value: n,
                                previous: r = s.last,
                                next: void 0,
                                removed: !1
                            }, s.first || (s.first = u), r && (r.next = u), a ? s.size++ : e.size++, "F" !== o && (s.index[o] = u)), 
                            e;
                        }, c = function(e, t) {
                            var n, r = i(e), o = hs(t);
                            if ("F" !== o) return r.index[o];
                            for (n = r.first; n; n = n.next) if (n.key == t) return n;
                        };
                        return bo(o.prototype, {
                            clear: function() {
                                for (var e = i(this), t = e.index, n = e.first; n; ) n.removed = !0, n.previous && (n.previous = n.previous.next = void 0), 
                                delete t[n.index], n = n.next;
                                e.first = e.last = void 0, a ? e.size = 0 : this.size = 0;
                            },
                            delete: function(e) {
                                var t = i(this), n = c(this, e);
                                if (n) {
                                    var r = n.next, o = n.previous;
                                    delete t.index[n.index], n.removed = !0, o && (o.next = r), r && (r.previous = o), 
                                    t.first == n && (t.first = r), t.last == n && (t.last = o), a ? t.size-- : this.size--;
                                }
                                return !!n;
                            },
                            forEach: function(e) {
                                for (var t, n = i(this), r = rt(e, arguments.length > 1 ? arguments[1] : void 0, 3); t = t ? t.next : n.first; ) for (r(t.value, t.key, this); t && t.removed; ) t = t.previous;
                            },
                            has: function(e) {
                                return !!c(this, e);
                            }
                        }), bo(o.prototype, n ? {
                            get: function(e) {
                                var t = c(this, e);
                                return t && t.value;
                            },
                            set: function(e, t) {
                                return s(this, 0 === e ? 0 : e, t);
                            }
                        } : {
                            add: function(e) {
                                return s(this, e = 0 === e ? 0 : e, e);
                            }
                        }), a && ps(o.prototype, "size", {
                            get: function() {
                                return i(this).size;
                            }
                        }), o;
                    },
                    setStrong: function(e, t, n) {
                        var r = t + " Iterator", o = ds(t), i = ds(r);
                        gn(e, t, function(e, t) {
                            fs(this, {
                                type: r,
                                target: e,
                                state: o(e),
                                kind: t,
                                last: void 0
                            });
                        }, function() {
                            for (var e = i(this), t = e.kind, n = e.last; n && n.removed; ) n = n.previous;
                            return e.target && (e.last = n = n ? n.next : e.state.first) ? "keys" == t ? {
                                value: n.key,
                                done: !1
                            } : "values" == t ? {
                                value: n.value,
                                done: !1
                            } : {
                                value: [ n.key, n.value ],
                                done: !1
                            } : (e.target = void 0, {
                                value: void 0,
                                done: !0
                            });
                        }, n ? "entries" : "values", !n, !0), wo(t);
                    }
                }), "undefined" != typeof t ? t : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
                Fa = "undefined" != typeof console ? console : void 0 !== gs && gs.console ? gs.console : "undefined" != typeof window && window.console ? window.console : {};
                for (var ms = function() {}, vs = [ "assert", "clear", "count", "debug", "dir", "dirxml", "error", "exception", "group", "groupCollapsed", "groupEnd", "info", "log", "markTimeline", "profile", "profileEnd", "table", "time", "timeEnd", "timeStamp", "trace", "warn" ], ys = vs.length; ys--; ) Ua = vs[ys], 
                console[Ua] || (Fa[Ua] = ms);
                Fa.methods = vs;
                var _s = Fa, Ss = 0, Is = new Map();
                function Ms() {
                    var e = new Date();
                    return "TIM " + e.toLocaleTimeString("en-US", {
                        hour12: !1
                    }) + "." + function(e) {
                        var t;
                        switch (e.toString().length) {
                          case 1:
                            t = "00" + e;
                            break;

                          case 2:
                            t = "0" + e;
                            break;

                          default:
                            t = e;
                        }
                        return t;
                    }(e.getMilliseconds()) + ":";
                }
                var Cs = {
                    arguments2String: function(e) {
                        var t;
                        if (1 === e.length) t = Ms() + e[0]; else {
                            t = Ms();
                            for (var n = 0, r = e.length; n < r; n++) ks(e[n]) ? Ls(e[n]) ? t += Us(e[n]) : t += JSON.stringify(e[n]) : t += e[n], 
                            t += " ";
                        }
                        return t;
                    },
                    debug: function() {
                        if (Ss <= -1) {
                            var e = this.arguments2String(arguments);
                            _s.debug(e);
                        }
                    },
                    log: function() {
                        if (Ss <= 0) {
                            var e = this.arguments2String(arguments);
                            _s.log(e);
                        }
                    },
                    info: function() {
                        if (Ss <= 1) {
                            var e = this.arguments2String(arguments);
                            _s.info(e);
                        }
                    },
                    warn: function() {
                        if (Ss <= 2) {
                            var e = this.arguments2String(arguments);
                            _s.warn(e);
                        }
                    },
                    error: function() {
                        if (Ss <= 3) {
                            var e = this.arguments2String(arguments);
                            _s.error(e);
                        }
                    },
                    time: function(e) {
                        Is.set(e, Gs.now());
                    },
                    timeEnd: function(e) {
                        if (Is.has(e)) {
                            var t = Gs.now() - Is.get(e);
                            return Is.delete(e), t;
                        }
                        return _s.warn("未找到对应label: ".concat(e, ", 请在调用 logger.timeEnd 前，调用 logger.time")), 
                        0;
                    },
                    setLevel: function(e) {
                        e < 4 && _s.log(Ms() + "set level from " + Ss + " to " + e), Ss = e;
                    }
                }, Ts = function(e) {
                    return "file" === Rs(e);
                }, Es = function(e) {
                    return null !== e && ("number" == typeof e && !isNaN(e - 0) || "object" === On(e) && e.constructor === Number);
                }, As = function(e) {
                    return "string" == typeof e;
                }, bs = function(e) {
                    return null !== e && "object" === On(e);
                }, xs = function(e) {
                    if ("object" !== On(e) || null === e) return !1;
                    var t = Object.getPrototypeOf(e);
                    if (null === t) return !0;
                    for (var n = t; null !== Object.getPrototypeOf(n); ) n = Object.getPrototypeOf(n);
                    return t === n;
                }, ws = function(e) {
                    return "function" == typeof Array.isArray ? Array.isArray(e) : "array" === Rs(e);
                }, Ds = function(e) {
                    return void 0 === e;
                }, ks = function(e) {
                    return ws(e) || bs(e);
                }, Os = function(e) {
                    return "function" == typeof e;
                }, Ls = function(e) {
                    return e instanceof Error;
                }, Rs = function(e) {
                    return Object.prototype.toString.call(e).match(/^\[object (.*)\]$/)[1].toLowerCase();
                }, Ps = function(e) {
                    if ("string" != typeof e) return !1;
                    var t = e[0];
                    return !/[^a-zA-Z0-9]/.test(t);
                }, Ns = 0;
                Date.now || (Date.now = function() {
                    return new Date().getTime();
                });
                var Gs = {
                    now: function() {
                        0 === Ns && (Ns = Date.now() - 1);
                        var e = Date.now() - Ns;
                        return e > 4294967295 ? (Ns += 4294967295, Date.now() - Ns) : e;
                    },
                    utc: function() {
                        return Math.round(Date.now() / 1e3);
                    }
                }, Fs = function e(t, n, r, o) {
                    if (!ks(t) || !ks(n)) return 0;
                    for (var i, a = 0, s = Object.keys(n), c = 0, u = s.length; c < u; c++) if (i = s[c], 
                    !(Ds(n[i]) || r && r.includes(i))) if (ks(t[i]) && ks(n[i])) a += e(t[i], n[i], r, o); else {
                        if (o && o.includes(n[i])) continue;
                        t[i] !== n[i] && (t[i] = n[i], a += 1);
                    }
                    return a;
                }, Us = function(e) {
                    return JSON.stringify(e, [ "message", "code" ]);
                }, qs = function() {
                    var e = new Date(), t = e.toISOString(), n = e.getTimezoneOffset() / 60, r = "";
                    return r = n < 0 ? n > -10 ? "+0" + Math.abs(100 * n) : "+" + Math.abs(100 * n) : n >= 10 ? "-" + 100 * n : "-0" + 100 * n, 
                    t.replace("Z", r);
                }, js = function(e) {
                    if (0 === e.length) return 0;
                    for (var t = 0, n = 0, r = "undefined" != typeof document && void 0 !== document.characterSet ? document.characterSet : "UTF-8"; void 0 !== e[t]; ) n += e[t++].charCodeAt[t] <= 255 ? 1 : !1 === r ? 3 : 2;
                    return n;
                }, $s = function(e) {
                    var t = e || 99999999;
                    return Math.round(Math.random() * t);
                }, Vs = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ", Bs = Vs.length, Hs = function(e, t) {
                    for (var n in e) if (e[n] === t) return !0;
                    return !1;
                }, Ks = {}, zs = function() {
                    if (Ka) return "https:";
                    var e = window.location.protocol;
                    return [ "http:", "https:" ].indexOf(e) < 0 && (e = "http:"), e;
                }, Ws = function(e) {
                    return -1 === e.indexOf("http://") || -1 === e.indexOf("https://") ? "https://" + e : e.replace(/https|http/, "https");
                };
                function Ys(e, t) {
                    ws(e) && ws(t) ? t.forEach(function(t) {
                        var n = t.key, r = t.value, o = e.find(function(e) {
                            return e.key === n;
                        });
                        o ? o.value = r : e.push({
                            key: n,
                            value: r
                        });
                    }) : Cs.warn("updateCustomField target 或 source 不是数组，忽略此次更新。");
                }
                var Js = function(e) {
                    return e === Tn.GRP_WORK;
                }, Xs = function(e) {
                    return e === Tn.GRP_PUBLIC;
                }, Qs = function(e) {
                    return e === Tn.GRP_MEETING;
                }, Zs = function(e) {
                    return e === Tn.GRP_AVCHATROOM;
                }, ec = function(e) {
                    return As(e) && e === Tn.CONV_SYSTEM;
                };
                function tc(e, t) {
                    var n = {};
                    return Object.keys(e).forEach(function(r) {
                        n[r] = t(e[r], r);
                    }), n;
                }
                function nc() {
                    function e() {
                        return (65536 * (1 + Math.random()) | 0).toString(16).substring(1);
                    }
                    return "".concat(e() + e()).concat(e()).concat(e()).concat(e()).concat(e()).concat(e()).concat(e());
                }
                function rc(e) {
                    var t = e.originUrl, n = void 0 === t ? void 0 : t, r = e.originWidth, o = e.originHeight, i = e.min, a = void 0 === i ? 198 : i, s = parseInt(r), c = parseInt(o), u = {
                        url: void 0,
                        width: 0,
                        height: 0
                    };
                    return (s <= c ? s : c) <= a ? (u.url = n, u.width = s, u.height = c) : (c <= s ? (u.width = Math.ceil(s * a / c), 
                    u.height = a) : (u.width = a, u.height = Math.ceil(c * a / s)), u.url = "".concat(n, 198 === a ? "?imageView2/3/w/198/h/198" : "?imageView2/3/w/720/h/720")), 
                    Ds(n) ? Hn(u, [ "url" ]) : u;
                }
                function oc(e) {
                    var t = e[2];
                    e[2] = e[1], e[1] = t;
                    for (var n = 0; n < e.length; n++) e[n].setSizeType(n + 1), e[n].setType(n);
                }
                var ic = Object.prototype.hasOwnProperty;
                function ac(e) {
                    if (null == e) return !0;
                    if ("boolean" == typeof e) return !1;
                    if ("number" == typeof e) return 0 === e;
                    if ("string" == typeof e) return 0 === e.length;
                    if ("function" == typeof e) return 0 === e.length;
                    if (Array.isArray(e)) return 0 === e.length;
                    if (e instanceof Error) return "" === e.message;
                    if (xs(e)) {
                        for (var t in e) if (ic.call(e, t)) return !1;
                        return !0;
                    }
                    return !("map" !== Rs(e) && !function(e) {
                        return "set" === Rs(e);
                    }(e) && !Ts(e)) && 0 === e.size;
                }
                function sc(e, t, n) {
                    if (void 0 === t) return !0;
                    var r = !0;
                    if ("object" === cr(t).toLowerCase()) Object.keys(t).forEach(function(o) {
                        var i = 1 === e.length ? e[0][o] : void 0;
                        r = !!cc(i, t[o], n, o) && r;
                    }); else if ("array" === cr(t).toLowerCase()) for (var o = 0; o < t.length; o++) r = !!cc(e[o], t[o], n, t[o].name) && r;
                    if (r) return r;
                    throw new Error("Params validate failed.");
                }
                function cc(e, t, n, r) {
                    if (void 0 === t) return !0;
                    var o = !0;
                    return t.required && ac(e) && (_s.error("TIM [".concat(n, '] Missing required params: "').concat(r, '".')), 
                    o = !1), ac(e) || cr(e).toLowerCase() === t.type.toLowerCase() || (_s.error("TIM [".concat(n, '] Invalid params: type check failed for "').concat(r, '".Expected ').concat(t.type, ".")), 
                    o = !1), t.validator && !t.validator(e) && (_s.error("TIM [".concat(n, "] Invalid params: custom validator check failed for params.")), 
                    o = !1), o;
                }
                var uc = {
                    f: je
                }, lc = w.f, pc = at.forEach, hc = H("hidden"), fc = je("toPrimitive"), dc = te.set, gc = te.getterFor("Symbol"), mc = Object.prototype, vc = o.Symbol, yc = ie("JSON", "stringify"), _c = A.f, Sc = w.f, Ic = fo.f, Mc = u.f, Cc = q("symbols"), Tc = q("op-symbols"), Ec = q("string-to-symbol-registry"), Ac = q("symbol-to-string-registry"), bc = q("wks"), xc = o.QObject, wc = !xc || !xc.prototype || !xc.prototype.findChild, Dc = a && i(function() {
                    return 7 != Vt(Sc({}, "a", {
                        get: function() {
                            return Sc(this, "a", {
                                value: 7
                            }).a;
                        }
                    })).a;
                }) ? function(e, t, n) {
                    var r = _c(mc, t);
                    r && delete mc[t], Sc(e, t, n), r && e !== mc && Sc(mc, t, r);
                } : Sc, kc = function(e, t) {
                    var n = Cc[e] = Vt(vc.prototype);
                    return dc(n, {
                        type: "Symbol",
                        tag: e,
                        description: t
                    }), a || (n.description = t), n;
                }, Oc = Ge ? function(e) {
                    return "symbol" == typeof e;
                } : function(e) {
                    return Object(e) instanceof vc;
                }, Lc = function e(t, n, r) {
                    t === mc && e(Tc, n, r), b(t);
                    var o = y(n, !0);
                    return b(r), S(Cc, o) ? (r.enumerable ? (S(t, hc) && t[hc][o] && (t[hc][o] = !1), 
                    r = Vt(r, {
                        enumerable: l(0, !1)
                    })) : (S(t, hc) || Sc(t, hc, l(1, {})), t[hc][o] = !0), Dc(t, o, r)) : Sc(t, o, r);
                }, Rc = function(e, t) {
                    b(e);
                    var n = m(t), r = Nt(n).concat(Fc(n));
                    return pc(r, function(t) {
                        a && !Pc.call(n, t) || Lc(e, t, n[t]);
                    }), e;
                }, Pc = function(e) {
                    var t = y(e, !0), n = Mc.call(this, t);
                    return !(this === mc && S(Cc, t) && !S(Tc, t)) && (!(n || !S(this, t) || !S(Cc, t) || S(this, hc) && this[hc][t]) || n);
                }, Nc = function(e, t) {
                    var n = m(e), r = y(t, !0);
                    if (n !== mc || !S(Cc, r) || S(Tc, r)) {
                        var o = _c(n, r);
                        return !o || !S(Cc, r) || S(n, hc) && n[hc][r] || (o.enumerable = !0), o;
                    }
                }, Gc = function(e) {
                    var t = Ic(m(e)), n = [];
                    return pc(t, function(e) {
                        S(Cc, e) || S(K, e) || n.push(e);
                    }), n;
                }, Fc = function(e) {
                    var t = e === mc, n = Ic(t ? Tc : m(e)), r = [];
                    return pc(n, function(e) {
                        !S(Cc, e) || t && !S(mc, e) || r.push(Cc[e]);
                    }), r;
                };
                if (Ne || (ne((vc = function() {
                    if (this instanceof vc) throw TypeError("Symbol is not a constructor");
                    var e = arguments.length && void 0 !== arguments[0] ? String(arguments[0]) : void 0, t = V(e), n = function e(n) {
                        this === mc && e.call(Tc, n), S(this, hc) && S(this[hc], t) && (this[hc][t] = !1), 
                        Dc(this, t, l(1, n));
                    };
                    return a && wc && Dc(mc, t, {
                        configurable: !0,
                        set: n
                    }), kc(t, e);
                }).prototype, "toString", function() {
                    return gc(this).tag;
                }), ne(vc, "withoutSetter", function(e) {
                    return kc(V(e), e);
                }), u.f = Pc, w.f = Lc, A.f = Nc, Se.f = fo.f = Gc, Ie.f = Fc, uc.f = function(e) {
                    return kc(je(e), e);
                }, a && (Sc(vc.prototype, "description", {
                    configurable: !0,
                    get: function() {
                        return gc(this).description;
                    }
                }), ne(mc, "propertyIsEnumerable", Pc, {
                    unsafe: !0
                }))), Oe({
                    global: !0,
                    wrap: !0,
                    forced: !Ne,
                    sham: !Ne
                }, {
                    Symbol: vc
                }), pc(Nt(bc), function(e) {
                    !function(e) {
                        var t = re.Symbol || (re.Symbol = {});
                        S(t, e) || lc(t, e, {
                            value: uc.f(e)
                        });
                    }(e);
                }), Oe({
                    target: "Symbol",
                    stat: !0,
                    forced: !Ne
                }, {
                    for: function(e) {
                        var t = String(e);
                        if (S(Ec, t)) return Ec[t];
                        var n = vc(t);
                        return Ec[t] = n, Ac[n] = t, n;
                    },
                    keyFor: function(e) {
                        if (!Oc(e)) throw TypeError(e + " is not a symbol");
                        if (S(Ac, e)) return Ac[e];
                    },
                    useSetter: function() {
                        wc = !0;
                    },
                    useSimple: function() {
                        wc = !1;
                    }
                }), Oe({
                    target: "Object",
                    stat: !0,
                    forced: !Ne,
                    sham: !a
                }, {
                    create: function(e, t) {
                        return void 0 === t ? Vt(e) : Rc(Vt(e), t);
                    },
                    defineProperty: Lc,
                    defineProperties: Rc,
                    getOwnPropertyDescriptor: Nc
                }), Oe({
                    target: "Object",
                    stat: !0,
                    forced: !Ne
                }, {
                    getOwnPropertyNames: Gc,
                    getOwnPropertySymbols: Fc
                }), Oe({
                    target: "Object",
                    stat: !0,
                    forced: i(function() {
                        Ie.f(1);
                    })
                }, {
                    getOwnPropertySymbols: function(e) {
                        return Ie.f(Re(e));
                    }
                }), yc) {
                    var Uc = !Ne || i(function() {
                        var e = vc();
                        return "[null]" != yc([ e ]) || "{}" != yc({
                            a: e
                        }) || "{}" != yc(Object(e));
                    });
                    Oe({
                        target: "JSON",
                        stat: !0,
                        forced: Uc
                    }, {
                        stringify: function(e, t, n) {
                            for (var r, o = [ e ], i = 1; arguments.length > i; ) o.push(arguments[i++]);
                            if (r = t, (v(t) || void 0 !== e) && !Oc(e)) return Le(t) || (t = function(e, t) {
                                if ("function" == typeof r && (t = r.call(this, e, t)), !Oc(t)) return t;
                            }), o[1] = t, yc.apply(null, o);
                        }
                    });
                }
                vc.prototype[fc] || D(vc.prototype, fc, vc.prototype.valueOf), an(vc, "Symbol"), 
                K[hc] = !0;
                var qc = w.f, jc = o.Symbol;
                if (a && "function" == typeof jc && (!("description" in jc.prototype) || void 0 !== jc().description)) {
                    var $c = {}, Vc = function e() {
                        var t = arguments.length < 1 || void 0 === arguments[0] ? void 0 : String(arguments[0]), n = this instanceof e ? new jc(t) : void 0 === t ? jc() : jc(t);
                        return "" === t && ($c[n] = !0), n;
                    };
                    Ce(Vc, jc);
                    var Bc = Vc.prototype = jc.prototype;
                    Bc.constructor = Vc;
                    var Hc = Bc.toString, Kc = "Symbol(test)" == String(jc("test")), zc = /^Symbol\((.*)\)[^)]+$/;
                    qc(Bc, "description", {
                        configurable: !0,
                        get: function() {
                            var e = v(this) ? this.valueOf() : this, t = Hc.call(e);
                            if (S($c, e)) return "";
                            var n = Kc ? t.slice(7, -1) : t.replace(zc, "$1");
                            return "" === n ? void 0 : n;
                        }
                    }), Oe({
                        global: !0,
                        forced: !0
                    }, {
                        Symbol: Vc
                    });
                }
                var Wc = u.f, Yc = function(e) {
                    return function(t) {
                        for (var n, r = m(t), o = Nt(r), i = o.length, s = 0, c = []; i > s; ) n = o[s++], 
                        a && !Wc.call(r, n) || c.push(e ? [ n, r[n] ] : r[n]);
                        return c;
                    };
                }, Jc = {
                    entries: Yc(!0),
                    values: Yc(!1)
                }.values;
                Oe({
                    target: "Object",
                    stat: !0
                }, {
                    values: function(e) {
                        return Jc(e);
                    }
                });
                var Xc = {
                    SUCCESS: "JoinedSuccess",
                    WAIT_APPROVAL: "WaitAdminApproval"
                }, Qc = {
                    SUCCESS: 0
                }, Zc = {
                    IS_LOGIN: 1,
                    IS_NOT_LOGIN: 0
                }, eu = {
                    UNSEND: "unSend",
                    SUCCESS: "success",
                    FAIL: "fail"
                }, tu = {
                    NOT_START: "notStart",
                    PENDING: "pengding",
                    RESOLVED: "resolved",
                    REJECTED: "rejected"
                }, nu = function() {
                    function e(t) {
                        Ln(this, e), this.type = Tn.MSG_TEXT, this.content = {
                            text: t.text || ""
                        };
                    }
                    return Pn(e, [ {
                        key: "setText",
                        value: function(e) {
                            this.content.text = e;
                        }
                    }, {
                        key: "sendable",
                        value: function() {
                            return 0 !== this.content.text.length;
                        }
                    } ]), e;
                }(), ru = Object.assign, ou = Object.defineProperty, iu = !ru || i(function() {
                    if (a && 1 !== ru({
                        b: 1
                    }, ru(ou({}, "a", {
                        enumerable: !0,
                        get: function() {
                            ou(this, "b", {
                                value: 3,
                                enumerable: !1
                            });
                        }
                    }), {
                        b: 2
                    })).b) return !0;
                    var e = {}, t = {}, n = Symbol();
                    return e[n] = 7, "abcdefghijklmnopqrst".split("").forEach(function(e) {
                        t[e] = e;
                    }), 7 != ru({}, e)[n] || "abcdefghijklmnopqrst" != Nt(ru({}, t)).join("");
                }) ? function(e, t) {
                    for (var n = Re(e), r = arguments.length, o = 1, i = Ie.f, s = u.f; r > o; ) for (var c, l = d(arguments[o++]), p = i ? Nt(l).concat(i(l)) : Nt(l), h = p.length, f = 0; h > f; ) c = p[f++], 
                    a && !s.call(l, c) || (n[c] = l[c]);
                    return n;
                } : ru;
                Oe({
                    target: "Object",
                    stat: !0,
                    forced: Object.assign !== iu
                }, {
                    assign: iu
                });
                var au = je("iterator"), su = !i(function() {
                    var e = new URL("b?a=1&b=2&c=3", "http://a"), t = e.searchParams, n = "";
                    return e.pathname = "c%20d", t.forEach(function(e, r) {
                        t.delete("b"), n += r + e;
                    }), !t.sort || "http://a/c%20d?a=1&c=3" !== e.href || "3" !== t.get("c") || "a=1" !== String(new URLSearchParams("?a=1")) || !t[au] || "a" !== new URL("https://a@b").username || "b" !== new URLSearchParams(new URLSearchParams("a=b")).get("a") || "xn--e1aybc" !== new URL("http://тест").host || "#%D0%B1" !== new URL("http://a#б").hash || "a1c3" !== n || "x" !== new URL("http://x", void 0).host;
                }), cu = /[^\0-\u007E]/, uu = /[.\u3002\uFF0E\uFF61]/g, lu = "Overflow: input needs wider integers to process", pu = Math.floor, hu = String.fromCharCode, fu = function(e) {
                    return e + 22 + 75 * (e < 26);
                }, du = function(e, t, n) {
                    var r = 0;
                    for (e = n ? pu(e / 700) : e >> 1, e += pu(e / t); e > 455; r += 36) e = pu(e / 35);
                    return pu(r + 36 * e / (e + 38));
                }, gu = function(e) {
                    var t, n, r = [], o = (e = function(e) {
                        for (var t = [], n = 0, r = e.length; n < r; ) {
                            var o = e.charCodeAt(n++);
                            if (o >= 55296 && o <= 56319 && n < r) {
                                var i = e.charCodeAt(n++);
                                56320 == (64512 & i) ? t.push(((1023 & o) << 10) + (1023 & i) + 65536) : (t.push(o), 
                                n--);
                            } else t.push(o);
                        }
                        return t;
                    }(e)).length, i = 128, a = 0, s = 72;
                    for (t = 0; t < e.length; t++) (n = e[t]) < 128 && r.push(hu(n));
                    var c = r.length, u = c;
                    for (c && r.push("-"); u < o; ) {
                        var l = 2147483647;
                        for (t = 0; t < e.length; t++) (n = e[t]) >= i && n < l && (l = n);
                        var p = u + 1;
                        if (l - i > pu((2147483647 - a) / p)) throw RangeError(lu);
                        for (a += (l - i) * p, i = l, t = 0; t < e.length; t++) {
                            if ((n = e[t]) < i && ++a > 2147483647) throw RangeError(lu);
                            if (n == i) {
                                for (var h = a, f = 36; ;f += 36) {
                                    var d = f <= s ? 1 : f >= s + 26 ? 26 : f - s;
                                    if (h < d) break;
                                    var g = h - d, m = 36 - d;
                                    r.push(hu(fu(d + g % m))), h = pu(g / m);
                                }
                                r.push(hu(fu(h))), s = du(a, p, u == c), a = 0, ++u;
                            }
                        }
                        ++a, ++i;
                    }
                    return r.join("");
                }, mu = function(e) {
                    var t = bt(e);
                    if ("function" != typeof t) throw TypeError(String(e) + " is not iterable");
                    return b(t.call(e));
                }, vu = ie("fetch"), yu = ie("Headers"), _u = je("iterator"), Su = te.set, Iu = te.getterFor("URLSearchParams"), Mu = te.getterFor("URLSearchParamsIterator"), Cu = /\+/g, Tu = Array(4), Eu = function(e) {
                    return Tu[e - 1] || (Tu[e - 1] = RegExp("((?:%[\\da-f]{2}){" + e + "})", "gi"));
                }, Au = function(e) {
                    try {
                        return decodeURIComponent(e);
                    } catch (f_) {
                        return e;
                    }
                }, bu = function(e) {
                    var t = e.replace(Cu, " "), n = 4;
                    try {
                        return decodeURIComponent(t);
                    } catch (f_) {
                        for (;n; ) t = t.replace(Eu(n--), Au);
                        return t;
                    }
                }, xu = /[!'()~]|%20/g, wu = {
                    "!": "%21",
                    "'": "%27",
                    "(": "%28",
                    ")": "%29",
                    "~": "%7E",
                    "%20": "+"
                }, Du = function(e) {
                    return wu[e];
                }, ku = function(e) {
                    return encodeURIComponent(e).replace(xu, Du);
                }, Ou = function(e, t) {
                    if (t) for (var n, r, o = t.split("&"), i = 0; i < o.length; ) (n = o[i++]).length && (r = n.split("="), 
                    e.push({
                        key: bu(r.shift()),
                        value: bu(r.join("="))
                    }));
                }, Lu = function(e) {
                    this.entries.length = 0, Ou(this.entries, e);
                }, Ru = function(e, t) {
                    if (e < t) throw TypeError("Not enough arguments");
                }, Pu = un(function(e, t) {
                    Su(this, {
                        type: "URLSearchParamsIterator",
                        iterator: mu(Iu(e).entries),
                        kind: t
                    });
                }, "Iterator", function() {
                    var e = Mu(this), t = e.kind, n = e.iterator.next(), r = n.value;
                    return n.done || (n.value = "keys" === t ? r.key : "values" === t ? r.value : [ r.key, r.value ]), 
                    n;
                }), Nu = function e() {
                    Do(this, e, "URLSearchParams");
                    var t, n, r, o, i, a, s, c, u, l = arguments.length > 0 ? arguments[0] : void 0, p = this, h = [];
                    if (Su(p, {
                        type: "URLSearchParams",
                        entries: h,
                        updateURL: function() {},
                        updateSearchParams: Lu
                    }), void 0 !== l) if (v(l)) if ("function" == typeof (t = bt(l))) for (r = (n = t.call(l)).next; !(o = r.call(n)).done; ) {
                        if ((s = (a = (i = mu(b(o.value))).next).call(i)).done || (c = a.call(i)).done || !a.call(i).done) throw TypeError("Expected sequence with length 2");
                        h.push({
                            key: s.value + "",
                            value: c.value + ""
                        });
                    } else for (u in l) S(l, u) && h.push({
                        key: u,
                        value: l[u] + ""
                    }); else Ou(h, "string" == typeof l ? "?" === l.charAt(0) ? l.slice(1) : l : l + "");
                }, Gu = Nu.prototype;
                bo(Gu, {
                    append: function(e, t) {
                        Ru(arguments.length, 2);
                        var n = Iu(this);
                        n.entries.push({
                            key: e + "",
                            value: t + ""
                        }), n.updateURL();
                    },
                    delete: function(e) {
                        Ru(arguments.length, 1);
                        for (var t = Iu(this), n = t.entries, r = e + "", o = 0; o < n.length; ) n[o].key === r ? n.splice(o, 1) : o++;
                        t.updateURL();
                    },
                    get: function(e) {
                        Ru(arguments.length, 1);
                        for (var t = Iu(this).entries, n = e + "", r = 0; r < t.length; r++) if (t[r].key === n) return t[r].value;
                        return null;
                    },
                    getAll: function(e) {
                        Ru(arguments.length, 1);
                        for (var t = Iu(this).entries, n = e + "", r = [], o = 0; o < t.length; o++) t[o].key === n && r.push(t[o].value);
                        return r;
                    },
                    has: function(e) {
                        Ru(arguments.length, 1);
                        for (var t = Iu(this).entries, n = e + "", r = 0; r < t.length; ) if (t[r++].key === n) return !0;
                        return !1;
                    },
                    set: function(e, t) {
                        Ru(arguments.length, 1);
                        for (var n, r = Iu(this), o = r.entries, i = !1, a = e + "", s = t + "", c = 0; c < o.length; c++) (n = o[c]).key === a && (i ? o.splice(c--, 1) : (i = !0, 
                        n.value = s));
                        i || o.push({
                            key: a,
                            value: s
                        }), r.updateURL();
                    },
                    sort: function() {
                        var e, t, n, r = Iu(this), o = r.entries, i = o.slice();
                        for (o.length = 0, n = 0; n < i.length; n++) {
                            for (e = i[n], t = 0; t < n; t++) if (o[t].key > e.key) {
                                o.splice(t, 0, e);
                                break;
                            }
                            t === n && o.push(e);
                        }
                        r.updateURL();
                    },
                    forEach: function(e) {
                        for (var t, n = Iu(this).entries, r = rt(e, arguments.length > 1 ? arguments[1] : void 0, 3), o = 0; o < n.length; ) r((t = n[o++]).value, t.key, this);
                    },
                    keys: function() {
                        return new Pu(this, "keys");
                    },
                    values: function() {
                        return new Pu(this, "values");
                    },
                    entries: function() {
                        return new Pu(this, "entries");
                    }
                }, {
                    enumerable: !0
                }), ne(Gu, _u, Gu.entries), ne(Gu, "toString", function() {
                    for (var e, t = Iu(this).entries, n = [], r = 0; r < t.length; ) e = t[r++], n.push(ku(e.key) + "=" + ku(e.value));
                    return n.join("&");
                }, {
                    enumerable: !0
                }), an(Nu, "URLSearchParams"), Oe({
                    global: !0,
                    forced: !su
                }, {
                    URLSearchParams: Nu
                }), su || "function" != typeof vu || "function" != typeof yu || Oe({
                    global: !0,
                    enumerable: !0,
                    forced: !0
                }, {
                    fetch: function(e) {
                        var t, n, r, o = [ e ];
                        return arguments.length > 1 && (v(t = arguments[1]) && (n = t.body, "URLSearchParams" === Et(n) && ((r = t.headers ? new yu(t.headers) : new yu()).has("content-type") || r.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"), 
                        t = Vt(t, {
                            body: l(0, String(n)),
                            headers: l(0, r)
                        }))), o.push(t)), vu.apply(this, o);
                    }
                });
                var Fu, Uu = {
                    URLSearchParams: Nu,
                    getState: Iu
                }, qu = Yt.codeAt, ju = o.URL, $u = Uu.URLSearchParams, Vu = Uu.getState, Bu = te.set, Hu = te.getterFor("URL"), Ku = Math.floor, zu = Math.pow, Wu = /[A-Za-z]/, Yu = /[\d+-.A-Za-z]/, Ju = /\d/, Xu = /^(0x|0X)/, Qu = /^[0-7]+$/, Zu = /^\d+$/, el = /^[\dA-Fa-f]+$/, tl = /[\u0000\u0009\u000A\u000D #%/:?@[\\]]/, nl = /[\u0000\u0009\u000A\u000D #/:?@[\\]]/, rl = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g, ol = /[\u0009\u000A\u000D]/g, il = function(e, t) {
                    var n, r, o;
                    if ("[" == t.charAt(0)) {
                        if ("]" != t.charAt(t.length - 1)) return "Invalid host";
                        if (!(n = sl(t.slice(1, -1)))) return "Invalid host";
                        e.host = n;
                    } else if (gl(e)) {
                        if (t = function(e) {
                            var t, n, r = [], o = e.toLowerCase().replace(uu, ".").split(".");
                            for (t = 0; t < o.length; t++) n = o[t], r.push(cu.test(n) ? "xn--" + gu(n) : n);
                            return r.join(".");
                        }(t), tl.test(t)) return "Invalid host";
                        if (null === (n = al(t))) return "Invalid host";
                        e.host = n;
                    } else {
                        if (nl.test(t)) return "Invalid host";
                        for (n = "", r = xt(t), o = 0; o < r.length; o++) n += fl(r[o], ul);
                        e.host = n;
                    }
                }, al = function(e) {
                    var t, n, r, o, i, a, s, c = e.split(".");
                    if (c.length && "" == c[c.length - 1] && c.pop(), (t = c.length) > 4) return e;
                    for (n = [], r = 0; r < t; r++) {
                        if ("" == (o = c[r])) return e;
                        if (i = 10, o.length > 1 && "0" == o.charAt(0) && (i = Xu.test(o) ? 16 : 8, o = o.slice(8 == i ? 1 : 2)), 
                        "" === o) a = 0; else {
                            if (!(10 == i ? Zu : 8 == i ? Qu : el).test(o)) return e;
                            a = parseInt(o, i);
                        }
                        n.push(a);
                    }
                    for (r = 0; r < t; r++) if (a = n[r], r == t - 1) {
                        if (a >= zu(256, 5 - t)) return null;
                    } else if (a > 255) return null;
                    for (s = n.pop(), r = 0; r < n.length; r++) s += n[r] * zu(256, 3 - r);
                    return s;
                }, sl = function(e) {
                    var t, n, r, o, i, a, s, c = [ 0, 0, 0, 0, 0, 0, 0, 0 ], u = 0, l = null, p = 0, h = function() {
                        return e.charAt(p);
                    };
                    if (":" == h()) {
                        if (":" != e.charAt(1)) return;
                        p += 2, l = ++u;
                    }
                    for (;h(); ) {
                        if (8 == u) return;
                        if (":" != h()) {
                            for (t = n = 0; n < 4 && el.test(h()); ) t = 16 * t + parseInt(h(), 16), p++, n++;
                            if ("." == h()) {
                                if (0 == n) return;
                                if (p -= n, u > 6) return;
                                for (r = 0; h(); ) {
                                    if (o = null, r > 0) {
                                        if (!("." == h() && r < 4)) return;
                                        p++;
                                    }
                                    if (!Ju.test(h())) return;
                                    for (;Ju.test(h()); ) {
                                        if (i = parseInt(h(), 10), null === o) o = i; else {
                                            if (0 == o) return;
                                            o = 10 * o + i;
                                        }
                                        if (o > 255) return;
                                        p++;
                                    }
                                    c[u] = 256 * c[u] + o, 2 != ++r && 4 != r || u++;
                                }
                                if (4 != r) return;
                                break;
                            }
                            if (":" == h()) {
                                if (p++, !h()) return;
                            } else if (h()) return;
                            c[u++] = t;
                        } else {
                            if (null !== l) return;
                            p++, l = ++u;
                        }
                    }
                    if (null !== l) for (a = u - l, u = 7; 0 != u && a > 0; ) s = c[u], c[u--] = c[l + a - 1], 
                    c[l + --a] = s; else if (8 != u) return;
                    return c;
                }, cl = function(e) {
                    var t, n, r, o;
                    if ("number" == typeof e) {
                        for (t = [], n = 0; n < 4; n++) t.unshift(e % 256), e = Ku(e / 256);
                        return t.join(".");
                    }
                    if ("object" == typeof e) {
                        for (t = "", r = function(e) {
                            for (var t = null, n = 1, r = null, o = 0, i = 0; i < 8; i++) 0 !== e[i] ? (o > n && (t = r, 
                            n = o), r = null, o = 0) : (null === r && (r = i), ++o);
                            return o > n && (t = r, n = o), t;
                        }(e), n = 0; n < 8; n++) o && 0 === e[n] || (o && (o = !1), r === n ? (t += n ? ":" : "::", 
                        o = !0) : (t += e[n].toString(16), n < 7 && (t += ":")));
                        return "[" + t + "]";
                    }
                    return e;
                }, ul = {}, ll = iu({}, ul, {
                    " ": 1,
                    '"': 1,
                    "<": 1,
                    ">": 1,
                    "`": 1
                }), pl = iu({}, ll, {
                    "#": 1,
                    "?": 1,
                    "{": 1,
                    "}": 1
                }), hl = iu({}, pl, {
                    "/": 1,
                    ":": 1,
                    ";": 1,
                    "=": 1,
                    "@": 1,
                    "[": 1,
                    "\\": 1,
                    "]": 1,
                    "^": 1,
                    "|": 1
                }), fl = function(e, t) {
                    var n = qu(e, 0);
                    return n > 32 && n < 127 && !S(t, e) ? e : encodeURIComponent(e);
                }, dl = {
                    ftp: 21,
                    file: null,
                    http: 80,
                    https: 443,
                    ws: 80,
                    wss: 443
                }, gl = function(e) {
                    return S(dl, e.scheme);
                }, ml = function(e) {
                    return "" != e.username || "" != e.password;
                }, vl = function(e) {
                    return !e.host || e.cannotBeABaseURL || "file" == e.scheme;
                }, yl = function(e, t) {
                    var n;
                    return 2 == e.length && Wu.test(e.charAt(0)) && (":" == (n = e.charAt(1)) || !t && "|" == n);
                }, _l = function(e) {
                    var t;
                    return e.length > 1 && yl(e.slice(0, 2)) && (2 == e.length || "/" === (t = e.charAt(2)) || "\\" === t || "?" === t || "#" === t);
                }, Sl = function(e) {
                    var t = e.path, n = t.length;
                    !n || "file" == e.scheme && 1 == n && yl(t[0], !0) || t.pop();
                }, Il = function(e) {
                    return "." === e || "%2e" === e.toLowerCase();
                }, Ml = {}, Cl = {}, Tl = {}, El = {}, Al = {}, bl = {}, xl = {}, wl = {}, Dl = {}, kl = {}, Ol = {}, Ll = {}, Rl = {}, Pl = {}, Nl = {}, Gl = {}, Fl = {}, Ul = {}, ql = {}, jl = {}, $l = {}, Vl = function(e, t, n, r) {
                    var o, i, a, s, c, u = n || Ml, l = 0, p = "", h = !1, f = !1, d = !1;
                    for (n || (e.scheme = "", e.username = "", e.password = "", e.host = null, e.port = null, 
                    e.path = [], e.query = null, e.fragment = null, e.cannotBeABaseURL = !1, t = t.replace(rl, "")), 
                    t = t.replace(ol, ""), o = xt(t); l <= o.length; ) {
                        switch (i = o[l], u) {
                          case Ml:
                            if (!i || !Wu.test(i)) {
                                if (n) return "Invalid scheme";
                                u = Tl;
                                continue;
                            }
                            p += i.toLowerCase(), u = Cl;
                            break;

                          case Cl:
                            if (i && (Yu.test(i) || "+" == i || "-" == i || "." == i)) p += i.toLowerCase(); else {
                                if (":" != i) {
                                    if (n) return "Invalid scheme";
                                    p = "", u = Tl, l = 0;
                                    continue;
                                }
                                if (n && (gl(e) != S(dl, p) || "file" == p && (ml(e) || null !== e.port) || "file" == e.scheme && !e.host)) return;
                                if (e.scheme = p, n) return void (gl(e) && dl[e.scheme] == e.port && (e.port = null));
                                p = "", "file" == e.scheme ? u = Pl : gl(e) && r && r.scheme == e.scheme ? u = El : gl(e) ? u = wl : "/" == o[l + 1] ? (u = Al, 
                                l++) : (e.cannotBeABaseURL = !0, e.path.push(""), u = ql);
                            }
                            break;

                          case Tl:
                            if (!r || r.cannotBeABaseURL && "#" != i) return "Invalid scheme";
                            if (r.cannotBeABaseURL && "#" == i) {
                                e.scheme = r.scheme, e.path = r.path.slice(), e.query = r.query, e.fragment = "", 
                                e.cannotBeABaseURL = !0, u = $l;
                                break;
                            }
                            u = "file" == r.scheme ? Pl : bl;
                            continue;

                          case El:
                            if ("/" != i || "/" != o[l + 1]) {
                                u = bl;
                                continue;
                            }
                            u = Dl, l++;
                            break;

                          case Al:
                            if ("/" == i) {
                                u = kl;
                                break;
                            }
                            u = Ul;
                            continue;

                          case bl:
                            if (e.scheme = r.scheme, i == Fu) e.username = r.username, e.password = r.password, 
                            e.host = r.host, e.port = r.port, e.path = r.path.slice(), e.query = r.query; else if ("/" == i || "\\" == i && gl(e)) u = xl; else if ("?" == i) e.username = r.username, 
                            e.password = r.password, e.host = r.host, e.port = r.port, e.path = r.path.slice(), 
                            e.query = "", u = jl; else {
                                if ("#" != i) {
                                    e.username = r.username, e.password = r.password, e.host = r.host, e.port = r.port, 
                                    e.path = r.path.slice(), e.path.pop(), u = Ul;
                                    continue;
                                }
                                e.username = r.username, e.password = r.password, e.host = r.host, e.port = r.port, 
                                e.path = r.path.slice(), e.query = r.query, e.fragment = "", u = $l;
                            }
                            break;

                          case xl:
                            if (!gl(e) || "/" != i && "\\" != i) {
                                if ("/" != i) {
                                    e.username = r.username, e.password = r.password, e.host = r.host, e.port = r.port, 
                                    u = Ul;
                                    continue;
                                }
                                u = kl;
                            } else u = Dl;
                            break;

                          case wl:
                            if (u = Dl, "/" != i || "/" != p.charAt(l + 1)) continue;
                            l++;
                            break;

                          case Dl:
                            if ("/" != i && "\\" != i) {
                                u = kl;
                                continue;
                            }
                            break;

                          case kl:
                            if ("@" == i) {
                                h && (p = "%40" + p), h = !0, a = xt(p);
                                for (var g = 0; g < a.length; g++) {
                                    var m = a[g];
                                    if (":" != m || d) {
                                        var v = fl(m, hl);
                                        d ? e.password += v : e.username += v;
                                    } else d = !0;
                                }
                                p = "";
                            } else if (i == Fu || "/" == i || "?" == i || "#" == i || "\\" == i && gl(e)) {
                                if (h && "" == p) return "Invalid authority";
                                l -= xt(p).length + 1, p = "", u = Ol;
                            } else p += i;
                            break;

                          case Ol:
                          case Ll:
                            if (n && "file" == e.scheme) {
                                u = Gl;
                                continue;
                            }
                            if (":" != i || f) {
                                if (i == Fu || "/" == i || "?" == i || "#" == i || "\\" == i && gl(e)) {
                                    if (gl(e) && "" == p) return "Invalid host";
                                    if (n && "" == p && (ml(e) || null !== e.port)) return;
                                    if (s = il(e, p)) return s;
                                    if (p = "", u = Fl, n) return;
                                    continue;
                                }
                                "[" == i ? f = !0 : "]" == i && (f = !1), p += i;
                            } else {
                                if ("" == p) return "Invalid host";
                                if (s = il(e, p)) return s;
                                if (p = "", u = Rl, n == Ll) return;
                            }
                            break;

                          case Rl:
                            if (!Ju.test(i)) {
                                if (i == Fu || "/" == i || "?" == i || "#" == i || "\\" == i && gl(e) || n) {
                                    if ("" != p) {
                                        var y = parseInt(p, 10);
                                        if (y > 65535) return "Invalid port";
                                        e.port = gl(e) && y === dl[e.scheme] ? null : y, p = "";
                                    }
                                    if (n) return;
                                    u = Fl;
                                    continue;
                                }
                                return "Invalid port";
                            }
                            p += i;
                            break;

                          case Pl:
                            if (e.scheme = "file", "/" == i || "\\" == i) u = Nl; else {
                                if (!r || "file" != r.scheme) {
                                    u = Ul;
                                    continue;
                                }
                                if (i == Fu) e.host = r.host, e.path = r.path.slice(), e.query = r.query; else if ("?" == i) e.host = r.host, 
                                e.path = r.path.slice(), e.query = "", u = jl; else {
                                    if ("#" != i) {
                                        _l(o.slice(l).join("")) || (e.host = r.host, e.path = r.path.slice(), Sl(e)), u = Ul;
                                        continue;
                                    }
                                    e.host = r.host, e.path = r.path.slice(), e.query = r.query, e.fragment = "", u = $l;
                                }
                            }
                            break;

                          case Nl:
                            if ("/" == i || "\\" == i) {
                                u = Gl;
                                break;
                            }
                            r && "file" == r.scheme && !_l(o.slice(l).join("")) && (yl(r.path[0], !0) ? e.path.push(r.path[0]) : e.host = r.host), 
                            u = Ul;
                            continue;

                          case Gl:
                            if (i == Fu || "/" == i || "\\" == i || "?" == i || "#" == i) {
                                if (!n && yl(p)) u = Ul; else if ("" == p) {
                                    if (e.host = "", n) return;
                                    u = Fl;
                                } else {
                                    if (s = il(e, p)) return s;
                                    if ("localhost" == e.host && (e.host = ""), n) return;
                                    p = "", u = Fl;
                                }
                                continue;
                            }
                            p += i;
                            break;

                          case Fl:
                            if (gl(e)) {
                                if (u = Ul, "/" != i && "\\" != i) continue;
                            } else if (n || "?" != i) if (n || "#" != i) {
                                if (i != Fu && (u = Ul, "/" != i)) continue;
                            } else e.fragment = "", u = $l; else e.query = "", u = jl;
                            break;

                          case Ul:
                            if (i == Fu || "/" == i || "\\" == i && gl(e) || !n && ("?" == i || "#" == i)) {
                                if (".." === (c = (c = p).toLowerCase()) || "%2e." === c || ".%2e" === c || "%2e%2e" === c ? (Sl(e), 
                                "/" == i || "\\" == i && gl(e) || e.path.push("")) : Il(p) ? "/" == i || "\\" == i && gl(e) || e.path.push("") : ("file" == e.scheme && !e.path.length && yl(p) && (e.host && (e.host = ""), 
                                p = p.charAt(0) + ":"), e.path.push(p)), p = "", "file" == e.scheme && (i == Fu || "?" == i || "#" == i)) for (;e.path.length > 1 && "" === e.path[0]; ) e.path.shift();
                                "?" == i ? (e.query = "", u = jl) : "#" == i && (e.fragment = "", u = $l);
                            } else p += fl(i, pl);
                            break;

                          case ql:
                            "?" == i ? (e.query = "", u = jl) : "#" == i ? (e.fragment = "", u = $l) : i != Fu && (e.path[0] += fl(i, ul));
                            break;

                          case jl:
                            n || "#" != i ? i != Fu && ("'" == i && gl(e) ? e.query += "%27" : e.query += "#" == i ? "%23" : fl(i, ul)) : (e.fragment = "", 
                            u = $l);
                            break;

                          case $l:
                            i != Fu && (e.fragment += fl(i, ll));
                        }
                        l++;
                    }
                }, Bl = function e(t) {
                    var n, r, o = Do(this, e, "URL"), i = arguments.length > 1 ? arguments[1] : void 0, s = String(t), c = Bu(o, {
                        type: "URL"
                    });
                    if (void 0 !== i) if (i instanceof e) n = Hu(i); else if (r = Vl(n = {}, String(i))) throw TypeError(r);
                    if (r = Vl(c, s, null, n)) throw TypeError(r);
                    var u = c.searchParams = new $u(), l = Vu(u);
                    l.updateSearchParams(c.query), l.updateURL = function() {
                        c.query = String(u) || null;
                    }, a || (o.href = Kl.call(o), o.origin = zl.call(o), o.protocol = Wl.call(o), o.username = Yl.call(o), 
                    o.password = Jl.call(o), o.host = Xl.call(o), o.hostname = Ql.call(o), o.port = Zl.call(o), 
                    o.pathname = ep.call(o), o.search = tp.call(o), o.searchParams = np.call(o), o.hash = rp.call(o));
                }, Hl = Bl.prototype, Kl = function() {
                    var e = Hu(this), t = e.scheme, n = e.username, r = e.password, o = e.host, i = e.port, a = e.path, s = e.query, c = e.fragment, u = t + ":";
                    return null !== o ? (u += "//", ml(e) && (u += n + (r ? ":" + r : "") + "@"), u += cl(o), 
                    null !== i && (u += ":" + i)) : "file" == t && (u += "//"), u += e.cannotBeABaseURL ? a[0] : a.length ? "/" + a.join("/") : "", 
                    null !== s && (u += "?" + s), null !== c && (u += "#" + c), u;
                }, zl = function() {
                    var e = Hu(this), t = e.scheme, n = e.port;
                    if ("blob" == t) try {
                        return new URL(t.path[0]).origin;
                    } catch (f_) {
                        return "null";
                    }
                    return "file" != t && gl(e) ? t + "://" + cl(e.host) + (null !== n ? ":" + n : "") : "null";
                }, Wl = function() {
                    return Hu(this).scheme + ":";
                }, Yl = function() {
                    return Hu(this).username;
                }, Jl = function() {
                    return Hu(this).password;
                }, Xl = function() {
                    var e = Hu(this), t = e.host, n = e.port;
                    return null === t ? "" : null === n ? cl(t) : cl(t) + ":" + n;
                }, Ql = function() {
                    var e = Hu(this).host;
                    return null === e ? "" : cl(e);
                }, Zl = function() {
                    var e = Hu(this).port;
                    return null === e ? "" : String(e);
                }, ep = function() {
                    var e = Hu(this), t = e.path;
                    return e.cannotBeABaseURL ? t[0] : t.length ? "/" + t.join("/") : "";
                }, tp = function() {
                    var e = Hu(this).query;
                    return e ? "?" + e : "";
                }, np = function() {
                    return Hu(this).searchParams;
                }, rp = function() {
                    var e = Hu(this).fragment;
                    return e ? "#" + e : "";
                }, op = function(e, t) {
                    return {
                        get: e,
                        set: t,
                        configurable: !0,
                        enumerable: !0
                    };
                };
                if (a && Gt(Hl, {
                    href: op(Kl, function(e) {
                        var t = Hu(this), n = String(e), r = Vl(t, n);
                        if (r) throw TypeError(r);
                        Vu(t.searchParams).updateSearchParams(t.query);
                    }),
                    origin: op(zl),
                    protocol: op(Wl, function(e) {
                        var t = Hu(this);
                        Vl(t, String(e) + ":", Ml);
                    }),
                    username: op(Yl, function(e) {
                        var t = Hu(this), n = xt(String(e));
                        if (!vl(t)) {
                            t.username = "";
                            for (var r = 0; r < n.length; r++) t.username += fl(n[r], hl);
                        }
                    }),
                    password: op(Jl, function(e) {
                        var t = Hu(this), n = xt(String(e));
                        if (!vl(t)) {
                            t.password = "";
                            for (var r = 0; r < n.length; r++) t.password += fl(n[r], hl);
                        }
                    }),
                    host: op(Xl, function(e) {
                        var t = Hu(this);
                        t.cannotBeABaseURL || Vl(t, String(e), Ol);
                    }),
                    hostname: op(Ql, function(e) {
                        var t = Hu(this);
                        t.cannotBeABaseURL || Vl(t, String(e), Ll);
                    }),
                    port: op(Zl, function(e) {
                        var t = Hu(this);
                        vl(t) || ("" == (e = String(e)) ? t.port = null : Vl(t, e, Rl));
                    }),
                    pathname: op(ep, function(e) {
                        var t = Hu(this);
                        t.cannotBeABaseURL || (t.path = [], Vl(t, e + "", Fl));
                    }),
                    search: op(tp, function(e) {
                        var t = Hu(this);
                        "" == (e = String(e)) ? t.query = null : ("?" == e.charAt(0) && (e = e.slice(1)), 
                        t.query = "", Vl(t, e, jl)), Vu(t.searchParams).updateSearchParams(t.query);
                    }),
                    searchParams: op(np),
                    hash: op(rp, function(e) {
                        var t = Hu(this);
                        "" != (e = String(e)) ? ("#" == e.charAt(0) && (e = e.slice(1)), t.fragment = "", 
                        Vl(t, e, $l)) : t.fragment = null;
                    })
                }), ne(Hl, "toJSON", function() {
                    return Kl.call(this);
                }, {
                    enumerable: !0
                }), ne(Hl, "toString", function() {
                    return Kl.call(this);
                }, {
                    enumerable: !0
                }), ju) {
                    var ip = ju.createObjectURL, ap = ju.revokeObjectURL;
                    ip && ne(Bl, "createObjectURL", function(e) {
                        return ip.apply(ju, arguments);
                    }), ap && ne(Bl, "revokeObjectURL", function(e) {
                        return ap.apply(ju, arguments);
                    });
                }
                an(Bl, "URL"), Oe({
                    global: !0,
                    forced: !su,
                    sham: !a
                }, {
                    URL: Bl
                });
                var sp = {
                    JSON: {
                        TYPE: {
                            C2C: {
                                NOTICE: 1,
                                COMMON: 9,
                                EVENT: 10
                            },
                            GROUP: {
                                COMMON: 3,
                                TIP: 4,
                                SYSTEM: 5,
                                TIP2: 6
                            },
                            FRIEND: {
                                NOTICE: 7
                            },
                            PROFILE: {
                                NOTICE: 8
                            }
                        },
                        SUBTYPE: {
                            C2C: {
                                COMMON: 0,
                                READED: 92,
                                KICKEDOUT: 96
                            },
                            GROUP: {
                                COMMON: 0,
                                LOVEMESSAGE: 1,
                                TIP: 2,
                                REDPACKET: 3
                            }
                        },
                        OPTIONS: {
                            GROUP: {
                                JOIN: 1,
                                QUIT: 2,
                                KICK: 3,
                                SET_ADMIN: 4,
                                CANCEL_ADMIN: 5,
                                MODIFY_GROUP_INFO: 6,
                                MODIFY_MEMBER_INFO: 7
                            }
                        }
                    },
                    PROTOBUF: {},
                    IMAGE_TYPES: {
                        ORIGIN: 1,
                        LARGE: 2,
                        SMALL: 3
                    },
                    IMAGE_FORMAT: {
                        JPG: 1,
                        JPEG: 1,
                        GIF: 2,
                        PNG: 3,
                        BMP: 4,
                        UNKNOWN: 255
                    }
                }, cp = 1, up = 2, lp = 3, pp = 4, hp = 5, fp = 7, dp = 8, gp = 9, mp = 10, vp = 15, yp = 255, _p = 2, Sp = 0, Ip = 1, Mp = {
                    NICK: "Tag_Profile_IM_Nick",
                    GENDER: "Tag_Profile_IM_Gender",
                    BIRTHDAY: "Tag_Profile_IM_BirthDay",
                    LOCATION: "Tag_Profile_IM_Location",
                    SELFSIGNATURE: "Tag_Profile_IM_SelfSignature",
                    ALLOWTYPE: "Tag_Profile_IM_AllowType",
                    LANGUAGE: "Tag_Profile_IM_Language",
                    AVATAR: "Tag_Profile_IM_Image",
                    MESSAGESETTINGS: "Tag_Profile_IM_MsgSettings",
                    ADMINFORBIDTYPE: "Tag_Profile_IM_AdminForbidType",
                    LEVEL: "Tag_Profile_IM_Level",
                    ROLE: "Tag_Profile_IM_Role"
                }, Cp = {
                    UNKNOWN: "Gender_Type_Unknown",
                    FEMALE: "Gender_Type_Female",
                    MALE: "Gender_Type_Male"
                }, Tp = {
                    NONE: "AdminForbid_Type_None",
                    SEND_OUT: "AdminForbid_Type_SendOut"
                }, Ep = {
                    NEED_CONFIRM: "AllowType_Type_NeedConfirm",
                    ALLOW_ANY: "AllowType_Type_AllowAny",
                    DENY_ANY: "AllowType_Type_DenyAny"
                }, Ap = function() {
                    function e(t) {
                        Ln(this, e), this._imageMemoryURL = "", this._file = t.file, Ka ? this.createImageDataASURLInWXMiniApp(t.file) : this.createImageDataASURLInWeb(t.file), 
                        this._initImageInfoModel(), this.type = Tn.MSG_IMAGE, this._percent = 0, this.content = {
                            imageFormat: t.imageFormat || sp.IMAGE_FORMAT.UNKNOWN,
                            uuid: t.uuid,
                            imageInfoArray: []
                        }, this.initImageInfoArray(t.imageInfoArray), this._defaultImage = "http://imgcache.qq.com/open/qcloud/video/act/webim-images/default.jpg", 
                        this._autoFixUrl();
                    }
                    return Pn(e, [ {
                        key: "_initImageInfoModel",
                        value: function() {
                            var e = this;
                            this._ImageInfoModel = function(t) {
                                this.instanceID = $s(9999999), this.sizeType = t.type || 0, this.type = 0, this.size = t.size || 0, 
                                this.width = t.width || 0, this.height = t.height || 0, this.imageUrl = t.url || "", 
                                this.url = t.url || e._imageMemoryURL || e._defaultImage;
                            }, this._ImageInfoModel.prototype = {
                                setSizeType: function(e) {
                                    this.sizeType = e;
                                },
                                setType: function(e) {
                                    this.type = e;
                                },
                                setImageUrl: function(e) {
                                    e && (this.imageUrl = e);
                                },
                                getImageUrl: function() {
                                    return this.imageUrl;
                                }
                            };
                        }
                    }, {
                        key: "initImageInfoArray",
                        value: function(e) {
                            for (var t = 0, n = null, r = null; t <= 2; ) r = Ds(e) || Ds(e[t]) ? {
                                type: 0,
                                size: 0,
                                width: 0,
                                height: 0,
                                url: ""
                            } : e[t], (n = new this._ImageInfoModel(r)).setSizeType(t + 1), n.setType(t), this.addImageInfo(n), 
                            t++;
                            this.updateAccessSideImageInfoArray();
                        }
                    }, {
                        key: "updateImageInfoArray",
                        value: function(e) {
                            for (var t, n = this.content.imageInfoArray.length, r = 0; r < n; r++) t = this.content.imageInfoArray[r], 
                            e[r].size && (t.size = e[r].size), e[r].url && t.setImageUrl(e[r].url), e[r].width && (t.width = e[r].width), 
                            e[r].height && (t.height = e[r].height);
                        }
                    }, {
                        key: "_autoFixUrl",
                        value: function() {
                            for (var e = this.content.imageInfoArray.length, t = "", n = "", r = [ "http", "https" ], o = null, i = 0; i < e; i++) this.content.imageInfoArray[i].url && "" !== (o = this.content.imageInfoArray[i]).imageUrl && (n = o.imageUrl.slice(0, o.imageUrl.indexOf("://") + 1), 
                            t = o.imageUrl.slice(o.imageUrl.indexOf("://") + 1), r.indexOf(n) < 0 && (n = "https:"), 
                            this.content.imageInfoArray[i].setImageUrl([ n, t ].join("")));
                        }
                    }, {
                        key: "updatePercent",
                        value: function(e) {
                            this._percent = e, this._percent > 1 && (this._percent = 1);
                        }
                    }, {
                        key: "updateImageFormat",
                        value: function(e) {
                            this.content.imageFormat = sp.IMAGE_FORMAT[e.toUpperCase()] || sp.IMAGE_FORMAT.UNKNOWN;
                        }
                    }, {
                        key: "createImageDataASURLInWeb",
                        value: function(e) {
                            void 0 !== e && e.files.length > 0 && (this._imageMemoryURL = window.URL.createObjectURL(e.files[0]));
                        }
                    }, {
                        key: "createImageDataASURLInWXMiniApp",
                        value: function(e) {
                            e && e.url && (this._imageMemoryURL = e.url);
                        }
                    }, {
                        key: "replaceImageInfo",
                        value: function(e, t) {
                            this.content.imageInfoArray[t] instanceof this._ImageInfoModel || (this.content.imageInfoArray[t] = e);
                        }
                    }, {
                        key: "addImageInfo",
                        value: function(e) {
                            this.content.imageInfoArray.length >= 3 || this.content.imageInfoArray.push(e);
                        }
                    }, {
                        key: "updateAccessSideImageInfoArray",
                        value: function() {
                            var e = this.content.imageInfoArray, t = e[0], n = t.width, r = void 0 === n ? 0 : n, o = t.height, i = void 0 === o ? 0 : o;
                            0 !== r && 0 !== i && (oc(e), Object.assign(e[2], rc({
                                originWidth: r,
                                originHeight: i,
                                min: 720
                            })));
                        }
                    }, {
                        key: "sendable",
                        value: function() {
                            return 0 !== this.content.imageInfoArray.length && "" !== this.content.imageInfoArray[0].imageUrl && 0 !== this.content.imageInfoArray[0].size;
                        }
                    } ]), e;
                }(), bp = function() {
                    function e(t) {
                        Ln(this, e), this.type = Tn.MSG_FACE, this.content = t || null;
                    }
                    return Pn(e, [ {
                        key: "sendable",
                        value: function() {
                            return null !== this.content;
                        }
                    } ]), e;
                }(), xp = function() {
                    function e(t) {
                        Ln(this, e), this.type = Tn.MSG_AUDIO, this._percent = 0, this.content = {
                            downloadFlag: 2,
                            second: t.second,
                            size: t.size,
                            url: t.url,
                            remoteAudioUrl: "",
                            uuid: t.uuid
                        };
                    }
                    return Pn(e, [ {
                        key: "updatePercent",
                        value: function(e) {
                            this._percent = e, this._percent > 1 && (this._percent = 1);
                        }
                    }, {
                        key: "updateAudioUrl",
                        value: function(e) {
                            this.content.remoteAudioUrl = e;
                        }
                    }, {
                        key: "sendable",
                        value: function() {
                            return "" !== this.content.remoteAudioUrl;
                        }
                    } ]), e;
                }();
                Oe({
                    target: "Object",
                    stat: !0,
                    forced: !a,
                    sham: !a
                }, {
                    defineProperty: w.f
                });
                var wp = {
                    from: !0,
                    groupID: !0,
                    groupName: !0,
                    to: !0
                }, Dp = function() {
                    function e(t) {
                        Ln(this, e), this.type = Tn.MSG_GRP_TIP, this.content = {}, this._initContent(t);
                    }
                    return Pn(e, [ {
                        key: "_initContent",
                        value: function(e) {
                            var t = this;
                            Object.keys(e).forEach(function(n) {
                                switch (n) {
                                  case "remarkInfo":
                                    break;

                                  case "groupProfile":
                                    t.content.groupProfile = {}, t._initGroupProfile(e[n]);
                                    break;

                                  case "operatorInfo":
                                  case "memberInfoList":
                                    break;

                                  case "msgMemberInfo":
                                    t.content.memberList = e[n], Object.defineProperty(t.content, "msgMemberInfo", {
                                        get: function() {
                                            return Cs.warn("!!! 禁言的群提示消息中的 payload.msgMemberInfo 属性即将废弃，请使用 payload.memberList 属性替代。 \n", "msgMemberInfo 中的 shutupTime 属性对应更改为 memberList 中的 muteTime 属性，表示禁言时长。 \n", "参考：群提示消息 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/Message.html#.GroupTipPayload"), 
                                            t.content.memberList.map(function(e) {
                                                return {
                                                    userID: e.userID,
                                                    shutupTime: e.muteTime
                                                };
                                            });
                                        }
                                    });
                                    break;

                                  case "onlineMemberInfo":
                                    break;

                                  case "memberNum":
                                    t.content[n] = e[n], t.content.memberCount = e[n];
                                    break;

                                  default:
                                    t.content[n] = e[n];
                                }
                            }), this.content.userIDList || (this.content.userIDList = [ this.content.operatorID ]);
                        }
                    }, {
                        key: "_initGroupProfile",
                        value: function(e) {
                            for (var t = Object.keys(e), n = 0; n < t.length; n++) {
                                var r = t[n];
                                wp[r] && (this.content.groupProfile[r] = e[r]);
                            }
                        }
                    } ]), e;
                }(), kp = {
                    from: !0,
                    groupID: !0,
                    name: !0,
                    to: !0
                }, Op = function() {
                    function e(t) {
                        Ln(this, e), this.type = Tn.MSG_GRP_SYS_NOTICE, this.content = {}, this._initContent(t);
                    }
                    return Pn(e, [ {
                        key: "_initContent",
                        value: function(e) {
                            var t = this;
                            Object.keys(e).forEach(function(n) {
                                switch (n) {
                                  case "memberInfoList":
                                    break;

                                  case "remarkInfo":
                                    t.content.handleMessage = e[n];
                                    break;

                                  case "groupProfile":
                                    t.content.groupProfile = {}, t._initGroupProfile(e[n]);
                                    break;

                                  default:
                                    t.content[n] = e[n];
                                }
                            });
                        }
                    }, {
                        key: "_initGroupProfile",
                        value: function(e) {
                            for (var t = Object.keys(e), n = 0; n < t.length; n++) {
                                var r = t[n];
                                kp[r] && (this.content.groupProfile[r] = e[r]);
                            }
                        }
                    } ]), e;
                }(), Lp = Math.min, Rp = [].lastIndexOf, Pp = !!Rp && 1 / [ 1 ].lastIndexOf(1, -0) < 0, Np = st("lastIndexOf"), Gp = pt("indexOf", {
                    ACCESSORS: !0,
                    1: 0
                }), Fp = !Pp && Np && Gp ? Rp : function(e) {
                    if (Pp) return Rp.apply(this, arguments) || 0;
                    var t = m(this), n = le(t.length), r = n - 1;
                    for (arguments.length > 1 && (r = Lp(r, ce(arguments[1]))), r < 0 && (r = n + r); r >= 0; r--) if (r in t && t[r] === e) return r || 0;
                    return -1;
                };
                Oe({
                    target: "Array",
                    proto: !0,
                    forced: Fp !== [].lastIndexOf
                }, {
                    lastIndexOf: Fp
                });
                var Up = "https://cloud.tencent.com/document/product/", qp = "您可以在即时通信 IM 控制台的【开发辅助工具(https://console.cloud.tencent.com/im-detail/tool-usersig)】页面校验 UserSig。", jp = "UserSig 非法，请使用官网提供的 API 重新生成 UserSig(".concat(Up, "269/32688)。"), $p = {
                    70001: "UserSig 已过期，请重新生成。建议 UserSig 有效期设置不小于24小时。",
                    70002: "UserSig 长度为0，请检查传入的 UserSig 是否正确。",
                    70003: jp,
                    70005: jp,
                    70009: "UserSig 验证失败，可能因为生成 UserSig 时混用了其他 SDKAppID 的私钥或密钥导致，请使用对应 SDKAppID 下的私钥或密钥重新生成 UserSig(".concat(Up, "269/32688)。"),
                    70013: "请求中的 UserID 与生成 UserSig 时使用的 UserID 不匹配。".concat(qp),
                    70014: "请求中的 SDKAppID 与生成 UserSig 时使用的 SDKAppID 不匹配。".concat(qp),
                    70016: "密钥不存在，UserSig 验证失败，请在即时通信 IM 控制台获取密钥(".concat(Up, "269/32578#.E8.8E.B7.E5.8F.96.E5.AF.86.E9.92.A5)。"),
                    70020: "SDKAppID 未找到，请在即时通信 IM 控制台确认应用信息。",
                    70050: "UserSig 验证次数过于频繁。请检查 UserSig 是否正确，并于1分钟后重新验证。".concat(qp),
                    70051: "帐号被拉入黑名单。",
                    70052: "UserSig 已经失效，请重新生成，再次尝试。",
                    70107: "因安全原因被限制登录，请不要频繁登录。",
                    70169: "请求的用户帐号不存在。",
                    70114: "".concat("服务端内部超时，请稍后重试。"),
                    70202: "".concat("服务端内部超时，请稍后重试。"),
                    70206: "请求中批量数量不合法。",
                    70402: "参数非法，请检查必填字段是否填充，或者字段的填充是否满足协议要求。",
                    70403: "请求失败，需要 App 管理员权限。",
                    70398: "帐号数超限。如需创建多于100个帐号，请将应用升级为专业版，具体操作指引请参见购买指引(".concat(Up, "269/32458)。"),
                    70500: "".concat("服务端内部错误，请重试。"),
                    71000: "删除帐号失败。仅支持删除体验版帐号，您当前应用为专业版，暂不支持帐号删除。",
                    20001: "请求包非法。",
                    20002: "UserSig 或 A2 失效。",
                    20003: "消息发送方或接收方 UserID 无效或不存在，请检查 UserID 是否已导入即时通信 IM。",
                    20004: "网络异常，请重试。",
                    20005: "".concat("服务端内部错误，请重试。"),
                    20006: "触发发送".concat("单聊消息", "之前回调，App 后台返回禁止下发该消息。"),
                    20007: "发送".concat("单聊消息", "，被对方拉黑，禁止发送。消息发送状态默认展示为失败，您可以登录控制台修改该场景下的消息发送状态展示结果，具体操作请参见消息保留设置(").concat(Up, "269/38656)。"),
                    20009: "消息发送双方互相不是好友，禁止发送（配置".concat("单聊消息", "校验好友关系才会出现）。"),
                    20010: "发送".concat("单聊消息", "，自己不是对方的好友（单向关系），禁止发送。"),
                    20011: "发送".concat("单聊消息", "，对方不是自己的好友（单向关系），禁止发送。"),
                    20012: "发送方被禁言，该条消息被禁止发送。",
                    20016: "消息撤回超过了时间限制（默认2分钟）。",
                    20018: "删除漫游内部错误。",
                    90001: "JSON 格式解析失败，请检查请求包是否符合 JSON 规范。",
                    90002: "".concat("JSON 格式请求包体", "中 MsgBody 不符合消息格式描述，或者 MsgBody 不是 Array 类型，请参考 TIMMsgElement 对象的定义(").concat(Up, "269/2720#.E6.B6.88.E6.81.AF.E5.85.83.E7.B4.A0-timmsgelement)。"),
                    90003: "".concat("JSON 格式请求包体", "中缺少 To_Account 字段或者 To_Account 帐号不存在。"),
                    90005: "".concat("JSON 格式请求包体", "中缺少 MsgRandom 字段或者 MsgRandom 字段不是 Integer 类型。"),
                    90006: "".concat("JSON 格式请求包体", "中缺少 MsgTimeStamp 字段或者 MsgTimeStamp 字段不是 Integer 类型。"),
                    90007: "".concat("JSON 格式请求包体", "中 MsgBody 类型不是 Array 类型，请将其修改为 Array 类型。"),
                    90008: "".concat("JSON 格式请求包体", "中缺少 From_Account 字段或者 From_Account 帐号不存在。"),
                    90009: "请求需要 App 管理员权限。",
                    90010: "".concat("JSON 格式请求包体", "不符合消息格式描述，请参考 TIMMsgElement 对象的定义(").concat(Up, "269/2720#.E6.B6.88.E6.81.AF.E5.85.83.E7.B4.A0-timmsgelement)。"),
                    90011: "批量发消息目标帐号超过500，请减少 To_Account 中目标帐号数量。",
                    90012: "To_Account 没有注册或不存在，请确认 To_Account 是否导入即时通信 IM 或者是否拼写错误。",
                    90026: "消息离线存储时间错误（最多不能超过7天）。",
                    90031: "".concat("JSON 格式请求包体", "中 SyncOtherMachine 字段不是 Integer 类型。"),
                    90044: "".concat("JSON 格式请求包体", "中 MsgLifeTime 字段不是 Integer 类型。"),
                    90048: "请求的用户帐号不存在。",
                    90054: "撤回请求中的 MsgKey 不合法。",
                    90994: "".concat("服务端内部错误，请重试。"),
                    90995: "".concat("服务端内部错误，请重试。"),
                    91000: "".concat("服务端内部错误，请重试。"),
                    90992: "".concat("服务端内部错误，请重试。", "如果所有请求都返回该错误码，且 App 配置了第三方回调，请检查 App 服务端是否正常向即时通信 IM 后台服务端返回回调结果。"),
                    93000: "JSON 数据包超长，消息包体请不要超过8k。",
                    91101: "Web 端长轮询被踢（Web 端同时在线实例个数超出限制）。",
                    10002: "".concat("服务端内部错误，请重试。"),
                    10003: "请求中的接口名称错误，请核对接口名称并重试。",
                    10004: "参数非法，请根据错误描述检查请求是否正确。",
                    10005: "请求包体中携带的帐号数量过多。",
                    10006: "操作频率限制，请尝试降低调用的频率。",
                    10007: "操作权限不足，例如 Work ".concat("群组", "中普通成员尝试执行踢人操作，但只有 App 管理员才有权限。"),
                    10008: "请求非法，可能是请求中携带的签名信息验证不正确，请再次尝试。",
                    10009: "该群不允许群主主动退出。",
                    10010: "".concat("群组", "不存在，或者曾经存在过，但是目前已经被解散。"),
                    10011: "解析 JSON 包体失败，请检查包体的格式是否符合 JSON 格式。",
                    10012: "发起操作的 UserID 非法，请检查发起操作的用户 UserID 是否填写正确。",
                    10013: "被邀请加入的用户已经是群成员。",
                    10014: "群已满员，无法将请求中的用户加入".concat("群组", "，如果是批量加人，可以尝试减少加入用户的数量。"),
                    10015: "找不到指定 ID 的".concat("群组", "。"),
                    10016: "App 后台通过第三方回调拒绝本次操作。",
                    10017: "因被禁言而不能发送消息，请检查发送者是否被设置禁言。",
                    10018: "应答包长度超过最大包长（1MB），请求的内容过多，请尝试减少单次请求的数据量。",
                    10019: "请求的用户帐号不存在。",
                    10021: "".concat("群组", " ID 已被使用，请选择其他的").concat("群组", " ID。"),
                    10023: "发消息的频率超限，请延长两次发消息时间的间隔。",
                    10024: "此邀请或者申请请求已经被处理。",
                    10025: "".concat("群组", " ID 已被使用，并且操作者为群主，可以直接使用。"),
                    10026: "该 SDKAppID 请求的命令字已被禁用。",
                    10030: "请求撤回的消息不存在。",
                    10031: "消息撤回超过了时间限制（默认2分钟）。",
                    10032: "请求撤回的消息不支持撤回操作。",
                    10033: "".concat("群组", "类型不支持消息撤回操作。"),
                    10034: "该消息类型不支持删除操作。",
                    10035: "直播群和在线成员广播大群不支持删除消息。",
                    10036: "直播群创建数量超过了限制，请参考价格说明(".concat(Up, "269/11673)购买预付费套餐“IM直播群”。"),
                    10037: "单个用户可创建和加入的".concat("群组", "数量超过了限制，请参考价格说明(").concat(Up, "269/11673)购买或升级预付费套餐“单人可创建与加入").concat("群组", "数”。"),
                    10038: "群成员数量超过限制，请参考价格说明(".concat(Up, "269/11673)购买或升级预付费套餐“扩展群人数上限”。"),
                    10041: "该应用（SDKAppID）已配置不支持群消息撤回。"
                }, Vp = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n(e) {
                        var r;
                        return Ln(this, n), (r = t.call(this)).code = e.code, r.message = $p[e.code] || e.message, 
                        r.data = e.data || {}, r;
                    }
                    return n;
                }(Bn(Error)), Bp = {
                    NO_SDKAPPID: 2e3,
                    NO_ACCOUNT_TYPE: 2001,
                    NO_IDENTIFIER: 2002,
                    NO_USERSIG: 2003,
                    NO_TINYID: 2022,
                    NO_A2KEY: 2023,
                    USER_NOT_LOGGED_IN: 2024,
                    COS_UNDETECTED: 2040,
                    MESSAGE_SEND_FAIL: 2100,
                    MESSAGE_LIST_CONSTRUCTOR_NEED_OPTIONS: 2103,
                    MESSAGE_SEND_NEED_MESSAGE_INSTANCE: 2105,
                    MESSAGE_SEND_INVALID_CONVERSATION_TYPE: 2106,
                    MESSAGE_FILE_IS_EMPTY: 2108,
                    MESSAGE_ONPROGRESS_FUNCTION_ERROR: 2109,
                    MESSAGE_REVOKE_FAIL: 2110,
                    MESSAGE_IMAGE_SELECT_FILE_FIRST: 2251,
                    MESSAGE_IMAGE_TYPES_LIMIT: 2252,
                    MESSAGE_IMAGE_SIZE_LIMIT: 2253,
                    MESSAGE_AUDIO_UPLOAD_FAIL: 2300,
                    MESSAGE_AUDIO_SIZE_LIMIT: 2301,
                    MESSAGE_VIDEO_UPLOAD_FAIL: 2350,
                    MESSAGE_VIDEO_SIZE_LIMIT: 2351,
                    MESSAGE_VIDEO_TYPES_LIMIT: 2352,
                    MESSAGE_FILE_UPLOAD_FAIL: 2400,
                    MESSAGE_FILE_SELECT_FILE_FIRST: 2401,
                    MESSAGE_FILE_SIZE_LIMIT: 2402,
                    MESSAGE_FILE_URL_IS_EMPTY: 2403,
                    CONVERSATION_NOT_FOUND: 2500,
                    USER_OR_GROUP_NOT_FOUND: 2501,
                    CONVERSATION_UN_RECORDED_TYPE: 2502,
                    ILLEGAL_GROUP_TYPE: 2600,
                    CANNOT_JOIN_WORK: 2601,
                    CANNOT_CHANGE_OWNER_IN_AVCHATROOM: 2620,
                    CANNOT_CHANGE_OWNER_TO_SELF: 2621,
                    CANNOT_DISMISS_Work: 2622,
                    JOIN_GROUP_FAIL: 2660,
                    CANNOT_ADD_MEMBER_IN_AVCHATROOM: 2661,
                    CANNOT_JOIN_NON_AVCHATROOM_WITHOUT_LOGIN: 2662,
                    CANNOT_KICK_MEMBER_IN_AVCHATROOM: 2680,
                    NOT_OWNER: 2681,
                    CANNOT_SET_MEMBER_ROLE_IN_WORK_AND_AVCHATROOM: 2682,
                    INVALID_MEMBER_ROLE: 2683,
                    CANNOT_SET_SELF_MEMBER_ROLE: 2684,
                    CANNOT_MUTE_SELF: 2685,
                    DEL_FRIEND_INVALID_PARAM: 2700,
                    UPDATE_PROFILE_INVALID_PARAM: 2721,
                    UPDATE_PROFILE_NO_KEY: 2722,
                    ADD_BLACKLIST_INVALID_PARAM: 2740,
                    DEL_BLACKLIST_INVALID_PARAM: 2741,
                    CANNOT_ADD_SELF_TO_BLACKLIST: 2742,
                    NETWORK_ERROR: 2800,
                    NETWORK_TIMEOUT: 2801,
                    NETWORK_BASE_OPTIONS_NO_URL: 2802,
                    NETWORK_UNDEFINED_SERVER_NAME: 2803,
                    NETWORK_PACKAGE_UNDEFINED: 2804,
                    NO_NETWORK: 2805,
                    CONVERTOR_IRREGULAR_PARAMS: 2900,
                    NOTICE_RUNLOOP_UNEXPECTED_CONDITION: 2901,
                    NOTICE_RUNLOOP_OFFSET_LOST: 2902,
                    UNCAUGHT_ERROR: 2903,
                    GET_LONGPOLL_ID_FAILED: 2904,
                    INVALID_OPERATION: 2905,
                    SDK_IS_NOT_READY: 2999,
                    LONG_POLL_KICK_OUT: 91101,
                    MESSAGE_A2KEY_EXPIRED: 20002,
                    ACCOUNT_A2KEY_EXPIRED: 70001,
                    LONG_POLL_API_PARAM_ERROR: 90001
                }, Hp = "无 SDKAppID", Kp = "无 accountType", zp = "无 userID", Wp = "无 userSig", Yp = "无 tinyID", Jp = "无 a2key", Xp = "用户未登录", Qp = "未检测到 COS 上传插件", Zp = "消息发送失败", eh = "MessageController.constructor() 需要参数 options", th = "需要 Message 的实例", nh = 'Message.conversationType 只能为 "C2C" 或 "GROUP"', rh = "无法发送空文件", oh = "回调函数运行时遇到错误，请检查接入侧代码", ih = "消息撤回失败", ah = "请先选择一个图片", sh = "只允许上传 jpg png jpeg gif bmp格式的图片", ch = "图片大小超过20M，无法发送", uh = "语音上传失败", lh = "语音大小大于20M，无法发送", ph = "视频上传失败", hh = "视频大小超过100M，无法发送", fh = "只允许上传 mp4 格式的视频", dh = "文件上传失败", gh = "请先选择一个文件", mh = "文件大小超过100M，无法发送 ", vh = "缺少必要的参数文件 URL", yh = "没有找到相应的会话，请检查传入参数", _h = "没有找到相应的用户或群组，请检查传入参数", Sh = "未记录的会话类型", Ih = "非法的群类型，请检查传入参数", Mh = "不能加入 Work 类型的群组", Ch = "AVChatRoom 类型的群组不能转让群主", Th = "不能把群主转让给自己", Eh = "不能解散 Work 类型的群组", Ah = "加群失败，请检查传入参数或重试", bh = "AVChatRoom 类型的群不支持邀请群成员", xh = "非 AVChatRoom 类型的群组不允许匿名加群，请先登录后再加群", wh = "不能在 AVChatRoom 类型的群组踢人", Dh = "你不是群主，只有群主才有权限操作", kh = "不能在 Work / AVChatRoom 类型的群中设置群成员身份", Oh = "不合法的群成员身份，请检查传入参数", Lh = "不能设置自己的群成员身份，请检查传入参数", Rh = "不能将自己禁言，请检查传入参数", Ph = "传入 deleteFriend 接口的参数无效", Nh = "传入 updateMyProfile 接口的参数无效", Gh = "updateMyProfile 无标配资料字段或自定义资料字段", Fh = "传入 addToBlacklist 接口的参数无效", Uh = "传入 removeFromBlacklist 接口的参数无效", qh = "不能拉黑自己", jh = "网络层初始化错误，缺少 URL 参数", $h = "打包错误，未定义的 serverName", Vh = "未定义的 packageConfig", Bh = "未连接到网络", Hh = "不规范的参数名称", Kh = "_syncOffset 丢失", zh = "获取 longpolling id 失败", Wh = "无效操作，如调用了未定义或者未实现的方法等", Yh = "接口需要 SDK 处于 ready 状态后才能调用", Jh = [ "jpg", "jpeg", "gif", "png", "bmp" ], Xh = [ "mp4" ], Qh = function() {
                    function e(t) {
                        Ln(this, e);
                        var n = this._check(t);
                        if (n instanceof Vp) throw n;
                        this.type = Tn.MSG_FILE, this._percent = 0;
                        var r = this._getFileInfo(t);
                        this.content = {
                            downloadFlag: 2,
                            fileUrl: t.url || "",
                            uuid: t.uuid,
                            fileName: r.name || "",
                            fileSize: r.size || 0
                        };
                    }
                    return Pn(e, [ {
                        key: "_getFileInfo",
                        value: function(e) {
                            if (e.fileName && e.fileSize) return {
                                size: e.fileSize,
                                name: e.fileName
                            };
                            if (Ka) return {};
                            var t = e.file.files[0];
                            return {
                                size: t.size,
                                name: t.name,
                                type: t.type.slice(t.type.lastIndexOf("/") + 1).toLowerCase()
                            };
                        }
                    }, {
                        key: "updatePercent",
                        value: function(e) {
                            this._percent = e, this._percent > 1 && (this._percent = 1);
                        }
                    }, {
                        key: "updateFileUrl",
                        value: function(e) {
                            this.content.fileUrl = e;
                        }
                    }, {
                        key: "_check",
                        value: function(e) {
                            if (e.size > 104857600) return new Vp({
                                code: Bp.MESSAGE_FILE_SIZE_LIMIT,
                                message: "".concat(mh, ": ").concat(104857600, " bytes")
                            });
                        }
                    }, {
                        key: "sendable",
                        value: function() {
                            return "" !== this.content.fileUrl && "" !== this.content.fileName && 0 !== this.content.fileSize;
                        }
                    } ]), e;
                }(), Zh = function() {
                    function e(t) {
                        Ln(this, e), this.type = Tn.MSG_CUSTOM, this.content = {
                            data: t.data || "",
                            description: t.description || "",
                            extension: t.extension || ""
                        };
                    }
                    return Pn(e, [ {
                        key: "setData",
                        value: function(e) {
                            return this.content.data = e, this;
                        }
                    }, {
                        key: "setDescription",
                        value: function(e) {
                            return this.content.description = e, this;
                        }
                    }, {
                        key: "setExtension",
                        value: function(e) {
                            return this.content.extension = e, this;
                        }
                    }, {
                        key: "sendable",
                        value: function() {
                            return 0 !== this.content.data.length || 0 !== this.content.description.length || 0 !== this.content.extension.length;
                        }
                    } ]), e;
                }(), ef = function() {
                    function e(t) {
                        Ln(this, e), this.type = Tn.MSG_VIDEO, this._percent = 0, this.content = {
                            remoteVideoUrl: t.remoteVideoUrl,
                            videoFormat: t.videoFormat,
                            videoSecond: parseInt(t.videoSecond, 10),
                            videoSize: t.videoSize,
                            videoUrl: t.videoUrl,
                            videoDownloadFlag: 2,
                            videoUUID: t.videoUUID,
                            thumbUUID: t.thumbUUID,
                            thumbFormat: t.thumbFormat,
                            thumbWidth: t.thumbWidth,
                            thumbHeight: t.thumbHeight,
                            thumbSize: t.thumbSize,
                            thumbDownloadFlag: 2,
                            thumbUrl: t.thumbUrl
                        };
                    }
                    return Pn(e, [ {
                        key: "updatePercent",
                        value: function(e) {
                            this._percent = e, this._percent > 1 && (this._percent = 1);
                        }
                    }, {
                        key: "updateVideoUrl",
                        value: function(e) {
                            e && (this.content.remoteVideoUrl = e);
                        }
                    }, {
                        key: "sendable",
                        value: function() {
                            return "" !== this.content.remoteVideoUrl;
                        }
                    } ]), e;
                }(), tf = function e(t) {
                    Ln(this, e), this.type = Tn.MSG_GEO, this.content = t;
                }, nf = {
                    1: Tn.MSG_PRIORITY_HIGH,
                    2: Tn.MSG_PRIORITY_NORMAL,
                    3: Tn.MSG_PRIORITY_LOW,
                    4: Tn.MSG_PRIORITY_LOWEST
                }, rf = function() {
                    function e(t) {
                        Ln(this, e), this.ID = "", this.conversationID = t.conversationID || null, this.conversationType = t.conversationType || Tn.CONV_C2C, 
                        this.conversationSubType = t.conversationSubType, this.time = t.time || Math.ceil(Date.now() / 1e3), 
                        this.sequence = t.sequence || 0, this.clientSequence = t.clientSequence || t.sequence || 0, 
                        this.random = t.random || $s(), this.priority = this._computePriority(t.priority), 
                        this.nick = "", this.avatar = "", this.isPeerRead = !1, this.nameCard = "", this._elements = [], 
                        this.isPlaceMessage = t.isPlaceMessage || 0, this.isRevoked = 2 === t.isPlaceMessage || 8 === t.msgFlagBits, 
                        this.geo = {}, this.from = t.from || null, this.to = t.to || null, this.flow = "", 
                        this.isSystemMessage = t.isSystemMessage || !1, this.protocol = t.protocol || "JSON", 
                        this.isResend = !1, this.isRead = !1, this.status = t.status || eu.SUCCESS, this._onlineOnlyFlag = !1, 
                        this._groupAtInfoList = [], this.atUserList = [], this.reInitialize(t.currentUser), 
                        this.extractGroupInfo(t.groupProfile || null), this.handleGroupAtInfo(t);
                    }
                    return Pn(e, [ {
                        key: "getElements",
                        value: function() {
                            return this._elements;
                        }
                    }, {
                        key: "extractGroupInfo",
                        value: function(e) {
                            if (null !== e) {
                                As(e.fromAccountNick) && (this.nick = e.fromAccountNick), As(e.fromAccountHeadurl) && (this.avatar = e.fromAccountHeadurl);
                                var t = e.messageFromAccountExtraInformation;
                                xs(t) && As(t.nameCard) && (this.nameCard = t.nameCard);
                            }
                        }
                    }, {
                        key: "handleGroupAtInfo",
                        value: function(e) {
                            var t = this;
                            e.payload && e.payload.atUserList && e.payload.atUserList.forEach(function(e) {
                                e !== Tn.MSG_AT_ALL ? (t._groupAtInfoList.push({
                                    groupAtAllFlag: 0,
                                    groupAtUserID: e
                                }), t.atUserList.push(e)) : (t._groupAtInfoList.push({
                                    groupAtAllFlag: 1
                                }), t.atUserList.push(Tn.MSG_AT_ALL));
                            }), ws(e.groupAtInfo) && e.groupAtInfo.forEach(function(e) {
                                1 === e.groupAtAllFlag ? t.atUserList.push(e.groupAtUserID) : 2 === e.groupAtAllFlag && t.atUserList.push(Tn.MSG_AT_ALL);
                            });
                        }
                    }, {
                        key: "getGroupAtInfoList",
                        value: function() {
                            return this._groupAtInfoList;
                        }
                    }, {
                        key: "_initProxy",
                        value: function() {
                            this.payload = this._elements[0].content, this.type = this._elements[0].type;
                        }
                    }, {
                        key: "reInitialize",
                        value: function(e) {
                            e && (this.status = this.from ? eu.SUCCESS : eu.UNSEND, !this.from && (this.from = e)), 
                            this._initFlow(e), this._initielizeSequence(e), this._concactConversationID(e), 
                            this.generateMessageID(e);
                        }
                    }, {
                        key: "isSendable",
                        value: function() {
                            return 0 !== this._elements.length && ("function" != typeof this._elements[0].sendable ? (Cs.warn("".concat(this._elements[0].type, ' need "boolean : sendable()" method')), 
                            !1) : this._elements[0].sendable());
                        }
                    }, {
                        key: "_initTo",
                        value: function(e) {
                            this.conversationType === Tn.CONV_GROUP && (this.to = e.groupID);
                        }
                    }, {
                        key: "_initielizeSequence",
                        value: function(e) {
                            0 === this.clientSequence && e && (this.clientSequence = function(e) {
                                if (!e) return Cs.error("autoincrementIndex(string: key) need key parameter"), !1;
                                if (void 0 === Ks[e]) {
                                    var t = new Date(), n = "3".concat(t.getHours()).slice(-2), r = "0".concat(t.getMinutes()).slice(-2), o = "0".concat(t.getSeconds()).slice(-2);
                                    Ks[e] = parseInt([ n, r, o, "0001" ].join("")), n = null, r = null, o = null, Cs.warn("utils.autoincrementIndex() create new sequence : ".concat(e, " = ").concat(Ks[e]));
                                }
                                return Ks[e]++;
                            }(e)), 0 === this.sequence && this.conversationType === Tn.CONV_C2C && (this.sequence = this.clientSequence);
                        }
                    }, {
                        key: "generateMessageID",
                        value: function(e) {
                            var t = e === this.from ? 1 : 0, n = this.sequence > 0 ? this.sequence : this.clientSequence;
                            this.ID = "".concat(this.conversationID, "-").concat(n, "-").concat(this.random, "-").concat(t);
                        }
                    }, {
                        key: "_initFlow",
                        value: function(e) {
                            "" !== e && (e === this.from ? (this.flow = "out", this.isRead = !0) : this.flow = "in");
                        }
                    }, {
                        key: "_concactConversationID",
                        value: function(e) {
                            var t = this.to, n = "", r = this.conversationType;
                            r !== Tn.CONV_SYSTEM ? (n = r === Tn.CONV_C2C ? e === this.from ? t : this.from : this.to, 
                            this.conversationID = "".concat(r).concat(n)) : this.conversationID = Tn.CONV_SYSTEM;
                        }
                    }, {
                        key: "isElement",
                        value: function(e) {
                            return e instanceof nu || e instanceof Ap || e instanceof bp || e instanceof xp || e instanceof Qh || e instanceof ef || e instanceof Dp || e instanceof Op || e instanceof Zh || e instanceof tf;
                        }
                    }, {
                        key: "setElement",
                        value: function(e) {
                            var t = this;
                            if (this.isElement(e)) return this._elements = [ e ], void this._initProxy();
                            var n = function(e) {
                                switch (e.type) {
                                  case Tn.MSG_TEXT:
                                    t.setTextElement(e.content);
                                    break;

                                  case Tn.MSG_IMAGE:
                                    t.setImageElement(e.content);
                                    break;

                                  case Tn.MSG_AUDIO:
                                    t.setAudioElement(e.content);
                                    break;

                                  case Tn.MSG_FILE:
                                    t.setFileElement(e.content);
                                    break;

                                  case Tn.MSG_VIDEO:
                                    t.setVideoElement(e.content);
                                    break;

                                  case Tn.MSG_CUSTOM:
                                    t.setCustomElement(e.content);
                                    break;

                                  case Tn.MSG_GEO:
                                    t.setGEOElement(e.content);
                                    break;

                                  case Tn.MSG_GRP_TIP:
                                    t.setGroupTipElement(e.content);
                                    break;

                                  case Tn.MSG_GRP_SYS_NOTICE:
                                    t.setGroupSystemNoticeElement(e.content);
                                    break;

                                  case Tn.MSG_FACE:
                                    t.setFaceElement(e.content);
                                    break;

                                  default:
                                    Cs.warn(e.type, e.content, "no operation......");
                                }
                            };
                            if (ws(e)) for (var r = 0; r < e.length; r++) n(e[r]); else n(e);
                            this._initProxy();
                        }
                    }, {
                        key: "setTextElement",
                        value: function(e) {
                            var t = "string" == typeof e ? e : e.text, n = new nu({
                                text: t
                            });
                            this._elements.push(n);
                        }
                    }, {
                        key: "setImageElement",
                        value: function(e) {
                            var t = new Ap(e);
                            this._elements.push(t);
                        }
                    }, {
                        key: "setAudioElement",
                        value: function(e) {
                            var t = new xp(e);
                            this._elements.push(t);
                        }
                    }, {
                        key: "setFileElement",
                        value: function(e) {
                            var t = new Qh(e);
                            this._elements.push(t);
                        }
                    }, {
                        key: "setVideoElement",
                        value: function(e) {
                            var t = new ef(e);
                            this._elements.push(t);
                        }
                    }, {
                        key: "setGEOElement",
                        value: function(e) {
                            var t = new tf(e);
                            this._elements.push(t);
                        }
                    }, {
                        key: "setCustomElement",
                        value: function(e) {
                            var t = new Zh(e);
                            this._elements.push(t);
                        }
                    }, {
                        key: "setGroupTipElement",
                        value: function(e) {
                            var t = {}, n = e.operationType;
                            ac(e.memberInfoList) || n !== Tn.GRP_TIP_MBR_JOIN && n !== Tn.GRP_TIP_MBR_KICKED_OUT ? e.operatorInfo && (t = e.operatorInfo) : t = e.memberInfoList[0];
                            var r = t, o = r.nick, i = r.avatar;
                            As(o) && (this.nick = o), As(i) && (this.avatar = i);
                            var a = new Dp(e);
                            this._elements.push(a);
                        }
                    }, {
                        key: "setGroupSystemNoticeElement",
                        value: function(e) {
                            var t = new Op(e);
                            this._elements.push(t);
                        }
                    }, {
                        key: "setFaceElement",
                        value: function(e) {
                            var t = new bp(e);
                            this._elements.push(t);
                        }
                    }, {
                        key: "setIsRead",
                        value: function(e) {
                            this.isRead = e;
                        }
                    }, {
                        key: "setOnlineOnlyFlag",
                        value: function(e) {
                            this._onlineOnlyFlag = e;
                        }
                    }, {
                        key: "getOnlineOnlyFlag",
                        value: function() {
                            return this._onlineOnlyFlag;
                        }
                    }, {
                        key: "_computePriority",
                        value: function(e) {
                            if (Ds(e)) return Tn.MSG_PRIORITY_NORMAL;
                            if (As(e) && -1 !== Object.values(nf).indexOf(e)) return e;
                            if (Es(e)) {
                                var t = "" + e;
                                if (-1 !== Object.keys(nf).indexOf(t)) return nf[t];
                            }
                            return Tn.MSG_PRIORITY_NORMAL;
                        }
                    }, {
                        key: "elements",
                        get: function() {
                            return Cs.warn("！！！Message 实例的 elements 属性即将废弃，请尽快修改。使用 type 和 payload 属性处理单条消息，兼容组合消息使用 _elements 属性！！！"), 
                            this._elements;
                        }
                    } ]), e;
                }(), of = function(e) {
                    return !!e && (!!(function(e) {
                        return As(e) && e.slice(0, 3) === Tn.CONV_C2C;
                    }(e) || function(e) {
                        return As(e) && e.slice(0, 5) === Tn.CONV_GROUP;
                    }(e) || ec(e)) || (console.warn("非法的会话 ID:".concat(e, "。会话 ID 组成方式：C2C + userID（单聊）GROUP + groupID（群聊）@TIM#SYSTEM（系统通知会话）")), 
                    !1));
                }, af = "请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#", sf = function(e) {
                    return e.param ? "".concat(e.api, " ").concat(e.param, " ").concat(e.desc, "。").concat(af).concat(e.api) : "".concat(e.api, " ").concat(e.desc, "。").concat(af).concat(e.api);
                }, cf = {
                    type: "String",
                    required: !0
                }, uf = {
                    type: "Array",
                    required: !0
                }, lf = {
                    type: "Object",
                    required: !0
                }, pf = {
                    login: {
                        userID: cf,
                        userSig: cf
                    },
                    addToBlacklist: {
                        userIDList: uf
                    },
                    on: [ {
                        name: "eventName",
                        type: "String",
                        validator: function(e) {
                            return "string" == typeof e && 0 !== e.length || (console.warn(sf({
                                api: "on",
                                param: "eventName",
                                desc: "类型必须为 String，且不能为空"
                            })), !1);
                        }
                    }, {
                        name: "handler",
                        type: "Function",
                        validator: function(e) {
                            return "function" != typeof e ? (console.warn(sf({
                                api: "on",
                                param: "handler",
                                desc: "参数必须为 Function"
                            })), !1) : ("" === e.name && console.warn("on 接口的 handler 参数推荐使用具名函数。具名函数可以使用 off 接口取消订阅，匿名函数无法取消订阅。"), 
                            !0);
                        }
                    } ],
                    once: [ {
                        name: "eventName",
                        type: "String",
                        validator: function(e) {
                            return "string" == typeof e && 0 !== e.length || (console.warn(sf({
                                api: "once",
                                param: "eventName",
                                desc: "类型必须为 String，且不能为空"
                            })), !1);
                        }
                    }, {
                        name: "handler",
                        type: "Function",
                        validator: function(e) {
                            return "function" != typeof e ? (console.warn(sf({
                                api: "once",
                                param: "handler",
                                desc: "参数必须为 Function"
                            })), !1) : ("" === e.name && console.warn("once 接口的 handler 参数推荐使用具名函数。"), !0);
                        }
                    } ],
                    off: [ {
                        name: "eventName",
                        type: "String",
                        validator: function(e) {
                            return "string" == typeof e && 0 !== e.length || (console.warn(sf({
                                api: "off",
                                param: "eventName",
                                desc: "类型必须为 String，且不能为空"
                            })), !1);
                        }
                    }, {
                        name: "handler",
                        type: "Function",
                        validator: function(e) {
                            return "function" != typeof e ? (console.warn(sf({
                                api: "off",
                                param: "handler",
                                desc: "参数必须为 Function"
                            })), !1) : ("" === e.name && console.warn("off 接口无法为匿名函数取消监听事件。"), !0);
                        }
                    } ],
                    sendMessage: [ Fn({
                        name: "message"
                    }, lf) ],
                    getMessageList: {
                        conversationID: Fn(Fn({}, cf), {}, {
                            validator: function(e) {
                                return of(e);
                            }
                        }),
                        nextReqMessageID: {
                            type: "String"
                        },
                        count: {
                            type: "Number",
                            validator: function(e) {
                                return !(!Ds(e) && !/^[1-9][0-9]*$/.test(e)) || (console.warn(sf({
                                    api: "getMessageList",
                                    param: "count",
                                    desc: "必须为正整数"
                                })), !1);
                            }
                        }
                    },
                    setMessageRead: {
                        conversationID: Fn(Fn({}, cf), {}, {
                            validator: function(e) {
                                return of(e);
                            }
                        })
                    },
                    getConversationProfile: [ Fn(Fn({
                        name: "conversationID"
                    }, cf), {}, {
                        validator: function(e) {
                            return of(e);
                        }
                    }) ],
                    deleteConversation: [ Fn(Fn({
                        name: "conversationID"
                    }, cf), {}, {
                        validator: function(e) {
                            return of(e);
                        }
                    }) ],
                    getGroupList: {
                        groupProfileFilter: {
                            type: "Array"
                        }
                    },
                    getGroupProfile: {
                        groupID: cf,
                        groupCustomFieldFilter: {
                            type: "Array"
                        },
                        memberCustomFieldFilter: {
                            type: "Array"
                        }
                    },
                    getGroupProfileAdvance: {
                        groupIDList: uf
                    },
                    createGroup: {
                        name: cf
                    },
                    joinGroup: {
                        groupID: cf,
                        type: {
                            type: "String"
                        },
                        applyMessage: {
                            type: "String"
                        }
                    },
                    quitGroup: [ Fn({
                        name: "groupID"
                    }, cf) ],
                    handleApplication: {
                        message: lf,
                        handleAction: cf,
                        handleMessage: {
                            type: "String"
                        }
                    },
                    changeGroupOwner: {
                        groupID: cf,
                        newOwnerID: cf
                    },
                    updateGroupProfile: {
                        groupID: cf,
                        muteAllMembers: {
                            type: "Boolean"
                        }
                    },
                    dismissGroup: [ Fn({
                        name: "groupID"
                    }, cf) ],
                    searchGroupByID: [ Fn({
                        name: "groupID"
                    }, cf) ],
                    getGroupMemberList: {
                        groupID: cf,
                        offset: {
                            type: "Number"
                        },
                        count: {
                            type: "Number"
                        }
                    },
                    getGroupMemberProfile: {
                        groupID: cf,
                        userIDList: uf,
                        memberCustomFieldFilter: {
                            type: "Array"
                        }
                    },
                    addGroupMemeber: {
                        groupID: cf,
                        userIDList: uf
                    },
                    setGroupMemberRole: {
                        groupID: cf,
                        userID: cf,
                        role: cf
                    },
                    setGroupMemberMuteTime: {
                        groupID: cf,
                        userID: cf,
                        muteTime: {
                            type: "Number",
                            validator: function(e) {
                                return e >= 0;
                            }
                        }
                    },
                    setGroupMemberNameCard: {
                        groupID: cf,
                        userID: {
                            type: "String"
                        },
                        nameCard: Fn(Fn({}, cf), {}, {
                            validator: function(e) {
                                return !0 !== /^\s+$/.test(e);
                            }
                        })
                    },
                    setMessageRemindType: {
                        groupID: cf,
                        messageRemindType: cf
                    },
                    setGroupMemberCustomField: {
                        groupID: cf,
                        userID: {
                            type: "String"
                        },
                        memberCustomField: uf
                    },
                    deleteGroupMember: {
                        groupID: cf
                    },
                    createTextMessage: {
                        to: cf,
                        conversationType: cf,
                        payload: Fn(Fn({}, lf), {}, {
                            validator: function(e) {
                                return xs(e) ? As(e.text) ? 0 !== e.text.length || (console.warn(sf({
                                    api: "createTextMessage",
                                    desc: "消息内容不能为空"
                                })), !1) : (console.warn(sf({
                                    api: "createTextMessage",
                                    param: "payload.text",
                                    desc: "类型必须为 String"
                                })), !1) : (console.warn(sf({
                                    api: "createTextMessage",
                                    param: "payload",
                                    desc: "类型必须为 plain object"
                                })), !1);
                            }
                        })
                    },
                    createTextAtMessage: {
                        to: cf,
                        conversationType: cf,
                        payload: Fn(Fn({}, lf), {}, {
                            validator: function(e) {
                                return xs(e) ? As(e.text) ? 0 === e.text.length ? (console.warn(sf({
                                    api: "createTextAtMessage",
                                    desc: "消息内容不能为空"
                                })), !1) : !(e.atUserList && !ws(e.atUserList)) || (console.warn(sf({
                                    api: "createTextAtMessage",
                                    desc: "payload.atUserList 类型必须为数组"
                                })), !1) : (console.warn(sf({
                                    api: "createTextAtMessage",
                                    param: "payload.text",
                                    desc: "类型必须为 String"
                                })), !1) : (console.warn(sf({
                                    api: "createTextAtMessage",
                                    param: "payload",
                                    desc: "类型必须为 plain object"
                                })), !1);
                            }
                        })
                    },
                    createCustomMessage: {
                        to: cf,
                        conversationType: cf,
                        payload: Fn(Fn({}, lf), {}, {
                            validator: function(e) {
                                return xs(e) ? e.data && !As(e.data) ? (console.warn(sf({
                                    api: "createCustomMessage",
                                    param: "payload.data",
                                    desc: "类型必须为 String"
                                })), !1) : e.description && !As(e.description) ? (console.warn(sf({
                                    api: "createCustomMessage",
                                    param: "payload.description",
                                    desc: "类型必须为 String"
                                })), !1) : !(e.extension && !As(e.extension)) || (console.warn(sf({
                                    api: "createCustomMessage",
                                    param: "payload.extension",
                                    desc: "类型必须为 String"
                                })), !1) : (console.warn(sf({
                                    api: "createCustomMessage",
                                    param: "payload",
                                    desc: "类型必须为 plain object"
                                })), !1);
                            }
                        })
                    },
                    createImageMessage: {
                        to: cf,
                        conversationType: cf,
                        payload: Fn(Fn({}, lf), {}, {
                            validator: function(e) {
                                if (!xs(e)) return console.warn(sf({
                                    api: "createImageMessage",
                                    param: "payload",
                                    desc: "类型必须为 plain object"
                                })), !1;
                                if (Ds(e.file)) return console.warn(sf({
                                    api: "createImageMessage",
                                    param: "payload.file",
                                    desc: "不能为 undefined"
                                })), !1;
                                if (qa) {
                                    if (!(e.file instanceof HTMLInputElement || Ts(e.file))) return console.warn(sf({
                                        api: "createImageMessage",
                                        param: "payload.file",
                                        desc: "类型必须是 HTMLInputElement 或 File"
                                    })), !1;
                                    if (e.file instanceof HTMLInputElement && 0 === e.file.files.length) return console.warn(sf({
                                        api: "createImageMessage",
                                        param: "payload.file",
                                        desc: "您没有选择文件，无法发送"
                                    })), !1;
                                }
                                return !0;
                            },
                            onProgress: {
                                type: "Function",
                                required: !1,
                                validator: function(e) {
                                    return Ds(e) && console.warn(sf({
                                        api: "createImageMessage",
                                        desc: "没有 onProgress 回调，您将无法获取上传进度"
                                    })), !0;
                                }
                            }
                        })
                    },
                    createAudioMessage: {
                        to: cf,
                        conversationType: cf,
                        payload: Fn(Fn({}, lf), {}, {
                            validator: function(e) {
                                return !!xs(e) || (console.warn(sf({
                                    api: "createAudioMessage",
                                    param: "payload",
                                    desc: "类型必须为 plain object"
                                })), !1);
                            }
                        }),
                        onProgress: {
                            type: "Function",
                            required: !1,
                            validator: function(e) {
                                return Ds(e) && console.warn(sf({
                                    api: "createAudioMessage",
                                    desc: "没有 onProgress 回调，您将无法获取上传进度"
                                })), !0;
                            }
                        }
                    },
                    createVideoMessage: {
                        to: cf,
                        conversationType: cf,
                        payload: Fn(Fn({}, lf), {}, {
                            validator: function(e) {
                                if (!xs(e)) return console.warn(sf({
                                    api: "createVideoMessage",
                                    param: "payload",
                                    desc: "类型必须为 plain object"
                                })), !1;
                                if (Ds(e.file)) return console.warn(sf({
                                    api: "createVideoMessage",
                                    param: "payload.file",
                                    desc: "不能为 undefined"
                                })), !1;
                                if (qa) {
                                    if (!(e.file instanceof HTMLInputElement || Ts(e.file))) return console.warn(sf({
                                        api: "createVideoMessage",
                                        param: "payload.file",
                                        desc: "类型必须是 HTMLInputElement 或 File"
                                    })), !1;
                                    if (e.file instanceof HTMLInputElement && 0 === e.file.files.length) return console.warn(sf({
                                        api: "createVideoMessage",
                                        param: "payload.file",
                                        desc: "您没有选择文件，无法发送"
                                    })), !1;
                                }
                                return !0;
                            }
                        }),
                        onProgress: {
                            type: "Function",
                            required: !1,
                            validator: function(e) {
                                return Ds(e) && console.warn(sf({
                                    api: "createVideoMessage",
                                    desc: "没有 onProgress 回调，您将无法获取上传进度"
                                })), !0;
                            }
                        }
                    },
                    createFaceMessage: {
                        to: cf,
                        conversationType: cf,
                        payload: Fn(Fn({}, lf), {}, {
                            validator: function(e) {
                                return xs(e) ? Es(e.index) ? !!As(e.data) || (console.warn(sf({
                                    api: "createFaceMessage",
                                    param: "payload.data",
                                    desc: "类型必须为 String"
                                })), !1) : (console.warn(sf({
                                    api: "createFaceMessage",
                                    param: "payload.index",
                                    desc: "类型必须为 Number"
                                })), !1) : (console.warn(sf({
                                    api: "createFaceMessage",
                                    param: "payload",
                                    desc: "类型必须为 plain object"
                                })), !1);
                            }
                        })
                    },
                    createFileMessage: {
                        to: cf,
                        conversationType: cf,
                        payload: Fn(Fn({}, lf), {}, {
                            validator: function(e) {
                                if (!xs(e)) return console.warn(sf({
                                    api: "createFileMessage",
                                    param: "payload",
                                    desc: "类型必须为 plain object"
                                })), !1;
                                if (Ds(e.file)) return console.warn(sf({
                                    api: "createFileMessage",
                                    param: "payload.file",
                                    desc: "不能为 undefined"
                                })), !1;
                                if (qa) {
                                    if (!(e.file instanceof HTMLInputElement || Ts(e.file))) return console.warn(sf({
                                        api: "createFileMessage",
                                        param: "payload.file",
                                        desc: "类型必须是 HTMLInputElement 或 File"
                                    })), !1;
                                    if (e.file instanceof HTMLInputElement && 0 === e.file.files.length) return console.warn(sf({
                                        api: "createFileMessage",
                                        desc: "您没有选择文件，无法发送"
                                    })), !1;
                                }
                                return !0;
                            }
                        }),
                        onProgress: {
                            type: "Function",
                            required: !1,
                            validator: function(e) {
                                return Ds(e) && console.warn(sf({
                                    api: "createFileMessage",
                                    desc: "没有 onProgress 回调，您将无法获取上传进度"
                                })), !0;
                            }
                        }
                    },
                    revokeMessage: [ Fn(Fn({
                        name: "message"
                    }, lf), {}, {
                        validator: function(e) {
                            return e instanceof rf ? e.conversationType === Tn.CONV_SYSTEM ? (console.warn("revokeMessage 不能撤回系统会话消息，只能撤回单聊消息或群消息"), 
                            !1) : !0 !== e.isRevoked || (console.warn("revokeMessage 消息已经被撤回，请勿重复操作"), !1) : (console.warn("revokeMessage 参数 message 必须为 Message(".concat(af, "Message.html) 实例。")), 
                            !1);
                        }
                    }) ],
                    getUserProfile: {
                        userIDList: {
                            type: "Array",
                            validator: function(e) {
                                return ws(e) ? (0 === e.length && console.warn(sf({
                                    api: "getUserProfile",
                                    param: "userIDList",
                                    desc: "不能为空数组"
                                })), !0) : (console.warn(sf({
                                    api: "getUserProfile",
                                    param: "userIDList",
                                    desc: "必须为数组"
                                })), !1);
                            }
                        }
                    },
                    updateMyProfile: {
                        profileCustomField: {
                            type: "Array",
                            validator: function(e) {
                                return !!Ds(e) || !!ws(e) || (console.warn(sf({
                                    api: "updateMyProfile",
                                    param: "profileCustomField",
                                    desc: "必须为数组"
                                })), !1);
                            }
                        }
                    }
                }, hf = {
                    login: "login",
                    logout: "logout",
                    on: "on",
                    once: "once",
                    off: "off",
                    setLogLevel: "setLogLevel",
                    registerPlugin: "registerPlugin",
                    destroy: "destroy",
                    createTextMessage: "createTextMessage",
                    createTextAtMessage: "createTextAtMessage",
                    createImageMessage: "createImageMessage",
                    createAudioMessage: "createAudioMessage",
                    createVideoMessage: "createVideoMessage",
                    createCustomMessage: "createCustomMessage",
                    createFaceMessage: "createFaceMessage",
                    createFileMessage: "createFileMessage",
                    sendMessage: "sendMessage",
                    resendMessage: "resendMessage",
                    getMessageList: "getMessageList",
                    setMessageRead: "setMessageRead",
                    revokeMessage: "revokeMessage",
                    getConversationList: "getConversationList",
                    getConversationProfile: "getConversationProfile",
                    deleteConversation: "deleteConversation",
                    getGroupList: "getGroupList",
                    getGroupProfile: "getGroupProfile",
                    createGroup: "createGroup",
                    joinGroup: "joinGroup",
                    updateGroupProfile: "updateGroupProfile",
                    quitGroup: "quitGroup",
                    dismissGroup: "dismissGroup",
                    changeGroupOwner: "changeGroupOwner",
                    searchGroupByID: "searchGroupByID",
                    setMessageRemindType: "setMessageRemindType",
                    handleGroupApplication: "handleGroupApplication",
                    getGroupMemberProfile: "getGroupMemberProfile",
                    getGroupMemberList: "getGroupMemberList",
                    addGroupMember: "addGroupMember",
                    deleteGroupMember: "deleteGroupMember",
                    setGroupMemberNameCard: "setGroupMemberNameCard",
                    setGroupMemberMuteTime: "setGroupMemberMuteTime",
                    setGroupMemberRole: "setGroupMemberRole",
                    setGroupMemberCustomField: "setGroupMemberCustomField",
                    getGroupOnlineMemberCount: "getGroupOnlineMemberCount",
                    getMyProfile: "getMyProfile",
                    getUserProfile: "getUserProfile",
                    updateMyProfile: "updateMyProfile",
                    getBlacklist: "getBlacklist",
                    addToBlacklist: "addToBlacklist",
                    removeFromBlacklist: "removeFromBlacklist",
                    getFriendList: "getFriendList",
                    callExperimentalAPI: "callExperimentalAPI"
                }, ff = !!Ao && i(function() {
                    Ao.prototype.finally.call({
                        then: function() {}
                    }, function() {});
                });
                Oe({
                    target: "Promise",
                    proto: !0,
                    real: !0,
                    forced: ff
                }, {
                    finally: function(e) {
                        var t = Lo(this, ie("Promise")), n = "function" == typeof e;
                        return this.then(n ? function(n) {
                            return vi(t, e()).then(function() {
                                return n;
                            });
                        } : e, n ? function(n) {
                            return vi(t, e()).then(function() {
                                throw n;
                            });
                        } : e);
                    }
                }), "function" != typeof Ao || Ao.prototype.finally || ne(Ao.prototype, "finally", ie("Promise").prototype.finally);
                var df = "1.7.3", gf = "537048168", mf = "10", vf = "protobuf", yf = "json", _f = 1, Sf = 2, If = 3, Mf = 4, Cf = {
                    HOST: {
                        CURRENT: {
                            COMMON: "https://webim.tim.qq.com",
                            PIC: "https://pic.tim.qq.com",
                            COS: "https://yun.tim.qq.com"
                        },
                        PRODUCTION: {
                            COMMON: "https://webim.tim.qq.com",
                            PIC: "https://pic.tim.qq.com",
                            COS: "https://yun.tim.qq.com"
                        },
                        OVERSEA_PRODUCTION: {
                            COMMON: "https://api.im.qcloud.com",
                            PIC: "https://api.im.qcloud.com",
                            COS: "https://api.im.qcloud.com"
                        },
                        SANDBOX: {
                            COMMON: "https://events.tim.qq.com",
                            PIC: "https://pic.tim.qq.com",
                            COS: "https://yun.tim.qq.com"
                        },
                        TEST: {
                            COMMON: "https://test.tim.qq.com",
                            PIC: "https://pic.tim.qq.com",
                            COS: "https://test.tim.qq.com"
                        },
                        setCurrent: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 3;
                            e === _f ? this.CURRENT = this.SANDBOX : e === Sf ? this.CURRENT = this.TEST : e === If ? this.CURRENT = this.PRODUCTION : e === Mf && (this.CURRENT = this.OVERSEA_PRODUCTION);
                        }
                    },
                    NAME: {
                        OPEN_IM: "openim",
                        GROUP: "group_open_http_svc",
                        FRIEND: "sns",
                        PROFILE: "profile",
                        RECENT_CONTACT: "recentcontact",
                        PIC: "openpic",
                        BIG_GROUP_NO_AUTH: "group_open_http_noauth_svc",
                        BIG_GROUP_LONG_POLLING: "group_open_long_polling_http_svc",
                        BIG_GROUP_LONG_POLLING_NO_AUTH: "group_open_long_polling_http_noauth_svc",
                        IM_OPEN_STAT: "imopenstat",
                        WEB_IM: "webim",
                        IM_COS_SIGN: "im_cos_sign_svr"
                    },
                    CMD: {
                        ACCESS_LAYER: "accesslayer",
                        LOGIN: "login",
                        LOGOUT_LONG_POLL: "longpollinglogout",
                        LOGOUT_ALL: "logout",
                        PORTRAIT_GET: "portrait_get_all",
                        PORTRAIT_SET: "portrait_set",
                        GET_LONG_POLL_ID: "getlongpollingid",
                        LONG_POLL: "longpolling",
                        AVCHATROOM_LONG_POLL: "get_msg",
                        FRIEND_ADD: "friend_add",
                        FRIEND_GET_ALL: "friend_get_all",
                        FRIEND_DELETE: "friend_delete",
                        RESPONSE_PENDENCY: "friend_response",
                        GET_PENDENCY: "pendency_get",
                        DELETE_PENDENCY: "pendency_delete",
                        GET_GROUP_PENDENCY: "get_pendency",
                        GET_BLACKLIST: "black_list_get",
                        ADD_BLACKLIST: "black_list_add",
                        DELETE_BLACKLIST: "black_list_delete",
                        CREATE_GROUP: "create_group",
                        GET_JOINED_GROUPS: "get_joined_group_list",
                        SEND_MESSAGE: "sendmsg",
                        REVOKE_C2C_MESSAGE: "msgwithdraw",
                        SEND_GROUP_MESSAGE: "send_group_msg",
                        REVOKE_GROUP_MESSAGE: "group_msg_recall",
                        GET_GROUP_INFO: "get_group_info",
                        GET_GROUP_MEMBER_INFO: "get_specified_group_member_info",
                        GET_GROUP_MEMBER_LIST: "get_group_member_info",
                        QUIT_GROUP: "quit_group",
                        CHANGE_GROUP_OWNER: "change_group_owner",
                        DESTROY_GROUP: "destroy_group",
                        ADD_GROUP_MEMBER: "add_group_member",
                        DELETE_GROUP_MEMBER: "delete_group_member",
                        SEARCH_GROUP_BY_ID: "get_group_public_info",
                        APPLY_JOIN_GROUP: "apply_join_group",
                        HANDLE_APPLY_JOIN_GROUP: "handle_apply_join_group",
                        MODIFY_GROUP_INFO: "modify_group_base_info",
                        MODIFY_GROUP_MEMBER_INFO: "modify_group_member_info",
                        DELETE_GROUP_SYSTEM_MESSAGE: "deletemsg",
                        DELETE_GROUP_AT_TIPS: "deletemsg",
                        GET_CONVERSATION_LIST: "get",
                        PAGING_GET_CONVERSATION_LIST: "page_get",
                        DELETE_CONVERSATION: "delete",
                        GET_MESSAGES: "getmsg",
                        GET_C2C_ROAM_MESSAGES: "getroammsg",
                        GET_GROUP_ROAM_MESSAGES: "group_msg_get",
                        SET_C2C_MESSAGE_READ: "msgreaded",
                        GET_PEER_READ_TIME: "get_peer_read_time",
                        SET_GROUP_MESSAGE_READ: "msg_read_report",
                        FILE_READ_AND_WRITE_AUTHKEY: "authkey",
                        FILE_UPLOAD: "pic_up",
                        COS_SIGN: "cos",
                        TIM_WEB_REPORT: "tim_web_report",
                        BIG_DATA_HALLWAY_AUTH_KEY: "authkey",
                        GET_ONLINE_MEMBER_NUM: "get_online_member_num"
                    },
                    CHANNEL: {
                        SOCKET: 1,
                        XHR: 2,
                        AUTO: 0
                    },
                    NAME_VERSION: {
                        openim: "v4",
                        group_open_http_svc: "v4",
                        sns: "v4",
                        profile: "v4",
                        recentcontact: "v4",
                        openpic: "v4",
                        group_open_http_noauth_svc: "v4",
                        group_open_long_polling_http_svc: "v4",
                        group_open_long_polling_http_noauth_svc: "v4",
                        imopenstat: "v4",
                        im_cos_sign_svr: "v4",
                        webim: "v4"
                    }
                };
                Cf.HOST.setCurrent(If);
                var Tf = {
                    request: {
                        toAccount: "To_Account",
                        fromAccount: "From_Account",
                        to: "To_Account",
                        from: "From_Account",
                        groupID: "GroupId",
                        avatar: "FaceUrl",
                        groupAtUserID: "GroupAt_Account"
                    },
                    response: {
                        GroupId: "groupID",
                        Member_Account: "userID",
                        MsgList: "messageList",
                        SyncFlag: "syncFlag",
                        To_Account: "to",
                        From_Account: "from",
                        MsgSeq: "sequence",
                        MsgRandom: "random",
                        MsgTimeStamp: "time",
                        MsgContent: "content",
                        MsgBody: "elements",
                        GroupWithdrawInfoArray: "revokedInfos",
                        WithdrawC2cMsgNotify: "c2cMessageRevokedNotify",
                        C2cWithdrawInfoArray: "revokedInfos",
                        C2cReadedReceipt: "c2cMessageReadReceipt",
                        LastReadTime: "peerReadTime",
                        MsgRand: "random",
                        MsgType: "type",
                        MsgShow: "messageShow",
                        NextMsgSeq: "nextMessageSeq",
                        FaceUrl: "avatar",
                        ProfileDataMod: "profileModify",
                        Profile_Account: "userID",
                        ValueBytes: "value",
                        ValueNum: "value",
                        NoticeSeq: "noticeSequence",
                        NotifySeq: "notifySequence",
                        MsgFrom_AccountExtraInfo: "messageFromAccountExtraInformation",
                        Operator_Account: "operatorID",
                        OpType: "operationType",
                        ReportType: "operationType",
                        UserId: "userID",
                        User_Account: "userID",
                        List_Account: "userIDList",
                        MsgOperatorMemberExtraInfo: "operatorInfo",
                        MsgMemberExtraInfo: "memberInfoList",
                        ImageUrl: "avatar",
                        NickName: "nick",
                        MsgGroupNewInfo: "newGroupProfile",
                        MsgAppDefinedData: "groupCustomField",
                        Owner_Account: "ownerID",
                        GroupName: "name",
                        GroupFaceUrl: "avatar",
                        GroupIntroduction: "introduction",
                        GroupNotification: "notification",
                        GroupApplyJoinOption: "joinOption",
                        MsgKey: "messageKey",
                        GroupInfo: "groupProfile",
                        ShutupTime: "muteTime",
                        Desc: "description",
                        Ext: "extension",
                        GroupAt_Account: "groupAtUserID"
                    },
                    ignoreKeyWord: [ "C2C", "ID", "USP" ]
                }, Ef = "_contextWasUpdated", Af = "_contextWasReset", bf = "_a2KeyAndTinyIDUpdated", xf = "_specifiedConfigUpdated", wf = "_noticeIsSynchronizing", Df = "_noticeIsSynchronized", kf = "_messageSent", Of = "_syncMessageProcessing", Lf = "_syncMessageFinished", Rf = "_receiveInstantMessage", Pf = "_receiveGroupInstantMessage", Nf = "_receveGroupSystemNotice", Gf = "_messageRevoked", Ff = "_longPollGetIDFailed", Uf = "_longPollRequestFailed", qf = "_longPollResponseOK", jf = "_longPollKickedOut", $f = "_longPollMitipuleDeviceKickedOut", Vf = "_longPollGetNewC2CNotice", Bf = "_longPollGetNewGroupMessages", Hf = "_longPollGetNewGroupTips", Kf = "_longPollGetNewGroupAtTips", zf = "_longPollGetNewGroupNotice", Wf = "_longPollGetNewFriendMessages", Yf = "_longPollProfileModified", Jf = " _longpollGroupMessageRevoked", Xf = "_longpollC2CMessageRevoked", Qf = "_longpollC2CMessageReadReceipt", Zf = "_avlongPollRequestFailed", ed = "_avlongPollResponseOK", td = "_onGroupListUpdated", nd = "_loginSuccess", rd = "_signLogoutExcuting", od = "_logoutSuccess", id = "_a2keyExpired", ad = "_errorHasBeenDetected", sd = "_onConversationListUpdated", cd = "_onConversationListProfileUpdated", ud = "_conversationDeleted", ld = "onProfileUpdated", pd = "joinAVChatRoomSuccess", hd = "joinAVChatRoomSuccessNoAuth", fd = "_sdkStateReady", dd = "_sdkReload", gd = at.filter, md = Je("filter"), vd = pt("filter");
                Oe({
                    target: "Array",
                    proto: !0,
                    forced: !md || !vd
                }, {
                    filter: function(e) {
                        return gd(this, e, arguments.length > 1 ? arguments[1] : void 0);
                    }
                });
                var yd = Xr.trim;
                function _d(e, t) {
                    if ("string" != typeof e && !Array.isArray(e)) throw new TypeError("Expected the input to be `string | string[]`");
                    var n;
                    return t = Object.assign({
                        pascalCase: !1
                    }, t), 0 === (e = Array.isArray(e) ? e.map(function(e) {
                        return e.trim();
                    }).filter(function(e) {
                        return e.length;
                    }).join("-") : e.trim()).length ? "" : 1 === e.length ? t.pascalCase ? e.toUpperCase() : e.toLowerCase() : (e !== e.toLowerCase() && (e = Sd(e)), 
                    e = e.replace(/^[_.\- ]+/, "").toLowerCase().replace(/[_.\- ]+(\w|$)/g, function(e, t) {
                        return t.toUpperCase();
                    }).replace(/\d+(\w|$)/g, function(e) {
                        return e.toUpperCase();
                    }), n = e, t.pascalCase ? n.charAt(0).toUpperCase() + n.slice(1) : n);
                }
                Oe({
                    target: "String",
                    proto: !0,
                    forced: function(e) {
                        return i(function() {
                            return !!Kr[e]() || "​᠎" != "​᠎"[e]() || Kr[e].name !== e;
                        });
                    }("trim")
                }, {
                    trim: function() {
                        return yd(this);
                    }
                });
                var Sd = function(e) {
                    for (var t = !1, n = !1, r = !1, o = 0; o < e.length; o++) {
                        var i = e[o];
                        t && /[a-zA-Z]/.test(i) && i.toUpperCase() === i ? (e = e.slice(0, o) + "-" + e.slice(o), 
                        t = !1, r = n, n = !0, o++) : n && r && /[a-zA-Z]/.test(i) && i.toLowerCase() === i ? (e = e.slice(0, o - 1) + "-" + e.slice(o - 1), 
                        r = n, n = !1, t = !0) : (t = i.toLowerCase() === i && i.toUpperCase() !== i, r = n, 
                        n = i.toUpperCase() === i && i.toLowerCase() !== i);
                    }
                    return e;
                };
                function Id(e, t, n) {
                    var r = [], o = 0, i = function e(t, n) {
                        if (++o > 10) return o--, t;
                        if (ws(t)) {
                            var i = t.map(function(t) {
                                return bs(t) ? e(t, n) : t;
                            });
                            return o--, i;
                        }
                        if (bs(t)) {
                            var a = (s = t, c = function(e, t) {
                                if (!Ps(t)) return !1;
                                if ((a = t) !== _d(a)) {
                                    for (var o = !0, i = 0; i < Tf.ignoreKeyWord.length; i++) if (t.includes(Tf.ignoreKeyWord[i])) {
                                        o = !1;
                                        break;
                                    }
                                    o && r.push(t);
                                }
                                var a;
                                return Ds(n[t]) ? function(e) {
                                    return "OPPOChannelID" === e ? e : e[0].toUpperCase() + _d(e).slice(1);
                                }(t) : n[t];
                            }, u = Object.create(null), Object.keys(s).forEach(function(e) {
                                var t = c(s[e], e);
                                t && (u[t] = s[e]);
                            }), u);
                            return a = tc(a, function(t, r) {
                                return ws(t) || bs(t) ? e(t, n) : t;
                            }), o--, a;
                        }
                        var s, c, u;
                    }(e, t = Fn(Fn({}, Tf.request), t));
                    return r.length > 0 && n.innerEmitter.emit(ad, {
                        code: Bp.CONVERTOR_IRREGULAR_PARAMS,
                        message: Hh
                    }), i;
                }
                function Md(e, t) {
                    if (t = Fn(Fn({}, Tf.response), t), ws(e)) return e.map(function(e) {
                        return bs(e) ? Md(e, t) : e;
                    });
                    if (bs(e)) {
                        var n = (r = e, o = function(e, n) {
                            return Ds(t[n]) ? _d(n) : t[n];
                        }, i = {}, Object.keys(r).forEach(function(e) {
                            i[o(r[e], e)] = r[e];
                        }), i);
                        return tc(n, function(e) {
                            return ws(e) || bs(e) ? Md(e, t) : e;
                        });
                    }
                    var r, o, i;
                }
                var Cd = function() {
                    function e(t) {
                        var n = this;
                        Ln(this, e), this.url = "", this.requestData = null, this.method = t.method || "POST", 
                        this.callback = function(e) {
                            return Md(e = t.decode(e), n._getResponseMap(t));
                        }, this._initializeServerMap(), this._initializeURL(t), this._initializeRequestData(t);
                    }
                    return Pn(e, [ {
                        key: "_initializeServerMap",
                        value: function() {
                            this._serverMap = Object.create(null);
                            var e = "";
                            for (var t in Cf.NAME) if (Object.prototype.hasOwnProperty.call(Cf.NAME, t)) switch (e = Cf.NAME[t]) {
                              case Cf.NAME.PIC:
                                this._serverMap[e] = Cf.HOST.CURRENT.PIC;
                                break;

                              case Cf.NAME.IM_COS_SIGN:
                                this._serverMap[e] = Cf.HOST.CURRENT.COS;
                                break;

                              default:
                                this._serverMap[e] = Cf.HOST.CURRENT.COMMON;
                            }
                        }
                    }, {
                        key: "_getHost",
                        value: function(e) {
                            if (void 0 !== this._serverMap[e]) return this._serverMap[e];
                            throw new Vp({
                                code: Bp.NETWORK_UNDEFINED_SERVER_NAME,
                                message: $h
                            });
                        }
                    }, {
                        key: "_initializeURL",
                        value: function(e) {
                            var t = e.serverName, n = e.cmd, r = this._getHost(t), o = "".concat(r, "/").concat(Cf.NAME_VERSION[t], "/").concat(t, "/").concat(n);
                            o += "?".concat(this._getQueryString(e.queryString)), this.url = o;
                        }
                    }, {
                        key: "getUrl",
                        value: function() {
                            return this.url.replace(/&reqtime=(\d+)/, "&reqtime=".concat(Math.ceil(+new Date() / 1e3)));
                        }
                    }, {
                        key: "_initializeRequestData",
                        value: function(e) {
                            var t, n = e.requestData;
                            t = this._requestDataCleaner(n), this.requestData = e.encode(t);
                        }
                    }, {
                        key: "_requestDataCleaner",
                        value: function(e) {
                            var t = Array.isArray(e) ? [] : Object.create(null);
                            for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && Ps(n) && null !== e[n] && ("object" !== On(e[n]) ? t[n] = e[n] : t[n] = this._requestDataCleaner.bind(this)(e[n]));
                            return t;
                        }
                    }, {
                        key: "_getQueryString",
                        value: function(e) {
                            var t = [];
                            for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && ("function" != typeof e[n] ? t.push("".concat(n, "=").concat(e[n])) : t.push("".concat(n, "=").concat(e[n]())));
                            return t.join("&");
                        }
                    }, {
                        key: "_getResponseMap",
                        value: function(e) {
                            if (e.keyMaps && e.keyMaps.response && Object.keys(e.keyMaps.response).length > 0) return e.keyMaps.response;
                        }
                    } ]), e;
                }(), Td = [].slice, Ed = /MSIE .\./.test(Be), Ad = function(e) {
                    return function(t, n) {
                        var r = arguments.length > 2, o = r ? Td.call(arguments, 2) : void 0;
                        return e(r ? function() {
                            ("function" == typeof t ? t : Function(t)).apply(this, o);
                        } : t, n);
                    };
                };
                function bd(e) {
                    this.mixin(e);
                }
                Oe({
                    global: !0,
                    bind: !0,
                    forced: Ed
                }, {
                    setTimeout: Ad(o.setTimeout),
                    setInterval: Ad(o.setInterval)
                }), bd.mixin = function(e) {
                    var t = e.prototype || e;
                    t._isReady = !1, t.ready = function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                        if (e) return this._isReady ? void (t ? e.call(this) : setTimeout(e, 1)) : (this._readyQueue = this._readyQueue || [], 
                        void this._readyQueue.push(e));
                    }, t.triggerReady = function() {
                        var e = this;
                        this._isReady = !0, setTimeout(function() {
                            var t = e._readyQueue;
                            e._readyQueue = [], t && t.length > 0 && t.forEach(function(e) {
                                e.call(this);
                            }, e);
                        }, 1);
                    }, t.resetReady = function() {
                        this._isReady = !1, this._readyQueue = [];
                    }, t.isReady = function() {
                        return this._isReady;
                    };
                };
                var xd = function() {
                    function e(t) {
                        Ln(this, e), bd.mixin(this), this.tim = t;
                    }
                    return Pn(e, [ {
                        key: "isLoggedIn",
                        value: function() {
                            return this.tim.context.login === Zc.IS_LOGIN || !!this.tim.context.a2Key;
                        }
                    }, {
                        key: "createTransportCapsule",
                        value: function(e) {
                            var t = this.tim.packageConfig.get(e);
                            return t ? new Cd(t) : null;
                        }
                    }, {
                        key: "request",
                        value: function(e) {
                            var t = this.createTransportCapsule(e);
                            return t || Cs.error("unknown transport capsule, please check!", e), this.tim.connectionController.request(t);
                        }
                    }, {
                        key: "emitInnerEvent",
                        value: function(e, t) {
                            this.tim.innerEmitter.emit(e, t);
                        }
                    }, {
                        key: "emitOuterEvent",
                        value: function(e, t) {
                            this.tim.outerEmitter.emit(e, t);
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            Cs.warn([ "method: IMController.reset() method must be implemented" ].join());
                        }
                    }, {
                        key: "probeNetwork",
                        value: function() {
                            return this.tim.netMonitor.probe();
                        }
                    }, {
                        key: "getNetworkType",
                        value: function() {
                            return this.tim.netMonitor.getNetworkType();
                        }
                    }, {
                        key: "getPlatform",
                        value: function() {
                            return Wa;
                        }
                    } ]), e;
                }(), wd = function() {
                    function e(t, n) {
                        Ln(this, e), this.data = t, this._innerEmitter = n, this.defaultData = {}, Object.assign(this.defaultData, t), 
                        this.initGetterAndSetter();
                    }
                    return Pn(e, [ {
                        key: "initGetterAndSetter",
                        value: function() {
                            var e = this, t = function(t) {
                                Object.defineProperty(e, t, {
                                    enumerable: !0,
                                    configurable: !0,
                                    get: function() {
                                        return e.data[t];
                                    },
                                    set: function(n) {
                                        e.data[t] !== n && (e.data[t] = n, e.onChange.bind(e)(t, n));
                                    }
                                });
                            };
                            for (var n in e.data) Object.prototype.hasOwnProperty.call(e.data, n) && t(n);
                        }
                    }, {
                        key: "onChange",
                        value: function(e, t) {
                            this._innerEmitter.emit(Ef, {
                                key: e,
                                value: t
                            });
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            for (var e in Cs.log("Context.reset"), this.data) Object.prototype.hasOwnProperty.call(this.data, e) && (this.data[e] = this.defaultData.hasOwnProperty(e) ? this.defaultData[e] : null);
                        }
                    } ]), e;
                }(), Dd = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n(e) {
                        var r;
                        Ln(this, n);
                        var o = (r = t.call(this, e)).tim.loginInfo;
                        return r._context = new wd({
                            login: Zc.IS_NOT_LOGIN,
                            SDKAppID: o.SDKAppID,
                            appIDAt3rd: null,
                            accountType: o.accountType,
                            identifier: o.identifier,
                            tinyID: null,
                            identifierNick: o.identifierNick,
                            userSig: o.userSig,
                            a2Key: null,
                            contentType: "json",
                            apn: 1,
                            unlimitedAVChatRoom: o.unlimitedAVChatRoom,
                            scene: o.scene,
                            oversea: o.oversea,
                            instanceID: o.instanceID
                        }, r.tim.innerEmitter), r._initListener(), r;
                    }
                    return Pn(n, [ {
                        key: "reset",
                        value: function() {
                            this._context.reset(), this.emitInnerEvent(Af);
                        }
                    }, {
                        key: "_initListener",
                        value: function() {
                            this.tim.innerEmitter.on(Ef, this._onContextMemberChange, this), this.tim.innerEmitter.on(nd, this._updateA2KeyAndTinyID, this);
                        }
                    }, {
                        key: "_updateA2KeyAndTinyID",
                        value: function(e) {
                            var t = e.data, n = t.a2Key, r = t.tinyID;
                            this._context.a2Key = n, this._context.tinyID = r, this.emitInnerEvent(bf), this.triggerReady();
                        }
                    }, {
                        key: "getContext",
                        value: function() {
                            return this._context;
                        }
                    }, {
                        key: "_onContextMemberChange",
                        value: function(e) {
                            var t = e.data, n = t.key, r = t.value;
                            ("tinyID" === n || "a2Key" === n) && (r.length <= 0 ? this._context.login = Zc.IS_NOT_LOGIN : this._context.login = null !== this._context.a2Key ? Zc.IS_LOGIN : Zc.IS_NOT_LOGIN);
                        }
                    } ]), n;
                }(xd), kd = function e(t) {
                    Ln(this, e), this.code = 0, this.data = t || {};
                }, Od = null, Ld = function(e) {
                    Od = e;
                }, Rd = function(e) {
                    return e instanceof kd ? (Cs.warn("IMPromise.resolve 此函数会自动用options创建IMResponse实例，调用侧不需创建，建议修改！"), 
                    Promise.resolve(e)) : Promise.resolve(new kd(e));
                }, Pd = function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    if (e instanceof Vp) return t && null !== Od && Od.emit(Cn.ERROR, e), Promise.reject(e);
                    if (e instanceof Error) {
                        var n = new Vp({
                            code: Bp.UNCAUGHT_ERROR,
                            message: e.message
                        });
                        return t && null !== Od && Od.emit(Cn.ERROR, n), Promise.reject(n);
                    }
                    if (Ds(e) || Ds(e.code) || Ds(e.message)) Cs.error("IMPromise.reject 必须指定code(错误码)和message(错误信息)!!!"); else {
                        if (Es(e.code) && As(e.message)) {
                            var r = new Vp(e);
                            return t && null !== Od && Od.emit(Cn.ERROR, r), Promise.reject(r);
                        }
                        Cs.error("IMPromise.reject code(错误码)必须为数字，message(错误信息)必须为字符串!!!");
                    }
                }, Nd = "sdkReady", Gd = "login", Fd = "longpolling", Ud = "longpollingAV", qd = "sendMessage", jd = "sendMessageC2C", $d = "sendMessageGroupWork", Vd = "sendMessageGroupPublic", Bd = "sendMessageGroupMeeting", Hd = "sendMessageGroupAV", Kd = "messageReceived", zd = "messageReceivedAV", Wd = "initConversationList", Yd = "initGroupList", Jd = "upload", Xd = function() {
                    function e(t) {
                        Ln(this, e), this.SDKAppID = "", this.version = "", this.tinyID = "", this.userID = "", 
                        this.platform = "", this.method = t, this.time = "", this.startts = Date.now(), 
                        this.endts = 0, this.timespan = 0, this.codeint = 0, this.message = "", this.text = "", 
                        this.msgType = "", this.networkType = "", this.platform = "", this.scene = "", this._sentFlag = !1, 
                        this.instanceID = "", this.host = function() {
                            var e = "unknown";
                            if (cs && (e = "mac"), ss && (e = "windows"), es && (e = "ios"), ts && (e = "android"), 
                            Ka) try {
                                var t = za.getSystemInfoSync().platform;
                                void 0 !== t && (e = t);
                            } catch (f_) {}
                            return e;
                        }(), this.mpLibVersion = function() {
                            if (Ka) try {
                                var e;
                                return void 0 === (e = Ha ? my.getSystemInfoSync().version : za.getSystemInfoSync().SDKVersion) ? "-" : e;
                            } catch (f_) {
                                return "-";
                            }
                            return "-";
                        }();
                    }
                    return Pn(e, [ {
                        key: "setCommonInfo",
                        value: function(e) {
                            var t = e.SDKAppID, n = e.version, r = e.tinyID, o = e.userID, i = e.platform, a = e.scene, s = e.instanceID;
                            this.SDKAppID = "".concat(t), this.version = "".concat(n), this.tinyID = r, this.userID = o, 
                            this.platform = i, this.scene = a, this.time = qs(), this.instanceID = s, this.startts && this.endts && !this.timespan && (this.timespan = Math.abs(this.endts - this.startts));
                        }
                    }, {
                        key: "setEnd",
                        value: function() {
                            var e = this, t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                            this._sentFlag || (this.endts = Date.now(), t ? (this._sentFlag = !0, this._eventStatController.pushIn(this)) : setTimeout(function() {
                                e._sentFlag = !0, e._eventStatController.pushIn(e);
                            }, 0));
                        }
                    }, {
                        key: "setError",
                        value: function(e, t, n) {
                            return e instanceof Error ? (this._sentFlag || (this.setNetworkType(n), t ? (e.code && this.setCode(e.code), 
                            e.message && this.setMessage(e.message)) : (this.setCode(Bp.NO_NETWORK), this.setMessage(Bh))), 
                            this) : (Cs.warn("SSOLogData.setError value not instanceof Error, please check!"), 
                            this);
                        }
                    }, {
                        key: "setCode",
                        value: function(e) {
                            return Ds(e) || this._sentFlag || ("ECONNABORTED" === e && (this.codeint = 103), 
                            Es(e) ? this.codeint = e : Cs.warn("SSOLogData.setCode value not a number, please check!", e, On(e))), 
                            this;
                        }
                    }, {
                        key: "setMessage",
                        value: function(e) {
                            return Ds(e) || this._sentFlag ? this : As(e) ? (this.message = e, this) : this;
                        }
                    }, {
                        key: "setText",
                        value: function(e) {
                            return Es(e) ? this.text = e.toString() : As(e) && (this.text = e), this;
                        }
                    }, {
                        key: "setMessageType",
                        value: function(e) {
                            return this.msgType = e, this;
                        }
                    }, {
                        key: "setNetworkType",
                        value: function(e) {
                            return Ds(e) ? Cs.warn("SSOLogData.setNetworkType value is undefined, please check!") : this.networkType = e, 
                            this;
                        }
                    } ], [ {
                        key: "bindController",
                        value: function(t) {
                            e.prototype._eventStatController = t;
                        }
                    } ]), e;
                }(), Qd = "sdkConstruct", Zd = "sdkReady", eg = "accessLayer", tg = "login", ng = "logout", rg = "kickedOut", og = "registerPlugin", ig = "getCosAuthKey", ag = "upload", sg = "sendMessage", cg = "sendComboMessage", ug = "getC2CRoamingMessages", lg = "getGroupRoamingMessages", pg = "revokeMessage", hg = "setC2CMessageRead", fg = "setGroupMessageRead", dg = "emptyMessageBody", gg = "getPeerReadTime", mg = "getConversationList", vg = "getConversationProfile", yg = "deleteConversation", _g = "getConversationListInStorage", Sg = "syncConversationList", Ig = "createGroup", Mg = "applyJoinGroup", Cg = "joinAVChatRoomSilently", Tg = "quitGroup", Eg = "searchGroupByID", Ag = "changeGroupOwner", bg = "handleGroupApplication", xg = "setMessageRemindType", wg = "dismissGroup", Dg = "updateGroupProfile", kg = "getGroupList", Og = "getGroupProfile", Lg = "getGroupListInStorage", Rg = "getGroupLastSequence", Pg = "getGroupMemberList", Ng = "getGroupMemberProfile", Gg = "addGroupMember", Fg = "deleteGroupMember", Ug = "setGroupMemberMuteTime", qg = "setGroupMemberNameCard", jg = "setGroupMemberRole", $g = "setGroupMemberCustomField", Vg = "getGroupOnlineMemberCount", Bg = "getLongPollID", Hg = "longPollingError", Kg = "networkJitter", zg = "sdkReload", Wg = "messageLoss", Yg = "messageStacked", Jg = "getUserProfile", Xg = "updateMyProfile", Qg = "getBlacklist", Zg = "addToBlacklist", em = "removeFromBlacklist", tm = "mpHideToShow", nm = "callbackFunctionError", rm = "exceptionError", om = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n(e) {
                        var r;
                        return Ln(this, n), !0 === (r = t.call(this, e)).tim.context.oversea && Cf.HOST.setCurrent(Mf), 
                        r._initializeListener(), r;
                    }
                    return Pn(n, [ {
                        key: "login",
                        value: function(e) {
                            if (this.isLoggedIn()) {
                                var t = "您已经登录账号".concat(e.identifier, "！如需切换账号登录，请先调用 logout 接口登出，再调用 login 接口登录。");
                                return Cs.warn(t), Rd({
                                    actionStatus: "OK",
                                    errorCode: 0,
                                    errorInfo: t,
                                    repeatLogin: !0
                                });
                            }
                            Cs.log("SignController.login userID=".concat(e.identifier)), Cs.time(Gd);
                            var n = this._checkLoginInfo(e);
                            return ac(n) ? (this.tim.context.identifier = e.identifier, this.tim.context.userSig = e.userSig, 
                            this.tim.context.identifier && this.tim.context.userSig ? this._accessLayer() : void 0) : Pd(n);
                        }
                    }, {
                        key: "_isLoginCurrentUser",
                        value: function(e) {
                            return this.tim.context.identifier === e;
                        }
                    }, {
                        key: "_initializeListener",
                        value: function() {
                            var e = this.tim.innerEmitter;
                            e.on(jf, this._onMultipleAccountKickedOut, this), e.on($f, this._onMultipleDeviceKickedOut, this), 
                            e.on(id, this._onUserSigExpired, this);
                        }
                    }, {
                        key: "_accessLayer",
                        value: function() {
                            var e = this, t = new Xd(eg);
                            return Cs.log("SignController._accessLayer."), this.request({
                                name: "accessLayer",
                                action: "query"
                            }).then(function(n) {
                                return t.setNetworkType(e.getNetworkType()).setText(n.data.webImAccessLayer).setEnd(), 
                                Cs.log("SignController._accessLayer ok. webImAccessLayer=".concat(n.data.webImAccessLayer)), 
                                e.tim.context.oversea || n.data.webImAccessLayer !== _f || Cf.HOST.setCurrent(n.data.webImAccessLayer), 
                                e._login();
                            }).catch(function(n) {
                                return e.probeNetwork().then(function(r) {
                                    var o = Yn(r, 2), i = o[0], a = o[1];
                                    t.setError(n, i, a).setEnd(!0), e.tim.eventStatController.reportAtOnce();
                                }), Cs.error("SignController._accessLayer failed. error:", n), Pd(n);
                            });
                        }
                    }, {
                        key: "_login",
                        value: function() {
                            var e = this, t = new Xd(tg);
                            return this.request({
                                name: "login",
                                action: "query"
                            }).then(function(n) {
                                var r = null;
                                if (!n.data.tinyID) throw r = new Vp({
                                    code: Bp.NO_TINYID,
                                    message: Yp
                                }), t.setError(r, !0, e.getNetworkType()).setEnd(), r;
                                if (!n.data.a2Key) throw r = new Vp({
                                    code: Bp.NO_A2KEY,
                                    message: Jp
                                }), t.setError(r, !0, e.getNetworkType()).setEnd(), r;
                                return t.setNetworkType(e.getNetworkType()).setText("".concat(e.tim.loginInfo.identifier)).setEnd(), 
                                Cs.log("SignController.login ok. userID=".concat(e.tim.loginInfo.identifier, " loginCost=").concat(Cs.timeEnd(Gd), "ms")), 
                                e.emitInnerEvent(nd, {
                                    a2Key: n.data.a2Key,
                                    tinyID: n.data.tinyID
                                }), Rd(n.data);
                            }).catch(function(n) {
                                return e.probeNetwork().then(function(e) {
                                    var r = Yn(e, 2), o = r[0], i = r[1];
                                    t.setError(n, o, i).setEnd(!0);
                                }), Cs.error("SignController.login failed. error:", n), Pd(n);
                            });
                        }
                    }, {
                        key: "logout",
                        value: function() {
                            return this.isLoggedIn() ? (new Xd(ng).setNetworkType(this.getNetworkType()).setText("userID=".concat(this.tim.loginInfo.identifier, " type=").concat("longPollLogout")).setEnd(!0), 
                            Cs.info("SignController.logout"), this.emitInnerEvent(rd), this._logout(Ip).then(this._emitLogoutSuccess.bind(this)).catch(this._emitLogoutSuccess.bind(this))) : Pd({
                                code: Bp.USER_NOT_LOGGED_IN,
                                message: Xp
                            });
                        }
                    }, {
                        key: "_logout",
                        value: function(e) {
                            var t = this.tim.notificationController, n = e === Sp ? "logout" : "longPollLogout", r = e === Sp ? {
                                name: n,
                                action: "query"
                            } : {
                                name: n,
                                action: "query",
                                param: {
                                    longPollID: t.getLongPollID()
                                }
                            };
                            return this.request(r).catch(function(e) {
                                return Cs.error("SignController._logout error:", e), Pd(e);
                            });
                        }
                    }, {
                        key: "_checkLoginInfo",
                        value: function(e) {
                            var t = 0, n = "";
                            return null === e.SDKAppID ? (t = Bp.NO_SDKAPPID, n = Hp) : null === e.accountType ? (t = Bp.NO_ACCOUNT_TYPE, 
                            n = Kp) : null === e.identifier ? (t = Bp.NO_IDENTIFIER, n = zp) : null === e.userSig && (t = Bp.NO_USERSIG, 
                            n = Wp), ac(t) || ac(n) ? {} : {
                                code: t,
                                message: n
                            };
                        }
                    }, {
                        key: "_emitLogoutSuccess",
                        value: function() {
                            return this.emitInnerEvent(od), Rd({});
                        }
                    }, {
                        key: "_onMultipleAccountKickedOut",
                        value: function() {
                            var e = this;
                            new Xd(rg).setNetworkType(this.getNetworkType()).setText(Tn.KICKED_OUT_MULT_ACCOUNT).setEnd(!0), 
                            Cs.warn("SignController._onMultipleAccountKickedOut kicked out. userID=".concat(this.tim.loginInfo.identifier)), 
                            this.tim.logout().then(function() {
                                e.emitOuterEvent(Cn.KICKED_OUT, {
                                    type: Tn.KICKED_OUT_MULT_ACCOUNT
                                });
                            });
                        }
                    }, {
                        key: "_onMultipleDeviceKickedOut",
                        value: function() {
                            var e = this;
                            new Xd(rg).setNetworkType(this.getNetworkType()).setText(Tn.KICKED_OUT_MULT_DEVICE).setEnd(!0), 
                            Cs.warn("SignController._onMultipleDeviceKickedOut kicked out. userID=".concat(this.tim.loginInfo.identifier)), 
                            this.tim.logout().then(function() {
                                e.emitOuterEvent(Cn.KICKED_OUT, {
                                    type: Tn.KICKED_OUT_MULT_DEVICE
                                });
                            });
                        }
                    }, {
                        key: "_onUserSigExpired",
                        value: function() {
                            new Xd(rg).setNetworkType(this.getNetworkType()).setText(Tn.KICKED_OUT_USERSIG_EXPIRED).setEnd(!0), 
                            Cs.warn("SignController._onUserSigExpired: userSig 签名过期被踢下线"), this.emitOuterEvent(Cn.KICKED_OUT, {
                                type: Tn.KICKED_OUT_USERSIG_EXPIRED
                            }), this.tim.resetSDK();
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            Cs.info("SignController.reset");
                        }
                    } ]), n;
                }(xd), im = function(e, t) {
                    return function() {
                        for (var n = new Array(arguments.length), r = 0; r < n.length; r++) n[r] = arguments[r];
                        return e.apply(t, n);
                    };
                }, am = Object.prototype.toString;
                function sm(e) {
                    return "[object Array]" === am.call(e);
                }
                function cm(e) {
                    return void 0 === e;
                }
                function um(e) {
                    return null !== e && "object" == typeof e;
                }
                function lm(e) {
                    return "[object Function]" === am.call(e);
                }
                function pm(e, t) {
                    if (null != e) if ("object" != typeof e && (e = [ e ]), sm(e)) for (var n = 0, r = e.length; n < r; n++) t.call(null, e[n], n, e); else for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && t.call(null, e[o], o, e);
                }
                var hm = {
                    isArray: sm,
                    isArrayBuffer: function(e) {
                        return "[object ArrayBuffer]" === am.call(e);
                    },
                    isBuffer: function(e) {
                        return null !== e && !cm(e) && null !== e.constructor && !cm(e.constructor) && "function" == typeof e.constructor.isBuffer && e.constructor.isBuffer(e);
                    },
                    isFormData: function(e) {
                        return "undefined" != typeof FormData && e instanceof FormData;
                    },
                    isArrayBufferView: function(e) {
                        return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(e) : e && e.buffer && e.buffer instanceof ArrayBuffer;
                    },
                    isString: function(e) {
                        return "string" == typeof e;
                    },
                    isNumber: function(e) {
                        return "number" == typeof e;
                    },
                    isObject: um,
                    isUndefined: cm,
                    isDate: function(e) {
                        return "[object Date]" === am.call(e);
                    },
                    isFile: function(e) {
                        return "[object File]" === am.call(e);
                    },
                    isBlob: function(e) {
                        return "[object Blob]" === am.call(e);
                    },
                    isFunction: lm,
                    isStream: function(e) {
                        return um(e) && lm(e.pipe);
                    },
                    isURLSearchParams: function(e) {
                        return "undefined" != typeof URLSearchParams && e instanceof URLSearchParams;
                    },
                    isStandardBrowserEnv: function() {
                        return ("undefined" == typeof navigator || "ReactNative" !== navigator.product && "NativeScript" !== navigator.product && "NS" !== navigator.product) && "undefined" != typeof window && "undefined" != typeof document;
                    },
                    forEach: pm,
                    merge: function e() {
                        var t = {};
                        function n(n, r) {
                            "object" == typeof t[r] && "object" == typeof n ? t[r] = e(t[r], n) : t[r] = n;
                        }
                        for (var r = 0, o = arguments.length; r < o; r++) pm(arguments[r], n);
                        return t;
                    },
                    deepMerge: function e() {
                        var t = {};
                        function n(n, r) {
                            "object" == typeof t[r] && "object" == typeof n ? t[r] = e(t[r], n) : t[r] = "object" == typeof n ? e({}, n) : n;
                        }
                        for (var r = 0, o = arguments.length; r < o; r++) pm(arguments[r], n);
                        return t;
                    },
                    extend: function(e, t, n) {
                        return pm(t, function(t, r) {
                            e[r] = n && "function" == typeof t ? im(t, n) : t;
                        }), e;
                    },
                    trim: function(e) {
                        return e.replace(/^\s*/, "").replace(/\s*$/, "");
                    }
                };
                function fm(e) {
                    return encodeURIComponent(e).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
                }
                var dm = function(e, t, n) {
                    if (!t) return e;
                    var r;
                    if (n) r = n(t); else if (hm.isURLSearchParams(t)) r = t.toString(); else {
                        var o = [];
                        hm.forEach(t, function(e, t) {
                            null != e && (hm.isArray(e) ? t += "[]" : e = [ e ], hm.forEach(e, function(e) {
                                hm.isDate(e) ? e = e.toISOString() : hm.isObject(e) && (e = JSON.stringify(e)), 
                                o.push(fm(t) + "=" + fm(e));
                            }));
                        }), r = o.join("&");
                    }
                    if (r) {
                        var i = e.indexOf("#");
                        -1 !== i && (e = e.slice(0, i)), e += (-1 === e.indexOf("?") ? "?" : "&") + r;
                    }
                    return e;
                };
                function gm() {
                    this.handlers = [];
                }
                gm.prototype.use = function(e, t) {
                    return this.handlers.push({
                        fulfilled: e,
                        rejected: t
                    }), this.handlers.length - 1;
                }, gm.prototype.eject = function(e) {
                    this.handlers[e] && (this.handlers[e] = null);
                }, gm.prototype.forEach = function(e) {
                    hm.forEach(this.handlers, function(t) {
                        null !== t && e(t);
                    });
                };
                var mm = gm, vm = function(e, t, n) {
                    return hm.forEach(n, function(n) {
                        e = n(e, t);
                    }), e;
                }, ym = function(e) {
                    return !(!e || !e.__CANCEL__);
                };
                function _m() {
                    throw new Error("setTimeout has not been defined");
                }
                function Sm() {
                    throw new Error("clearTimeout has not been defined");
                }
                var Im = _m, Mm = Sm;
                function Cm(e) {
                    if (Im === setTimeout) return setTimeout(e, 0);
                    if ((Im === _m || !Im) && setTimeout) return Im = setTimeout, setTimeout(e, 0);
                    try {
                        return Im(e, 0);
                    } catch (n) {
                        try {
                            return Im.call(null, e, 0);
                        } catch (n) {
                            return Im.call(this, e, 0);
                        }
                    }
                }
                "function" == typeof gs.setTimeout && (Im = setTimeout), "function" == typeof gs.clearTimeout && (Mm = clearTimeout);
                var Tm, Em = [], Am = !1, bm = -1;
                function xm() {
                    Am && Tm && (Am = !1, Tm.length ? Em = Tm.concat(Em) : bm = -1, Em.length && wm());
                }
                function wm() {
                    if (!Am) {
                        var e = Cm(xm);
                        Am = !0;
                        for (var t = Em.length; t; ) {
                            for (Tm = Em, Em = []; ++bm < t; ) Tm && Tm[bm].run();
                            bm = -1, t = Em.length;
                        }
                        Tm = null, Am = !1, function(e) {
                            if (Mm === clearTimeout) return clearTimeout(e);
                            if ((Mm === Sm || !Mm) && clearTimeout) return Mm = clearTimeout, clearTimeout(e);
                            try {
                                Mm(e);
                            } catch (t) {
                                try {
                                    return Mm.call(null, e);
                                } catch (t) {
                                    return Mm.call(this, e);
                                }
                            }
                        }(e);
                    }
                }
                function Dm(e, t) {
                    this.fun = e, this.array = t;
                }
                function km() {}
                Dm.prototype.run = function() {
                    this.fun.apply(null, this.array);
                };
                var Om = km, Lm = km, Rm = km, Pm = km, Nm = km, Gm = km, Fm = km, Um = gs.performance || {}, qm = Um.now || Um.mozNow || Um.msNow || Um.oNow || Um.webkitNow || function() {
                    return new Date().getTime();
                }, jm = new Date(), $m = {
                    nextTick: function(e) {
                        var t = new Array(arguments.length - 1);
                        if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
                        Em.push(new Dm(e, t)), 1 !== Em.length || Am || Cm(wm);
                    },
                    title: "browser",
                    browser: !0,
                    env: {},
                    argv: [],
                    version: "",
                    versions: {},
                    on: Om,
                    addListener: Lm,
                    once: Rm,
                    off: Pm,
                    removeListener: Nm,
                    removeAllListeners: Gm,
                    emit: Fm,
                    binding: function(e) {
                        throw new Error("process.binding is not supported");
                    },
                    cwd: function() {
                        return "/";
                    },
                    chdir: function(e) {
                        throw new Error("process.chdir is not supported");
                    },
                    umask: function() {
                        return 0;
                    },
                    hrtime: function(e) {
                        var t = .001 * qm.call(Um), n = Math.floor(t), r = Math.floor(t % 1 * 1e9);
                        return e && (n -= e[0], (r -= e[1]) < 0 && (n--, r += 1e9)), [ n, r ];
                    },
                    platform: "browser",
                    release: {},
                    config: {},
                    uptime: function() {
                        return (new Date() - jm) / 1e3;
                    }
                }, Vm = function(e, t) {
                    hm.forEach(e, function(n, r) {
                        r !== t && r.toUpperCase() === t.toUpperCase() && (e[t] = n, delete e[r]);
                    });
                }, Bm = function(e, t, n, r, o) {
                    return function(e, t, n, r, o) {
                        return e.config = t, n && (e.code = n), e.request = r, e.response = o, e.isAxiosError = !0, 
                        e.toJSON = function() {
                            return {
                                message: this.message,
                                name: this.name,
                                description: this.description,
                                number: this.number,
                                fileName: this.fileName,
                                lineNumber: this.lineNumber,
                                columnNumber: this.columnNumber,
                                stack: this.stack,
                                config: this.config,
                                code: this.code
                            };
                        }, e;
                    }(new Error(e), t, n, r, o);
                }, Hm = [ "age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent" ], Km = hm.isStandardBrowserEnv() ? function() {
                    var e, t = /(msie|trident)/i.test(navigator.userAgent), n = document.createElement("a");
                    function r(e) {
                        var r = e;
                        return t && (n.setAttribute("href", r), r = n.href), n.setAttribute("href", r), 
                        {
                            href: n.href,
                            protocol: n.protocol ? n.protocol.replace(/:$/, "") : "",
                            host: n.host,
                            search: n.search ? n.search.replace(/^\?/, "") : "",
                            hash: n.hash ? n.hash.replace(/^#/, "") : "",
                            hostname: n.hostname,
                            port: n.port,
                            pathname: "/" === n.pathname.charAt(0) ? n.pathname : "/" + n.pathname
                        };
                    }
                    return e = r(window.location.href), function(t) {
                        var n = hm.isString(t) ? r(t) : t;
                        return n.protocol === e.protocol && n.host === e.host;
                    };
                }() : function() {
                    return !0;
                }, zm = hm.isStandardBrowserEnv() ? {
                    write: function(e, t, n, r, o, i) {
                        var a = [];
                        a.push(e + "=" + encodeURIComponent(t)), hm.isNumber(n) && a.push("expires=" + new Date(n).toGMTString()), 
                        hm.isString(r) && a.push("path=" + r), hm.isString(o) && a.push("domain=" + o), 
                        !0 === i && a.push("secure"), document.cookie = a.join("; ");
                    },
                    read: function(e) {
                        var t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
                        return t ? decodeURIComponent(t[3]) : null;
                    },
                    remove: function(e) {
                        this.write(e, "", Date.now() - 864e5);
                    }
                } : {
                    write: function() {},
                    read: function() {
                        return null;
                    },
                    remove: function() {}
                }, Wm = function(e) {
                    return new Promise(function(t, n) {
                        var r = e.data, o = e.headers;
                        hm.isFormData(r) && delete o["Content-Type"];
                        var i = new XMLHttpRequest();
                        if (e.auth) {
                            var a = e.auth.username || "", s = e.auth.password || "";
                            o.Authorization = "Basic " + btoa(a + ":" + s);
                        }
                        var c, u, l = (c = e.baseURL, u = e.url, c && !/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(u) ? function(e, t) {
                            return t ? e.replace(/\/+$/, "") + "/" + t.replace(/^\/+/, "") : e;
                        }(c, u) : u);
                        if (i.open(e.method.toUpperCase(), dm(l, e.params, e.paramsSerializer), !0), i.timeout = e.timeout, 
                        i.onreadystatechange = function() {
                            if (i && 4 === i.readyState && (0 !== i.status || i.responseURL && 0 === i.responseURL.indexOf("file:"))) {
                                var r = "getAllResponseHeaders" in i ? function(e) {
                                    var t, n, r, o = {};
                                    return e ? (hm.forEach(e.split("\n"), function(e) {
                                        if (r = e.indexOf(":"), t = hm.trim(e.substr(0, r)).toLowerCase(), n = hm.trim(e.substr(r + 1)), 
                                        t) {
                                            if (o[t] && Hm.indexOf(t) >= 0) return;
                                            o[t] = "set-cookie" === t ? (o[t] ? o[t] : []).concat([ n ]) : o[t] ? o[t] + ", " + n : n;
                                        }
                                    }), o) : o;
                                }(i.getAllResponseHeaders()) : null, o = {
                                    data: e.responseType && "text" !== e.responseType ? i.response : i.responseText,
                                    status: i.status,
                                    statusText: i.statusText,
                                    headers: r,
                                    config: e,
                                    request: i
                                };
                                !function(e, t, n) {
                                    var r = n.config.validateStatus;
                                    !r || r(n.status) ? e(n) : t(Bm("Request failed with status code " + n.status, n.config, null, n.request, n));
                                }(t, n, o), i = null;
                            }
                        }, i.onabort = function() {
                            i && (n(Bm("Request aborted", e, "ECONNABORTED", i)), i = null);
                        }, i.onerror = function() {
                            n(Bm("Network Error", e, null, i)), i = null;
                        }, i.ontimeout = function() {
                            var t = "timeout of " + e.timeout + "ms exceeded";
                            e.timeoutErrorMessage && (t = e.timeoutErrorMessage), n(Bm(t, e, "ECONNABORTED", i)), 
                            i = null;
                        }, hm.isStandardBrowserEnv()) {
                            var p = zm, h = (e.withCredentials || Km(l)) && e.xsrfCookieName ? p.read(e.xsrfCookieName) : void 0;
                            h && (o[e.xsrfHeaderName] = h);
                        }
                        if ("setRequestHeader" in i && hm.forEach(o, function(e, t) {
                            void 0 === r && "content-type" === t.toLowerCase() ? delete o[t] : i.setRequestHeader(t, e);
                        }), hm.isUndefined(e.withCredentials) || (i.withCredentials = !!e.withCredentials), 
                        e.responseType) try {
                            i.responseType = e.responseType;
                        } catch (d) {
                            if ("json" !== e.responseType) throw d;
                        }
                        "function" == typeof e.onDownloadProgress && i.addEventListener("progress", e.onDownloadProgress), 
                        "function" == typeof e.onUploadProgress && i.upload && i.upload.addEventListener("progress", e.onUploadProgress), 
                        e.cancelToken && e.cancelToken.promise.then(function(e) {
                            i && (i.abort(), n(e), i = null);
                        }), void 0 === r && (r = null), i.send(r);
                    });
                }, Ym = {
                    "Content-Type": "application/x-www-form-urlencoded"
                };
                function Jm(e, t) {
                    !hm.isUndefined(e) && hm.isUndefined(e["Content-Type"]) && (e["Content-Type"] = t);
                }
                var Xm, Qm = {
                    adapter: (("undefined" != typeof XMLHttpRequest || void 0 !== $m && "[object process]" === Object.prototype.toString.call($m)) && (Xm = Wm), 
                    Xm),
                    transformRequest: [ function(e, t) {
                        return Vm(t, "Accept"), Vm(t, "Content-Type"), hm.isFormData(e) || hm.isArrayBuffer(e) || hm.isBuffer(e) || hm.isStream(e) || hm.isFile(e) || hm.isBlob(e) ? e : hm.isArrayBufferView(e) ? e.buffer : hm.isURLSearchParams(e) ? (Jm(t, "application/x-www-form-urlencoded;charset=utf-8"), 
                        e.toString()) : hm.isObject(e) ? (Jm(t, "application/json;charset=utf-8"), JSON.stringify(e)) : e;
                    } ],
                    transformResponse: [ function(e) {
                        if ("string" == typeof e) try {
                            e = JSON.parse(e);
                        } catch (n) {}
                        return e;
                    } ],
                    timeout: 0,
                    xsrfCookieName: "XSRF-TOKEN",
                    xsrfHeaderName: "X-XSRF-TOKEN",
                    maxContentLength: -1,
                    validateStatus: function(e) {
                        return e >= 200 && e < 300;
                    },
                    headers: {
                        common: {
                            Accept: "application/json, text/plain, */*"
                        }
                    }
                };
                hm.forEach([ "delete", "get", "head" ], function(e) {
                    Qm.headers[e] = {};
                }), hm.forEach([ "post", "put", "patch" ], function(e) {
                    Qm.headers[e] = hm.merge(Ym);
                });
                var Zm = Qm;
                function ev(e) {
                    e.cancelToken && e.cancelToken.throwIfRequested();
                }
                var tv = function(e) {
                    return ev(e), e.headers = e.headers || {}, e.data = vm(e.data, e.headers, e.transformRequest), 
                    e.headers = hm.merge(e.headers.common || {}, e.headers[e.method] || {}, e.headers), 
                    hm.forEach([ "delete", "get", "head", "post", "put", "patch", "common" ], function(t) {
                        delete e.headers[t];
                    }), (e.adapter || Zm.adapter)(e).then(function(t) {
                        return ev(e), t.data = vm(t.data, t.headers, e.transformResponse), t;
                    }, function(t) {
                        return ym(t) || (ev(e), t && t.response && (t.response.data = vm(t.response.data, t.response.headers, e.transformResponse))), 
                        Promise.reject(t);
                    });
                }, nv = function(e, t) {
                    t = t || {};
                    var n = {}, r = [ "url", "method", "params", "data" ], o = [ "headers", "auth", "proxy" ], i = [ "baseURL", "url", "transformRequest", "transformResponse", "paramsSerializer", "timeout", "withCredentials", "adapter", "responseType", "xsrfCookieName", "xsrfHeaderName", "onUploadProgress", "onDownloadProgress", "maxContentLength", "validateStatus", "maxRedirects", "httpAgent", "httpsAgent", "cancelToken", "socketPath" ];
                    hm.forEach(r, function(e) {
                        void 0 !== t[e] && (n[e] = t[e]);
                    }), hm.forEach(o, function(r) {
                        hm.isObject(t[r]) ? n[r] = hm.deepMerge(e[r], t[r]) : void 0 !== t[r] ? n[r] = t[r] : hm.isObject(e[r]) ? n[r] = hm.deepMerge(e[r]) : void 0 !== e[r] && (n[r] = e[r]);
                    }), hm.forEach(i, function(r) {
                        void 0 !== t[r] ? n[r] = t[r] : void 0 !== e[r] && (n[r] = e[r]);
                    });
                    var a = r.concat(o).concat(i), s = Object.keys(t).filter(function(e) {
                        return -1 === a.indexOf(e);
                    });
                    return hm.forEach(s, function(r) {
                        void 0 !== t[r] ? n[r] = t[r] : void 0 !== e[r] && (n[r] = e[r]);
                    }), n;
                };
                function rv(e) {
                    this.defaults = e, this.interceptors = {
                        request: new mm(),
                        response: new mm()
                    };
                }
                rv.prototype.request = function(e) {
                    "string" == typeof e ? (e = arguments[1] || {}).url = arguments[0] : e = e || {}, 
                    (e = nv(this.defaults, e)).method ? e.method = e.method.toLowerCase() : this.defaults.method ? e.method = this.defaults.method.toLowerCase() : e.method = "get";
                    var t = [ tv, void 0 ], n = Promise.resolve(e);
                    for (this.interceptors.request.forEach(function(e) {
                        t.unshift(e.fulfilled, e.rejected);
                    }), this.interceptors.response.forEach(function(e) {
                        t.push(e.fulfilled, e.rejected);
                    }); t.length; ) n = n.then(t.shift(), t.shift());
                    return n;
                }, rv.prototype.getUri = function(e) {
                    return e = nv(this.defaults, e), dm(e.url, e.params, e.paramsSerializer).replace(/^\?/, "");
                }, hm.forEach([ "delete", "get", "head", "options" ], function(e) {
                    rv.prototype[e] = function(t, n) {
                        return this.request(hm.merge(n || {}, {
                            method: e,
                            url: t
                        }));
                    };
                }), hm.forEach([ "post", "put", "patch" ], function(e) {
                    rv.prototype[e] = function(t, n, r) {
                        return this.request(hm.merge(r || {}, {
                            method: e,
                            url: t,
                            data: n
                        }));
                    };
                });
                var ov = rv;
                function iv(e) {
                    this.message = e;
                }
                iv.prototype.toString = function() {
                    return "Cancel" + (this.message ? ": " + this.message : "");
                }, iv.prototype.__CANCEL__ = !0;
                var av = iv;
                function sv(e) {
                    if ("function" != typeof e) throw new TypeError("executor must be a function.");
                    var t;
                    this.promise = new Promise(function(e) {
                        t = e;
                    });
                    var n = this;
                    e(function(e) {
                        n.reason || (n.reason = new av(e), t(n.reason));
                    });
                }
                sv.prototype.throwIfRequested = function() {
                    if (this.reason) throw this.reason;
                }, sv.source = function() {
                    var e;
                    return {
                        token: new sv(function(t) {
                            e = t;
                        }),
                        cancel: e
                    };
                };
                var cv = sv;
                function uv(e) {
                    var t = new ov(e), n = im(ov.prototype.request, t);
                    return hm.extend(n, ov.prototype, t), hm.extend(n, t), n;
                }
                var lv = uv(Zm);
                lv.Axios = ov, lv.create = function(e) {
                    return uv(nv(lv.defaults, e));
                }, lv.Cancel = av, lv.CancelToken = cv, lv.isCancel = ym, lv.all = function(e) {
                    return Promise.all(e);
                }, lv.spread = function(e) {
                    return function(t) {
                        return e.apply(null, t);
                    };
                };
                var pv = lv, hv = lv;
                pv.default = hv;
                var fv = pv, dv = fv.create({
                    timeout: 3e4,
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded;charset=UTF-8"
                    }
                });
                dv.interceptors.response.use(function(e) {
                    var t = e.data, n = t.error_code, r = t.ErrorCode;
                    return Es(n) && (r = n), r !== Qc.SUCCESS && (e.data.ErrorCode = Number(r)), e;
                }, function(e) {
                    return "Network Error" === e.message && (!0 === dv.defaults.withCredentials && Cs.warn("Network Error, try to close `IMAxios.defaults.withCredentials` to false. (IMAxios.js)"), 
                    dv.defaults.withCredentials = !1), Promise.reject(e);
                });
                var gv = function() {
                    function e() {
                        Ln(this, e);
                    }
                    return Pn(e, [ {
                        key: "request",
                        value: function(e) {
                            console.warn("请注意： ConnectionBase.request() 方法必须被派生类重写:");
                        }
                    }, {
                        key: "_checkOptions",
                        value: function(e) {
                            if (0 == !!e.url) throw new Vp({
                                code: Bp.NETWORK_BASE_OPTIONS_NO_URL,
                                message: jh
                            });
                        }
                    }, {
                        key: "_initOptions",
                        value: function(e) {
                            e.method = [ "POST", "GET", "PUT", "DELETE", "OPTION" ].indexOf(e.method) >= 0 ? e.method : "POST", 
                            e.dataType = e.dataType || "json", e.responseType = e.responseType || "json";
                        }
                    } ]), e;
                }(), mv = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n() {
                        var e;
                        return Ln(this, n), (e = t.call(this)).retry = 2, e;
                    }
                    return Pn(n, [ {
                        key: "request",
                        value: function(e) {
                            return this._checkOptions(e), this._initOptions(e), this._requestWithRetry({
                                url: e.url,
                                data: e.data,
                                method: e.method
                            });
                        }
                    }, {
                        key: "_requestWithRetry",
                        value: function(e) {
                            var t = this, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                            return dv(e).catch(function(r) {
                                return t.retry && n < t.retry ? t._requestWithRetry(e, ++n) : Pd(new Vp({
                                    code: r.code || "",
                                    message: r.message || ""
                                }));
                            });
                        }
                    } ]), n;
                }(gv), vv = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n() {
                        var e;
                        return Ln(this, n), (e = t.call(this)).retry = 2, e._request = e.promisify(za.request), 
                        e;
                    }
                    return Pn(n, [ {
                        key: "request",
                        value: function(e) {
                            return this._checkOptions(e), this._initOptions(e), e = Fn(Fn({}, e), {}, {
                                responseType: "text"
                            }), this._requestWithRetry(e);
                        }
                    }, {
                        key: "_requestWithRetry",
                        value: function(e) {
                            var t = this, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                            return this._request(e).then(this._handleResolve).catch(function(r) {
                                if (As(r.errMsg)) {
                                    if (r.errMsg.includes("abort")) return Rd({});
                                    if (r.errMsg.includes("timeout")) return t.retry > 0 && n < t.retry ? t._requestWithRetry(e, ++n) : Pd(new Vp({
                                        code: Bp.NETWORK_TIMEOUT,
                                        message: r.errMsg
                                    }));
                                    if (r.errMsg.includes("fail")) return t.retry > 0 && n < t.retry ? t._requestWithRetry(e, ++n) : Pd(new Vp({
                                        code: Bp.NETWORK_ERROR,
                                        message: r.errMsg
                                    }));
                                }
                                return Pd(new Vp(Fn({
                                    code: Bp.UNCAUGHT_ERROR,
                                    message: r.message
                                }, r)));
                            });
                        }
                    }, {
                        key: "_handleResolve",
                        value: function(e) {
                            var t = e.data, n = t.error_code, r = t.ErrorCode;
                            return Es(n) && (r = n), r !== Qc.SUCCESS && (e.data.ErrorCode = Number("".concat(r))), 
                            e;
                        }
                    }, {
                        key: "promisify",
                        value: function(e) {
                            return function(t) {
                                return new Promise(function(n, r) {
                                    var o = e(Object.assign({}, t, {
                                        success: n,
                                        fail: r
                                    }));
                                    t.updateAbort && t.updateAbort(function() {
                                        o && Os(o.abort) && o.abort();
                                    });
                                });
                            };
                        }
                    } ]), n;
                }(gv), yv = function() {
                    function e() {
                        Ln(this, e), this.request = 0, this.success = 0, this.fail = 0, this.reportRate = 10, 
                        this.requestTimeCost = [];
                    }
                    return Pn(e, [ {
                        key: "report",
                        value: function() {
                            if (1 !== this.request) {
                                if (this.request % this.reportRate != 0) return null;
                                var e = this.avgRequestTime(), t = "runLoop reports: success=".concat(this.success, ",fail=").concat(this.fail, ",total=").concat(this.request, ",avg=").concat(e, ",cur=").concat(this.requestTimeCost[this.requestTimeCost.length - 1], ",max=").concat(Math.max.apply(null, this.requestTimeCost), ",min=").concat(Math.min.apply(null, this.requestTimeCost));
                                Cs.log(t);
                            }
                        }
                    }, {
                        key: "setRequestTime",
                        value: function(e, t) {
                            var n = Math.abs(t - e);
                            100 === this.requestTimeCost.length && this.requestTimeCost.shift(), this.requestTimeCost.push(n);
                        }
                    }, {
                        key: "avgRequestTime",
                        value: function() {
                            for (var e, t = this.requestTimeCost.length, n = 0, r = 0; r < t; r++) n += this.requestTimeCost[r];
                            return e = n / t, Math.round(100 * e) / 100;
                        }
                    } ]), e;
                }(), _v = fv.create({
                    timeout: 6e3,
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded;charset=UTF-8"
                    }
                });
                _v.interceptors.response.use(function(e) {
                    var t = e.data, n = t.error_code, r = t.ErrorCode;
                    return Es(n) && (r = n), r !== Qc.SUCCESS && (e.data.ErrorCode = Number(r)), e;
                }, function(e) {
                    return "Network Error" === e.message && (!0 === _v.defaults.withCredentials && Cs.warn("Network Error, try to close `IMAxiosAVChatroom.defaults.withCredentials` to false. (IMAxiosAVChatroom.js)"), 
                    _v.defaults.withCredentials = !1), Promise.reject(e);
                });
                var Sv = fv.CancelToken, Iv = function() {
                    function e(t) {
                        Ln(this, e), this._initializeOptions(t), this._initializeMembers(), this.status = new yv();
                    }
                    return Pn(e, [ {
                        key: "destructor",
                        value: function() {
                            clearTimeout(this._seedID);
                            var e = this._index();
                            for (var t in this) Object.prototype.hasOwnProperty.call(this, t) && (this[t] = null);
                            return e;
                        }
                    }, {
                        key: "setIndex",
                        value: function(e) {
                            this._index = e;
                        }
                    }, {
                        key: "getIndex",
                        value: function() {
                            return this._index;
                        }
                    }, {
                        key: "isRunning",
                        value: function() {
                            return !this._stoped;
                        }
                    }, {
                        key: "_initializeOptions",
                        value: function(e) {
                            this.options = e;
                        }
                    }, {
                        key: "_initializeMembers",
                        value: function() {
                            this._index = -1, this._seedID = 0, this._requestStatus = !1, this._stoped = !1, 
                            this._intervalTime = 0, this._intervalIncreaseStep = 1e3, this._intervalDecreaseStep = 1e3, 
                            this._intervalTimeMax = 5e3, this._protectTimeout = 3e3, this._getNoticeSeq = this.options.getNoticeSeq, 
                            this._retryCount = 0, this._responseTime = Date.now(), this._responseTimeThreshold = 2e3, 
                            this.options.isAVChatRoomLoop ? this.requestor = _v : this.requestor = dv, Cs.log("XHRRunLoop._initializeMembers isAVChatRoomLoop=".concat(!!this.options.isAVChatRoomLoop)), 
                            this.abort = null;
                        }
                    }, {
                        key: "start",
                        value: function() {
                            0 === this._seedID ? (this._stoped = !1, this._send()) : Cs.log('XHRRunLoop.start(), XHRRunLoop is running now, if you want to restart runLoop , please run "stop()" first.');
                        }
                    }, {
                        key: "_reset",
                        value: function() {
                            Cs.log("XHRRunLoop._reset(), reset long poll _intervalTime", this._intervalTime), 
                            this.stop(), this.start();
                        }
                    }, {
                        key: "_intervalTimeIncrease",
                        value: function() {
                            this._intervalTime !== this._responseTimeThreshold && (this._intervalTime < this._responseTimeThreshold && (this._intervalTime += this._intervalIncreaseStep), 
                            this._intervalTime > this._responseTimeThreshold && (this._intervalTime = this._responseTimeThreshold));
                        }
                    }, {
                        key: "_intervalTimeDecrease",
                        value: function() {
                            0 !== this._intervalTime && (this._intervalTime > 0 && (this._intervalTime -= this._intervalDecreaseStep), 
                            this._intervalTime < 0 && (this._intervalTime = 0));
                        }
                    }, {
                        key: "_intervalTimeAdjustment",
                        value: function() {
                            var e = Date.now();
                            100 * Math.floor((e - this._responseTime) / 100) <= this._responseTimeThreshold ? this._intervalTimeIncrease() : this._intervalTimeDecrease(), 
                            this._responseTime = e;
                        }
                    }, {
                        key: "_intervalTimeAdjustmentBaseOnResponseData",
                        value: function(e) {
                            e.ErrorCode === Qc.SUCCESS ? this._intervalTimeDecrease() : this._intervalTimeIncrease();
                        }
                    }, {
                        key: "_send",
                        value: function() {
                            var e = this;
                            if (!0 !== this._requestStatus) {
                                this._requestStatus = !0, this.status.request++, "function" == typeof this.options.before && this.options.before(this.options.pack.requestData);
                                var t = Date.now(), n = 0;
                                this.requestor.request({
                                    url: this.options.pack.getUrl(),
                                    data: this.options.pack.requestData,
                                    method: this.options.pack.method,
                                    cancelToken: new Sv(function(t) {
                                        e.abort = t;
                                    })
                                }).then(function(r) {
                                    if (e._intervalTimeAdjustmentBaseOnResponseData.bind(e)(r.data), e._retryCount > 0 && (e._retryCount = 0), 
                                    e.status.success++, n = Date.now(), e.status.setRequestTime(t, n), r.data.timecost = n - t, 
                                    "function" == typeof e.options.success) try {
                                        e.options.success({
                                            pack: e.options.pack,
                                            error: !1,
                                            data: e.options.pack.callback(r.data)
                                        });
                                    } catch (i) {
                                        Cs.warn("XHRRunLoop._send(), error:", i);
                                    }
                                    e._requestStatus = !1, !1 === e._stoped && (e._seedID = setTimeout(e._send.bind(e), e._intervalTime)), 
                                    e.status.report();
                                }).catch(function(r) {
                                    if (e.status.fail++, e._retryCount++, e._intervalTimeAdjustment.bind(e)(), !1 === e._stoped && (e._seedID = setTimeout(e._send.bind(e), e._intervalTime)), 
                                    e._requestStatus = !1, "function" == typeof e.options.fail && void 0 !== r.request) try {
                                        e.options.fail({
                                            pack: e.options.pack,
                                            error: r,
                                            data: !1
                                        });
                                    } catch (i) {
                                        Cs.warn("XHRRunLoop._send(), fail callback error:", i), Cs.error(i);
                                    }
                                    n = Date.now(), e.status.setRequestTime(t, n), e.status.report();
                                });
                            }
                        }
                    }, {
                        key: "stop",
                        value: function() {
                            this._clearAllTimeOut(), this._stoped = !0;
                        }
                    }, {
                        key: "_clearAllTimeOut",
                        value: function() {
                            clearTimeout(this._seedID), this._seedID = 0;
                        }
                    } ]), e;
                }(), Mv = function() {
                    function e(t) {
                        Ln(this, e), this._initializeOptions(t), this._initializeMembers(), this.status = new yv();
                    }
                    return Pn(e, [ {
                        key: "destructor",
                        value: function() {
                            clearTimeout(this._seedID);
                            var e = this._index();
                            for (var t in this) Object.prototype.hasOwnProperty.call(this, t) && (this[t] = null);
                            return e;
                        }
                    }, {
                        key: "setIndex",
                        value: function(e) {
                            this._index = e;
                        }
                    }, {
                        key: "isRunning",
                        value: function() {
                            return !this._stoped;
                        }
                    }, {
                        key: "getIndex",
                        value: function() {
                            return this._index;
                        }
                    }, {
                        key: "_initializeOptions",
                        value: function(e) {
                            this.options = e;
                        }
                    }, {
                        key: "_initializeMembers",
                        value: function() {
                            this._index = -1, this._seedID = 0, this._requestStatus = !1, this._stoped = !1, 
                            this._intervalTime = 0, this._intervalIncreaseStep = 1e3, this._intervalDecreaseStep = 1e3, 
                            this._intervalTimeMax = 5e3, this._protectTimeout = 3e3, this._getNoticeSeq = this.options.getNoticeSeq, 
                            this._retryCount = 0, this._responseTime = Date.now(), this._responseTimeThreshold = 2e3, 
                            this.requestor = new vv(), this.abort = null;
                        }
                    }, {
                        key: "start",
                        value: function() {
                            0 === this._seedID ? (this._stoped = !1, this._send()) : Cs.log('WXRunLoop.start(): WXRunLoop is running now, if you want to restart runLoop , please run "stop()" first.');
                        }
                    }, {
                        key: "_reset",
                        value: function() {
                            Cs.log("WXRunLoop.reset(), long poll _intervalMaxRate", this._intervalMaxRate), 
                            this.stop(), this.start();
                        }
                    }, {
                        key: "_intervalTimeIncrease",
                        value: function() {
                            this._intervalTime !== this._responseTimeThreshold && (this._intervalTime < this._responseTimeThreshold && (this._intervalTime += this._intervalIncreaseStep), 
                            this._intervalTime > this._responseTimeThreshold && (this._intervalTime = this._responseTimeThreshold));
                        }
                    }, {
                        key: "_intervalTimeDecrease",
                        value: function() {
                            0 !== this._intervalTime && (this._intervalTime > 0 && (this._intervalTime -= this._intervalDecreaseStep), 
                            this._intervalTime < 0 && (this._intervalTime = 0));
                        }
                    }, {
                        key: "_intervalTimeAdjustment",
                        value: function() {
                            var e = Date.now();
                            100 * Math.floor((e - this._responseTime) / 100) <= this._responseTimeThreshold ? this._intervalTimeIncrease() : this._intervalTimeDecrease(), 
                            this._responseTime = e;
                        }
                    }, {
                        key: "_intervalTimeAdjustmentBaseOnResponseData",
                        value: function(e) {
                            e.ErrorCode === Qc.SUCCESS ? this._intervalTimeDecrease() : this._intervalTimeIncrease();
                        }
                    }, {
                        key: "_send",
                        value: function() {
                            var e = this;
                            if (!0 !== this._requestStatus) {
                                var t = this;
                                this._requestStatus = !0, this.status.request++, "function" == typeof this.options.before && this.options.before(t.options.pack.requestData);
                                var n = Date.now(), r = 0;
                                this.requestor.request({
                                    url: t.options.pack.getUrl(),
                                    data: t.options.pack.requestData,
                                    method: t.options.pack.method,
                                    updateAbort: function(t) {
                                        e.abort = t;
                                    }
                                }).then(function(o) {
                                    if (t._intervalTimeAdjustmentBaseOnResponseData.bind(e)(o.data), t._retryCount > 0 && (t._retryCount = 0), 
                                    e.status.success++, r = Date.now(), e.status.setRequestTime(n, r), o.data.timecost = r - n, 
                                    "function" == typeof t.options.success) try {
                                        e.options.success({
                                            pack: e.options.pack,
                                            error: !1,
                                            data: e.options.pack.callback(o.data)
                                        });
                                    } catch (a) {
                                        Cs.warn("WXRunLoop._send(), error:", a);
                                    }
                                    t._requestStatus = !1, !1 === t._stoped && (t._seedID = setTimeout(t._send.bind(t), t._intervalTime)), 
                                    e.status.report();
                                }).catch(function(o) {
                                    if (e.status.fail++, t._retryCount++, t._intervalTimeAdjustment.bind(e)(), !1 === t._stoped && (t._seedID = setTimeout(t._send.bind(t), t._intervalTime)), 
                                    t._requestStatus = !1, "function" == typeof t.options.fail) try {
                                        e.options.fail({
                                            pack: e.options.pack,
                                            error: o,
                                            data: !1
                                        });
                                    } catch (a) {
                                        Cs.warn("WXRunLoop._send(), fail callback error:", a), Cs.error(a);
                                    }
                                    r = Date.now(), e.status.setRequestTime(n, r), e.status.report();
                                });
                            }
                        }
                    }, {
                        key: "stop",
                        value: function() {
                            this._clearAllTimeOut(), this._stoped = !0;
                        }
                    }, {
                        key: "_clearAllTimeOut",
                        value: function() {
                            clearTimeout(this._seedID), this._seedID = 0;
                        }
                    } ]), e;
                }(), Cv = function() {
                    function e(t) {
                        Ln(this, e), this.tim = t, this.httpConnection = Ka ? new vv() : new mv(), this.keepAliveConnections = [];
                    }
                    return Pn(e, [ {
                        key: "initializeListener",
                        value: function() {
                            this.tim.innerEmitter.on(rd, this._stopAllRunLoop, this);
                        }
                    }, {
                        key: "request",
                        value: function(e) {
                            var t = {
                                url: e.url,
                                data: e.requestData,
                                method: e.method,
                                callback: e.callback
                            };
                            return this.httpConnection.request(t).then(function(t) {
                                return t.data = e.callback(t.data), t.data.errorCode !== Qc.SUCCESS ? Pd(new Vp({
                                    code: t.data.errorCode,
                                    message: t.data.errorInfo
                                })) : t;
                            });
                        }
                    }, {
                        key: "createRunLoop",
                        value: function(e) {
                            var t = this.createKeepAliveConnection(e);
                            return t.setIndex(this.keepAliveConnections.push(t) - 1), t;
                        }
                    }, {
                        key: "stopRunLoop",
                        value: function(e) {
                            e.stop();
                        }
                    }, {
                        key: "_stopAllRunLoop",
                        value: function() {
                            for (var e = this.keepAliveConnections.length, t = 0; t < e; t++) this.keepAliveConnections[t].stop();
                        }
                    }, {
                        key: "destroyRunLoop",
                        value: function(e) {
                            e.stop();
                            var t = e.destructor();
                            this.keepAliveConnections.slice(t, 1);
                        }
                    }, {
                        key: "startRunLoopExclusive",
                        value: function(e) {
                            for (var t = e.getIndex(), n = 0; n < this.keepAliveConnections.length; n++) n !== t && this.keepAliveConnections[n].stop();
                            e.start();
                        }
                    }, {
                        key: "createKeepAliveConnection",
                        value: function(e) {
                            return Ka ? new Mv(e) : (this.tim.options.runLoopNetType === _p || this.tim.options.runLoopNetType, 
                            new Iv(e));
                        }
                    }, {
                        key: "clearAll",
                        value: function() {
                            this.conn.cancelAll();
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            this.keepAliveConnections = [];
                        }
                    } ]), e;
                }(), Tv = function() {
                    function e(t) {
                        Ln(this, e), this.tim = t, this.tim.innerEmitter.on(ad, this._onErrorDetected, this);
                    }
                    return Pn(e, [ {
                        key: "_onErrorDetected",
                        value: function(e) {
                            var t = e.data;
                            new Xd(rm).setText("code=".concat(t.code, " message=").concat(t.message)).setNetworkType(this.tim.netMonitor.getNetworkType()).setEnd(), 
                            t.code ? Cs.warn("Oops! code:".concat(t.code, " message:").concat(t.message)) : Cs.warn("Oops! message:".concat(t.message, " stack:").concat(t.stack)), 
                            this.tim.outerEmitter.emit(Cn.ERROR, t);
                        }
                    } ]), e;
                }(), Ev = function() {
                    function e(t) {
                        var n = this;
                        Ln(this, e), ac(t) || (this.userID = t.userID || "", this.nick = t.nick || "", this.gender = t.gender || "", 
                        this.birthday = t.birthday || 0, this.location = t.location || "", this.selfSignature = t.selfSignature || "", 
                        this.allowType = t.allowType || Tn.ALLOW_TYPE_ALLOW_ANY, this.language = t.language || 0, 
                        this.avatar = t.avatar || "", this.messageSettings = t.messageSettings || 0, this.adminForbidType = t.adminForbidType || Tn.FORBID_TYPE_NONE, 
                        this.level = t.level || 0, this.role = t.role || 0, this.lastUpdatedTime = 0, this.profileCustomField = [], 
                        ac(t.profileCustomField) || t.profileCustomField.forEach(function(e) {
                            n.profileCustomField.push({
                                key: e.key,
                                value: e.value
                            });
                        }));
                    }
                    return Pn(e, [ {
                        key: "validate",
                        value: function(e) {
                            var t = !0, n = "";
                            if (ac(e)) return {
                                valid: !1,
                                tips: "empty options"
                            };
                            if (e.profileCustomField) for (var r = e.profileCustomField.length, o = null, i = 0; i < r; i++) {
                                if (o = e.profileCustomField[i], !As(o.key) || -1 === o.key.indexOf("Tag_Profile_Custom")) return {
                                    valid: !1,
                                    tips: "自定义资料字段的前缀必须是 Tag_Profile_Custom"
                                };
                                if (!As(o.value)) return {
                                    valid: !1,
                                    tips: "自定义资料字段的 value 必须是字符串"
                                };
                            }
                            for (var a in e) if (Object.prototype.hasOwnProperty.call(e, a)) {
                                if ("profileCustomField" === a) continue;
                                if (ac(e[a]) && !As(e[a]) && !Es(e[a])) {
                                    n = "key:" + a + ", invalid value:" + e[a], t = !1;
                                    continue;
                                }
                                switch (a) {
                                  case "nick":
                                    As(e[a]) || (n = "nick should be a string", t = !1), js(e[a]) > 500 && (n = "nick name limited: must less than or equal to ".concat(500, " bytes, current size: ").concat(js(e[a]), " bytes"), 
                                    t = !1);
                                    break;

                                  case "gender":
                                    Hs(Cp, e.gender) || (n = "key:gender, invalid value:" + e.gender, t = !1);
                                    break;

                                  case "birthday":
                                    Es(e.birthday) || (n = "birthday should be a number", t = !1);
                                    break;

                                  case "location":
                                    As(e.location) || (n = "location should be a string", t = !1);
                                    break;

                                  case "selfSignature":
                                    As(e.selfSignature) || (n = "selfSignature should be a string", t = !1);
                                    break;

                                  case "allowType":
                                    Hs(Ep, e.allowType) || (n = "key:allowType, invalid value:" + e.allowType, t = !1);
                                    break;

                                  case "language":
                                    Es(e.language) || (n = "language should be a number", t = !1);
                                    break;

                                  case "avatar":
                                    As(e.avatar) || (n = "avatar should be a string", t = !1);
                                    break;

                                  case "messageSettings":
                                    0 !== e.messageSettings && 1 !== e.messageSettings && (n = "messageSettings should be 0 or 1", 
                                    t = !1);
                                    break;

                                  case "adminForbidType":
                                    Hs(Tp, e.adminForbidType) || (n = "key:adminForbidType, invalid value:" + e.adminForbidType, 
                                    t = !1);
                                    break;

                                  case "level":
                                    Es(e.level) || (n = "level should be a number", t = !1);
                                    break;

                                  case "role":
                                    Es(e.role) || (n = "role should be a number", t = !1);
                                    break;

                                  default:
                                    n = "unknown key:" + a + "  " + e[a], t = !1;
                                }
                            }
                            return {
                                valid: t,
                                tips: n
                            };
                        }
                    } ]), e;
                }(), Av = function() {
                    function e(t) {
                        Ln(this, e), this.userController = t, this.TAG = "profile", this.Actions = {
                            Q: "query",
                            U: "update"
                        }, this.accountProfileMap = new Map(), this.expirationTime = 864e5;
                    }
                    return Pn(e, [ {
                        key: "setExpirationTime",
                        value: function(e) {
                            this.expirationTime = e;
                        }
                    }, {
                        key: "getUserProfile",
                        value: function(e) {
                            var t = this, n = e.userIDList;
                            e.fromAccount = this.userController.getMyAccount(), n.length > 100 && (Cs.warn("ProfileHandler.getUserProfile 获取用户资料人数不能超过100人"), 
                            n.length = 100);
                            for (var r, o = [], i = [], a = 0, s = n.length; a < s; a++) r = n[a], this.userController.isMyFriend(r) && this._containsAccount(r) ? i.push(this._getProfileFromMap(r)) : o.push(r);
                            if (0 === o.length) return Rd(i);
                            e.toAccount = o;
                            var c = e.bFromGetMyProfile || !1, u = [];
                            e.toAccount.forEach(function(e) {
                                u.push({
                                    toAccount: e,
                                    standardSequence: 0,
                                    customSequence: 0
                                });
                            }), e.userItem = u;
                            var l = new Xd(Jg);
                            l.setText(n.length > 5 ? "userIDList.length=".concat(n.length) : "userIDList=".concat(n));
                            var p = this.userController.generateConfig(this.TAG, this.Actions.Q, e);
                            return this.userController.request(p).then(function(e) {
                                l.setNetworkType(t.userController.getNetworkType()).setEnd(), Cs.info("ProfileHandler.getUserProfile ok");
                                var n = t._handleResponse(e).concat(i);
                                return c ? (t.userController.onGotMyProfile(), new kd(n[0])) : new kd(n);
                            }).catch(function(e) {
                                return t.userController.probeNetwork().then(function(t) {
                                    var n = Yn(t, 2), r = n[0], o = n[1];
                                    l.setError(e, r, o).setEnd();
                                }), Cs.error("ProfileHandler.getUserProfile error:", e), Pd(e);
                            });
                        }
                    }, {
                        key: "getMyProfile",
                        value: function() {
                            var e = this.userController.getMyAccount();
                            if (Cs.log("ProfileHandler.getMyProfile myAccount=" + e), this._fillMap(), this._containsAccount(e)) {
                                var t = this._getProfileFromMap(e);
                                return Cs.debug("ProfileHandler.getMyProfile from cache, myProfile:" + JSON.stringify(t)), 
                                this.userController.onGotMyProfile(), Rd(t);
                            }
                            return this.getUserProfile({
                                fromAccount: e,
                                userIDList: [ e ],
                                bFromGetMyProfile: !0
                            });
                        }
                    }, {
                        key: "_handleResponse",
                        value: function(e) {
                            for (var t, n, r = Gs.now(), o = e.data.userProfileItem, i = [], a = 0, s = o.length; a < s; a++) "@TLS#NOT_FOUND" !== o[a].to && "" !== o[a].to && (t = o[a].to, 
                            n = this._updateMap(t, this._getLatestProfileFromResponse(t, o[a].profileItem)), 
                            i.push(n));
                            return Cs.log("ProfileHandler._handleResponse cost " + (Gs.now() - r) + " ms"), 
                            i;
                        }
                    }, {
                        key: "_getLatestProfileFromResponse",
                        value: function(e, t) {
                            var n = {};
                            if (n.userID = e, n.profileCustomField = [], !ac(t)) for (var r = 0, o = t.length; r < o; r++) if (t[r].tag.indexOf("Tag_Profile_Custom") > -1) n.profileCustomField.push({
                                key: t[r].tag,
                                value: t[r].value
                            }); else switch (t[r].tag) {
                              case Mp.NICK:
                                n.nick = t[r].value;
                                break;

                              case Mp.GENDER:
                                n.gender = t[r].value;
                                break;

                              case Mp.BIRTHDAY:
                                n.birthday = t[r].value;
                                break;

                              case Mp.LOCATION:
                                n.location = t[r].value;
                                break;

                              case Mp.SELFSIGNATURE:
                                n.selfSignature = t[r].value;
                                break;

                              case Mp.ALLOWTYPE:
                                n.allowType = t[r].value;
                                break;

                              case Mp.LANGUAGE:
                                n.language = t[r].value;
                                break;

                              case Mp.AVATAR:
                                n.avatar = t[r].value;
                                break;

                              case Mp.MESSAGESETTINGS:
                                n.messageSettings = t[r].value;
                                break;

                              case Mp.ADMINFORBIDTYPE:
                                n.adminForbidType = t[r].value;
                                break;

                              case Mp.LEVEL:
                                n.level = t[r].value;
                                break;

                              case Mp.ROLE:
                                n.role = t[r].value;
                                break;

                              default:
                                Cs.warn("ProfileHandler._handleResponse unkown tag->", t[r].tag, t[r].value);
                            }
                            return n;
                        }
                    }, {
                        key: "updateMyProfile",
                        value: function(e) {
                            var t = this, n = new Xd(Xg);
                            n.setText(JSON.stringify(e));
                            var r = new Ev().validate(e);
                            if (!r.valid) return n.setCode(Bp.UPDATE_PROFILE_INVALID_PARAM).setMessage("ProfileHandler.updateMyProfile info:".concat(r.tips)).setNetworkType(this.userController.getNetworkType()).setEnd(), 
                            Cs.error("ProfileHandler.updateMyProfile info:".concat(r.tips, "，请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#updateMyProfile")), 
                            Pd({
                                code: Bp.UPDATE_PROFILE_INVALID_PARAM,
                                message: Nh
                            });
                            var o = [];
                            for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && ("profileCustomField" === i ? e.profileCustomField.forEach(function(e) {
                                o.push({
                                    tag: e.key,
                                    value: e.value
                                });
                            }) : o.push({
                                tag: Mp[i.toUpperCase()],
                                value: e[i]
                            }));
                            if (0 === o.length) return n.setCode(Bp.UPDATE_PROFILE_NO_KEY).setMessage(Gh).setNetworkType(this.userController.getNetworkType()).setEnd(), 
                            Cs.error("ProfileHandler.updateMyProfile info:".concat(Gh, "，请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#updateMyProfile")), 
                            Pd({
                                code: Bp.UPDATE_PROFILE_NO_KEY,
                                message: Gh
                            });
                            var a = this.userController.generateConfig(this.TAG, this.Actions.U, {
                                fromAccount: this.userController.getMyAccount(),
                                profileItem: o
                            });
                            return this.userController.request(a).then(function(r) {
                                n.setNetworkType(t.userController.getNetworkType()).setEnd(), Cs.info("ProfileHandler.updateMyProfile ok");
                                var o = t._updateMap(t.userController.getMyAccount(), e);
                                return t.userController.emitOuterEvent(Cn.PROFILE_UPDATED, [ o ]), Rd(o);
                            }).catch(function(e) {
                                return t.userController.probeNetwork().then(function(t) {
                                    var r = Yn(t, 2), o = r[0], i = r[1];
                                    n.setError(e, o, i).setEnd();
                                }), Cs.error("ProfileHandler.updateMyProfile error:", e), Pd(e);
                            });
                        }
                    }, {
                        key: "onProfileModified",
                        value: function(e) {
                            var t = e.data;
                            if (!ac(t)) {
                                var n, r, o = t.length;
                                Cs.info("ProfileHandler.onProfileModified length=" + o);
                                for (var i = [], a = 0; a < o; a++) n = t[a].userID, r = this._updateMap(n, this._getLatestProfileFromResponse(n, t[a].profileList)), 
                                i.push(r);
                                this.userController.emitInnerEvent(ld, i), this.userController.emitOuterEvent(Cn.PROFILE_UPDATED, i);
                            }
                        }
                    }, {
                        key: "_fillMap",
                        value: function() {
                            if (0 === this.accountProfileMap.size) {
                                for (var e = this._getCachedProfiles(), t = Date.now(), n = 0, r = e.length; n < r; n++) t - e[n].lastUpdatedTime < this.expirationTime && this.accountProfileMap.set(e[n].userID, e[n]);
                                Cs.log("ProfileHandler._fillMap from cache, map.size=" + this.accountProfileMap.size);
                            }
                        }
                    }, {
                        key: "_updateMap",
                        value: function(e, t) {
                            var n, r = Date.now();
                            return this._containsAccount(e) ? (n = this._getProfileFromMap(e), t.profileCustomField && Ys(n.profileCustomField, t.profileCustomField), 
                            Fs(n, t, [ "profileCustomField" ]), n.lastUpdatedTime = r) : (n = new Ev(t), (this.userController.isMyFriend(e) || e === this.userController.getMyAccount()) && (n.lastUpdatedTime = r, 
                            this.accountProfileMap.set(e, n))), this._flushMap(e === this.userController.getMyAccount()), 
                            n;
                        }
                    }, {
                        key: "_flushMap",
                        value: function(e) {
                            var t = Jn(this.accountProfileMap.values()), n = this.userController.tim.storage;
                            Cs.debug("ProfileHandler._flushMap length=".concat(t.length, " flushAtOnce=").concat(e)), 
                            n.setItem(this.TAG, t, e);
                        }
                    }, {
                        key: "_containsAccount",
                        value: function(e) {
                            return this.accountProfileMap.has(e);
                        }
                    }, {
                        key: "_getProfileFromMap",
                        value: function(e) {
                            return this.accountProfileMap.get(e);
                        }
                    }, {
                        key: "_getCachedProfiles",
                        value: function() {
                            var e = this.userController.tim.storage.getItem(this.TAG);
                            return ac(e) ? [] : e;
                        }
                    }, {
                        key: "onConversationsProfileUpdated",
                        value: function(e) {
                            for (var t, n, r, o = [], i = 0, a = e.length; i < a; i++) n = (t = e[i]).userID, 
                            this.userController.isMyFriend(n) && (this._containsAccount(n) ? (r = this._getProfileFromMap(n), 
                            Fs(r, t) > 0 && o.push(n)) : o.push(t.userID));
                            0 !== o.length && (Cs.info("ProfileHandler.onConversationsProfileUpdated toAccount:", o), 
                            this.getUserProfile({
                                userIDList: o
                            }));
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            this._flushMap(!0), this.accountProfileMap.clear();
                        }
                    } ]), e;
                }();
                Oe({
                    target: "String",
                    proto: !0
                }, {
                    repeat: Lr
                });
                var bv = function() {
                    function e(t) {
                        Ln(this, e), this.options = t ? t.options : {
                            enablePointer: !0
                        }, this.pointsList = {}, this.reportText = {}, this.maxNameLen = 0, this.gapChar = "-", 
                        this.log = console.log, this.currentTask = "";
                    }
                    return Pn(e, [ {
                        key: "newTask",
                        value: function(e) {
                            !1 !== this.options.enablePointer && (e || (e = [ "task", this._timeFormat() ].join("-")), 
                            this.pointsList[e] = [], this.currentTask = e, console.log("Pointer new Task : ".concat(this.currentTask)));
                        }
                    }, {
                        key: "deleteTask",
                        value: function(e) {
                            !1 !== this.options.enablePointer && (e || (e = this.currentTask), this.pointsList[e].length = 0, 
                            delete this.pointsList[e]);
                        }
                    }, {
                        key: "dot",
                        value: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", t = arguments.length > 1 ? arguments[1] : void 0;
                            if (!1 !== this.options.enablePointer) {
                                t = t || this.currentTask;
                                var n = +new Date();
                                this.maxNameLen = this.maxNameLen < e.length ? e.length : this.maxNameLen, this.flen = this.maxNameLen + 10, 
                                this.pointsList[t].push({
                                    pointerName: e,
                                    time: n
                                });
                            }
                        }
                    }, {
                        key: "_analisys",
                        value: function(e) {
                            if (!1 !== this.options.enablePointer) {
                                e = e || this.currentTask;
                                for (var t = this.pointsList[e], n = t.length, r = [], o = [], i = 0; i < n; i++) 0 !== i && (o = this._analisysTowPoints(t[i - 1], t[i]), 
                                r.push(o.join("")));
                                return o = this._analisysTowPoints(t[0], t[n - 1], !0), r.push(o.join("")), r.join("");
                            }
                        }
                    }, {
                        key: "_analisysTowPoints",
                        value: function(e, t) {
                            var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                            if (!1 !== this.options.enablePointer) {
                                var r = this.flen, o = t.time - e.time, i = o.toString(), a = e.pointerName + this.gapChar.repeat(r - e.pointerName.length), s = t.pointerName + this.gapChar.repeat(r - t.pointerName.length), c = this.gapChar.repeat(4 - i.length) + i, u = n ? [ "%c", a, s, c, "ms\n%c" ] : [ a, s, c, "ms\n" ];
                                return u;
                            }
                        }
                    }, {
                        key: "report",
                        value: function(e) {
                            if (!1 !== this.options.enablePointer) {
                                e = e || this.currentTask;
                                var t = this._analisys(e);
                                this.pointsList = [];
                                var n = this._timeFormat(), r = "Pointer[".concat(e, "(").concat(n, ")]"), o = 4 * this.maxNameLen, i = (o - r.length) / 2;
                                console.log([ "-".repeat(i), r, "-".repeat(i) ].join("")), console.log("%c" + t, "color:#66a", "color:red", "color:#66a"), 
                                console.log("-".repeat(o));
                            }
                        }
                    }, {
                        key: "_timeFormat",
                        value: function() {
                            var e = new Date(), t = this.zeroFix(e.getMonth() + 1, 2), n = this.zeroFix(e.getDate(), 2);
                            return "".concat(t, "-").concat(n, " ").concat(e.getHours(), ":").concat(e.getSeconds(), ":").concat(e.getMinutes(), "~").concat(e.getMilliseconds());
                        }
                    }, {
                        key: "zeroFix",
                        value: function(e, t) {
                            return ("000000000" + e).slice(-t);
                        }
                    }, {
                        key: "reportAll",
                        value: function() {
                            if (!1 !== this.options.enablePointer) for (var e in this.pointsList) Object.prototype.hasOwnProperty.call(this.pointsList, e) && this.eport(e);
                        }
                    } ]), e;
                }(), xv = function e(t, n) {
                    Ln(this, e), this.userID = t;
                    var r = {};
                    if (r.userID = t, !ac(n)) for (var o = 0, i = n.length; o < i; o++) switch (n[o].tag) {
                      case Mp.NICK:
                        r.nick = n[o].value;
                        break;

                      case Mp.GENDER:
                        r.gender = n[o].value;
                        break;

                      case Mp.BIRTHDAY:
                        r.birthday = n[o].value;
                        break;

                      case Mp.LOCATION:
                        r.location = n[o].value;
                        break;

                      case Mp.SELFSIGNATURE:
                        r.selfSignature = n[o].value;
                        break;

                      case Mp.ALLOWTYPE:
                        r.allowType = n[o].value;
                        break;

                      case Mp.LANGUAGE:
                        r.language = n[o].value;
                        break;

                      case Mp.AVATAR:
                        r.avatar = n[o].value;
                        break;

                      case Mp.MESSAGESETTINGS:
                        r.messageSettings = n[o].value;
                        break;

                      case Mp.ADMINFORBIDTYPE:
                        r.adminForbidType = n[o].value;
                        break;

                      case Mp.LEVEL:
                        r.level = n[o].value;
                        break;

                      case Mp.ROLE:
                        r.role = n[o].value;
                        break;

                      default:
                        Cs.debug("snsProfileItem unkown tag->", n[o].tag);
                    }
                    this.profile = new Ev(r);
                }, wv = function() {
                    function e(t) {
                        Ln(this, e), this.userController = t, this.TAG = "friend", this.Actions = {
                            G: "get",
                            D: "delete"
                        }, this.friends = new Map(), this.pointer = new bv();
                    }
                    return Pn(e, [ {
                        key: "isMyFriend",
                        value: function(e) {
                            var t = this.friends.has(e);
                            return t || Cs.debug("FriendHandler.isMyFriend " + e + " is not my friend"), t;
                        }
                    }, {
                        key: "_transformFriendList",
                        value: function(e) {
                            if (!ac(e) && !ac(e.infoItem)) {
                                Cs.info("FriendHandler._transformFriendList friendNum=" + e.friendNum);
                                for (var t, n, r = e.infoItem, o = 0, i = r.length; o < i; o++) n = r[o].infoAccount, 
                                t = new xv(n, r[o].snsProfileItem), this.friends.set(n, t);
                            }
                        }
                    }, {
                        key: "_friends2map",
                        value: function(e) {
                            var t = new Map();
                            for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && t.set(n, e[n]);
                            return t;
                        }
                    }, {
                        key: "getFriendList",
                        value: function() {
                            var e = this, t = {};
                            t.fromAccount = this.userController.getMyAccount(), Cs.info("FriendHandler.getFriendList myAccount=" + t.fromAccount);
                            var n = this.userController.generateConfig(this.TAG, this.Actions.G, t);
                            return this.userController.request(n).then(function(t) {
                                Cs.info("FriendHandler.getFriendList ok"), e._transformFriendList(t.data);
                                var n = Jn(e.friends.values());
                                return Rd(n);
                            }).catch(function(e) {
                                return Cs.error("FriendHandler.getFriendList error:", e), Pd(e);
                            });
                        }
                    }, {
                        key: "deleteFriend",
                        value: function(e) {
                            if (!Array.isArray(e.toAccount)) return Cs.error("FriendHandler.deleteFriend options.toAccount 必需是数组"), 
                            Pd({
                                code: Bp.DEL_FRIEND_INVALID_PARAM,
                                message: Ph
                            });
                            e.toAccount.length > 1e3 && (Cs.warn("FriendHandler.deleteFriend 删除好友人数不能超过1000人"), 
                            e.toAccount.length = 1e3);
                            var t = this.userController.generateConfig(this.TAG, this.Actions.D, e);
                            return this.userController.request(t).then(function(e) {
                                return Cs.info("FriendHandler.deleteFriend ok"), Rd();
                            }).catch(function(e) {
                                return Cs.error("FriendHandler.deleteFriend error:", e), Pd(e);
                            });
                        }
                    } ]), e;
                }(), Dv = function e(t) {
                    Ln(this, e), ac || (this.userID = t.userID || "", this.timeStamp = t.timeStamp || 0);
                }, kv = function() {
                    function e(t) {
                        Ln(this, e), this.userController = t, this.TAG = "blacklist", this.Actions = {
                            G: "get",
                            C: "create",
                            D: "delete"
                        }, this.blacklistMap = new Map(), this.startIndex = 0, this.maxLimited = 100, this.curruentSequence = 0;
                    }
                    return Pn(e, [ {
                        key: "getBlacklist",
                        value: function() {
                            var e = this, t = {};
                            t.fromAccount = this.userController.getMyAccount(), t.maxLimited = this.maxLimited, 
                            t.startIndex = 0, t.lastSequence = this.curruentSequence;
                            var n = new Xd(Qg), r = this.userController.generateConfig(this.TAG, this.Actions.G, t);
                            return this.userController.request(r).then(function(t) {
                                var r = ac(t.data.blackListItem) ? 0 : t.data.blackListItem.length;
                                return n.setNetworkType(e.userController.getNetworkType()).setText(r).setEnd(), 
                                Cs.info("BlacklistHandler.getBlacklist ok"), e.curruentSequence = t.data.curruentSequence, 
                                e._handleResponse(t.data.blackListItem, !0), e._onBlacklistUpdated();
                            }).catch(function(t) {
                                return e.userController.probeNetwork().then(function(e) {
                                    var r = Yn(e, 2), o = r[0], i = r[1];
                                    n.setError(t, o, i).setEnd();
                                }), Cs.error("BlacklistHandler.getBlacklist error:", t), Pd(t);
                            });
                        }
                    }, {
                        key: "addBlacklist",
                        value: function(e) {
                            var t = this, n = new Xd(Zg);
                            if (!ws(e.userIDList)) return n.setCode(Bp.ADD_BLACKLIST_INVALID_PARAM).setMessage("BlacklistHandler.addBlacklist options.userIDList 必需是数组").setNetworkType(this.userController.getNetworkType()).setEnd(), 
                            Cs.error("BlacklistHandler.addBlacklist options.userIDList 必需是数组"), Pd({
                                code: Bp.ADD_BLACKLIST_INVALID_PARAM,
                                message: Fh
                            });
                            var r = this.userController.tim.loginInfo.identifier;
                            if (1 === e.userIDList.length && e.userIDList[0] === r) return n.setCode(Bp.CANNOT_ADD_SELF_TO_BLACKLIST).setMessage(qh).setNetworkType(this.userController.getNetworkType()).setEnd(), 
                            Cs.error("BlacklistHandler.addBlacklist 不能把自己拉黑"), Pd({
                                code: Bp.CANNOT_ADD_SELF_TO_BLACKLIST,
                                message: qh
                            });
                            e.userIDList.includes(r) && (e.userIDList = e.userIDList.filter(function(e) {
                                return e !== r;
                            }), Cs.warn("BlacklistHandler.addBlacklist 不能把自己拉黑，已过滤")), e.fromAccount = this.userController.getMyAccount(), 
                            e.toAccount = e.userIDList;
                            var o = this.userController.generateConfig(this.TAG, this.Actions.C, e);
                            return this.userController.request(o).then(function(r) {
                                return n.setNetworkType(t.userController.getNetworkType()).setText(e.userIDList.length > 5 ? "userIDList.length=".concat(e.userIDList.length) : "userIDList=".concat(e.userIDList)).setEnd(), 
                                Cs.info("BlacklistHandler.addBlacklist ok"), t._handleResponse(r.data.resultItem, !0), 
                                t._onBlacklistUpdated();
                            }).catch(function(e) {
                                return t.userController.probeNetwork().then(function(t) {
                                    var r = Yn(t, 2), o = r[0], i = r[1];
                                    n.setError(e, o, i).setEnd();
                                }), Cs.error("BlacklistHandler.addBlacklist error:", e), Pd(e);
                            });
                        }
                    }, {
                        key: "_handleResponse",
                        value: function(e, t) {
                            if (!ac(e)) for (var n, r, o, i = 0, a = e.length; i < a; i++) r = e[i].to, o = e[i].resultCode, 
                            (Ds(o) || 0 === o) && (t ? ((n = this.blacklistMap.has(r) ? this.blacklistMap.get(r) : new Dv()).userID = r, 
                            !ac(e[i].addBlackTimeStamp) && (n.timeStamp = e[i].addBlackTimeStamp), this.blacklistMap.set(r, n)) : this.blacklistMap.has(r) && (n = this.blacklistMap.get(r), 
                            this.blacklistMap.delete(r)));
                            Cs.log("BlacklistHandler._handleResponse total=" + this.blacklistMap.size + " bAdd=" + t);
                        }
                    }, {
                        key: "deleteBlacklist",
                        value: function(e) {
                            var t = this, n = new Xd(em);
                            if (!ws(e.userIDList)) return n.setCode(Bp.DEL_BLACKLIST_INVALID_PARAM).setMessage("BlacklistHandler.deleteBlacklist options.userIDList 必需是数组").setNetworkType(this.userController.getNetworkType()).setEnd(), 
                            Cs.error("BlacklistHandler.deleteBlacklist options.userIDList 必需是数组"), Pd({
                                code: Bp.DEL_BLACKLIST_INVALID_PARAM,
                                message: Uh
                            });
                            e.fromAccount = this.userController.getMyAccount(), e.toAccount = e.userIDList;
                            var r = this.userController.generateConfig(this.TAG, this.Actions.D, e);
                            return this.userController.request(r).then(function(r) {
                                return n.setNetworkType(t.userController.getNetworkType()).setText(e.userIDList.length > 5 ? "userIDList.length=".concat(e.userIDList.length) : "userIDList=".concat(e.userIDList)).setEnd(), 
                                Cs.info("BlacklistHandler.deleteBlacklist ok"), t._handleResponse(r.data.resultItem, !1), 
                                t._onBlacklistUpdated();
                            }).catch(function(e) {
                                return t.userController.probeNetwork().then(function(t) {
                                    var r = Yn(t, 2), o = r[0], i = r[1];
                                    n.setError(e, o, i).setEnd();
                                }), Cs.error("BlacklistHandler.deleteBlacklist error:", e), Pd(e);
                            });
                        }
                    }, {
                        key: "_onBlacklistUpdated",
                        value: function() {
                            var e = Jn(this.blacklistMap.keys());
                            return this.userController.emitOuterEvent(Cn.BLACKLIST_UPDATED, e), Rd(e);
                        }
                    }, {
                        key: "handleBlackListDelAccount",
                        value: function(e) {
                            for (var t, n = [], r = 0, o = e.length; r < o; r++) t = e[r], this.blacklistMap.has(t) && (this.blacklistMap.delete(t), 
                            n.push(t));
                            n.length > 0 && (Cs.log("BlacklistHandler.handleBlackListDelAccount delCount=" + n.length + " : " + n.join(",")), 
                            this.userController.emitOuterEvent(Cn.BLACKLIST_UPDATED, Jn(this.blacklistMap.keys())));
                        }
                    }, {
                        key: "handleBlackListAddAccount",
                        value: function(e) {
                            for (var t, n = [], r = 0, o = e.length; r < o; r++) t = e[r], this.blacklistMap.has(t) || (this.blacklistMap.set(t, new Dv({
                                userID: t
                            })), n.push(t));
                            n.length > 0 && (Cs.log("BlacklistHandler.handleBlackListAddAccount addCount=" + n.length + " : " + n.join(",")), 
                            this.userController.emitOuterEvent(Cn.BLACKLIST_UPDATED, Jn(this.blacklistMap.keys())));
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            this.blacklistMap.clear(), this.startIndex = 0, this.maxLimited = 100, this.curruentSequence = 0;
                        }
                    } ]), e;
                }(), Ov = function() {
                    function e(t) {
                        Ln(this, e), this.userController = t, this.TAG = "applyC2C", this.Actions = {
                            C: "create",
                            G: "get",
                            D: "delete",
                            U: "update"
                        };
                    }
                    return Pn(e, [ {
                        key: "applyAddFriend",
                        value: function(e) {
                            var t = this, n = this.userController.generateConfig(this.TAG, this.Actions.C, e), r = this.userController.request(n);
                            return r.then(function(e) {
                                t.userController.isActionSuccessful("applyAddFriend", t.Actions.C, e);
                            }).catch(function(e) {}), r;
                        }
                    }, {
                        key: "getPendency",
                        value: function(e) {
                            var t = this, n = this.userController.generateConfig(this.TAG, this.Actions.G, e), r = this.userController.request(n);
                            return r.then(function(e) {
                                t.userController.isActionSuccessful("getPendency", t.Actions.G, e);
                            }).catch(function(e) {}), r;
                        }
                    }, {
                        key: "deletePendency",
                        value: function(e) {
                            var t = this, n = this.userController.generateConfig(this.TAG, this.Actions.D, e), r = this.userController.request(n);
                            return r.then(function(e) {
                                t.userController.isActionSuccessful("deletePendency", t.Actions.D, e);
                            }).catch(function(e) {}), r;
                        }
                    }, {
                        key: "replyPendency",
                        value: function() {
                            var e = this, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, n = this.userController.generateConfig(this.TAG, this.Actions.U, t), r = this.userController.request(n);
                            return r.then(function(t) {
                                e.userController.isActionSuccessful("replyPendency", e.Actions.U, t);
                            }).catch(function(e) {}), r;
                        }
                    } ]), e;
                }(), Lv = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n(e) {
                        var r;
                        return Ln(this, n), (r = t.call(this, e)).profileHandler = new Av(Kn(r)), r.friendHandler = new wv(Kn(r)), 
                        r.blacklistHandler = new kv(Kn(r)), r.applyC2CHandler = new Ov(Kn(r)), r._initializeListener(), 
                        r;
                    }
                    return Pn(n, [ {
                        key: "_initializeListener",
                        value: function(e) {
                            var t = this.tim.innerEmitter;
                            t.on(bf, this.onContextUpdated, this), t.on(Yf, this.onProfileModified, this), t.on(Wf, this.onNewFriendMessages, this), 
                            t.on(cd, this.onConversationsProfileUpdated, this);
                        }
                    }, {
                        key: "onContextUpdated",
                        value: function(e) {
                            var t = this.tim.context;
                            0 != !!t.a2Key && 0 != !!t.tinyID && (this.profileHandler.getMyProfile(), this.friendHandler.getFriendList(), 
                            this.blacklistHandler.getBlacklist());
                        }
                    }, {
                        key: "onGotMyProfile",
                        value: function() {
                            this.triggerReady();
                        }
                    }, {
                        key: "onProfileModified",
                        value: function(e) {
                            this.profileHandler.onProfileModified(e);
                        }
                    }, {
                        key: "onNewFriendMessages",
                        value: function(e) {
                            Cs.debug("onNewFriendMessages", JSON.stringify(e.data)), ac(e.data.blackListDelAccount) || this.blacklistHandler.handleBlackListDelAccount(e.data.blackListDelAccount), 
                            ac(e.data.blackListAddAccount) || this.blacklistHandler.handleBlackListAddAccount(e.data.blackListAddAccount);
                        }
                    }, {
                        key: "onConversationsProfileUpdated",
                        value: function(e) {
                            this.profileHandler.onConversationsProfileUpdated(e.data);
                        }
                    }, {
                        key: "getMyAccount",
                        value: function() {
                            return this.tim.context.identifier;
                        }
                    }, {
                        key: "isMyFriend",
                        value: function(e) {
                            return this.friendHandler.isMyFriend(e);
                        }
                    }, {
                        key: "generateConfig",
                        value: function(e, t, n) {
                            return {
                                name: e,
                                action: t,
                                param: n
                            };
                        }
                    }, {
                        key: "getMyProfile",
                        value: function() {
                            return this.profileHandler.getMyProfile();
                        }
                    }, {
                        key: "getUserProfile",
                        value: function(e) {
                            return this.profileHandler.getUserProfile(e);
                        }
                    }, {
                        key: "updateMyProfile",
                        value: function(e) {
                            return this.profileHandler.updateMyProfile(e);
                        }
                    }, {
                        key: "getFriendList",
                        value: function() {
                            return this.friendHandler.getFriendList();
                        }
                    }, {
                        key: "deleteFriend",
                        value: function(e) {
                            return this.friendHandler.deleteFriend(e);
                        }
                    }, {
                        key: "getBlacklist",
                        value: function() {
                            return this.blacklistHandler.getBlacklist();
                        }
                    }, {
                        key: "addBlacklist",
                        value: function(e) {
                            return this.blacklistHandler.addBlacklist(e);
                        }
                    }, {
                        key: "deleteBlacklist",
                        value: function(e) {
                            return this.blacklistHandler.deleteBlacklist(e);
                        }
                    }, {
                        key: "applyAddFriend",
                        value: function(e) {
                            return this.applyC2CHandler.applyAddFriend(e);
                        }
                    }, {
                        key: "getPendency",
                        value: function(e) {
                            return this.applyC2CHandler.getPendency(e);
                        }
                    }, {
                        key: "deletePendency",
                        value: function(e) {
                            return this.applyC2CHandler.deletePendency(e);
                        }
                    }, {
                        key: "replyPendency",
                        value: function(e) {
                            return this.applyC2CHandler.replyPendency(e);
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            Cs.info("UserController.reset"), this.resetReady(), this.profileHandler.reset(), 
                            this.blacklistHandler.reset(), this.checkTimes = 0;
                        }
                    } ]), n;
                }(xd), Rv = [], Pv = Rv.sort, Nv = i(function() {
                    Rv.sort(void 0);
                }), Gv = i(function() {
                    Rv.sort(null);
                }), Fv = st("sort");
                Oe({
                    target: "Array",
                    proto: !0,
                    forced: Nv || !Gv || !Fv
                }, {
                    sort: function(e) {
                        return void 0 === e ? Pv.call(Re(this)) : Pv.call(Re(this), nt(e));
                    }
                });
                var Uv = [ "groupID", "name", "avatar", "type", "introduction", "notification", "ownerID", "selfInfo", "createTime", "infoSequence", "lastInfoTime", "lastMessage", "nextMessageSeq", "memberNum", "maxMemberNum", "memberList", "joinOption", "groupCustomField", "muteAllMembers" ], qv = function() {
                    function e(t) {
                        Ln(this, e), this.groupID = "", this.name = "", this.avatar = "", this.type = "", 
                        this.introduction = "", this.notification = "", this.ownerID = "", this.createTime = "", 
                        this.infoSequence = "", this.lastInfoTime = "", this.selfInfo = {
                            messageRemindType: "",
                            joinTime: "",
                            nameCard: "",
                            role: ""
                        }, this.lastMessage = {
                            lastTime: "",
                            lastSequence: "",
                            fromAccount: "",
                            messageForShow: ""
                        }, this.nextMessageSeq = "", this.memberNum = "", this.memberCount = "", this.maxMemberNum = "", 
                        this.maxMemberCount = "", this.joinOption = "", this.groupCustomField = [], this.muteAllMembers = void 0, 
                        this._initGroup(t);
                    }
                    return Pn(e, [ {
                        key: "_initGroup",
                        value: function(e) {
                            for (var t in e) Uv.indexOf(t) < 0 || ("selfInfo" !== t ? ("memberNum" === t && (this.memberCount = e[t]), 
                            "maxMemberNum" === t && (this.maxMemberCount = e[t]), this[t] = e[t]) : this.updateSelfInfo(e[t]));
                        }
                    }, {
                        key: "updateGroup",
                        value: function(e) {
                            var t = JSON.parse(JSON.stringify(e));
                            t.lastMsgTime && (this.lastMessage.lastTime = t.lastMsgTime), Ds(t.muteAllMembers) || ("On" === t.muteAllMembers ? t.muteAllMembers = !0 : t.muteAllMembers = !1), 
                            t.groupCustomField && Ys(this.groupCustomField, t.groupCustomField), Ds(t.memberNum) || (this.memberCount = t.memberNum), 
                            Ds(t.maxMemberNum) || (this.maxMemberCount = t.maxMemberNum), Fs(this, t, [ "members", "errorCode", "lastMsgTime", "groupCustomField", "memberNum", "maxMemberNum" ]);
                        }
                    }, {
                        key: "updateSelfInfo",
                        value: function(e) {
                            var t = e.nameCard, n = e.joinTime, r = e.role, o = e.messageRemindType;
                            Fs(this.selfInfo, {
                                nameCard: t,
                                joinTime: n,
                                role: r,
                                messageRemindType: o
                            }, [], [ "", null, void 0, 0, NaN ]);
                        }
                    }, {
                        key: "setSelfNameCard",
                        value: function(e) {
                            this.selfInfo.nameCard = e;
                        }
                    }, {
                        key: "memberNum",
                        set: function(e) {},
                        get: function() {
                            return Cs.warn("！！！v2.8.0起弃用memberNum，请使用 memberCount"), this.memberCount;
                        }
                    }, {
                        key: "maxMemberNum",
                        set: function(e) {},
                        get: function() {
                            return Cs.warn("！！！v2.8.0起弃用maxMemberNum，请使用 maxMemberCount"), this.maxMemberCount;
                        }
                    } ]), e;
                }(), jv = function(e, t) {
                    if (Ds(t)) return "";
                    switch (e) {
                      case Tn.MSG_TEXT:
                        return t.text;

                      case Tn.MSG_IMAGE:
                        return "[图片]";

                      case Tn.MSG_GEO:
                        return "[位置]";

                      case Tn.MSG_AUDIO:
                        return "[语音]";

                      case Tn.MSG_VIDEO:
                        return "[视频]";

                      case Tn.MSG_FILE:
                        return "[文件]";

                      case Tn.MSG_CUSTOM:
                        return "[自定义消息]";

                      case Tn.MSG_GRP_TIP:
                        return "[群提示消息]";

                      case Tn.MSG_GRP_SYS_NOTICE:
                        return "[群系统通知]";

                      case Tn.MSG_FACE:
                        return "[动画表情]";

                      default:
                        return "";
                    }
                }, $v = function(e) {
                    return Ds(e) ? {
                        lastTime: 0,
                        lastSequence: 0,
                        fromAccount: 0,
                        messageForShow: "",
                        payload: null,
                        type: "",
                        isRevoked: !1
                    } : e instanceof rf ? {
                        lastTime: e.time || 0,
                        lastSequence: e.sequence || 0,
                        fromAccount: e.from || "",
                        messageForShow: jv(e.type, e.payload),
                        payload: e.payload || null,
                        type: e.type || null,
                        isRevoked: !1
                    } : Fn(Fn({}, e), {}, {
                        isRevoked: !1,
                        messageForShow: jv(e.type, e.payload)
                    });
                }, Vv = function() {
                    function e(t) {
                        Ln(this, e), this.conversationID = t.conversationID || "", this.unreadCount = t.unreadCount || 0, 
                        this.type = t.type || "", this.lastMessage = $v(t.lastMessage), t.lastMsgTime && (this.lastMessage.lastTime = t.lastMsgTime), 
                        this._isInfoCompleted = !1, this.peerReadTime = t.peerReadTime || 0, this.groupAtInfoList = [], 
                        this._initProfile(t);
                    }
                    return Pn(e, [ {
                        key: "_initProfile",
                        value: function(e) {
                            var t = this;
                            Object.keys(e).forEach(function(n) {
                                switch (n) {
                                  case "userProfile":
                                    t.userProfile = e.userProfile;
                                    break;

                                  case "groupProfile":
                                    t.groupProfile = e.groupProfile;
                                }
                            }), Ds(this.userProfile) && this.type === Tn.CONV_C2C ? this.userProfile = new Ev({
                                userID: e.conversationID.replace("C2C", "")
                            }) : Ds(this.groupProfile) && this.type === Tn.CONV_GROUP && (this.groupProfile = new qv({
                                groupID: e.conversationID.replace("GROUP", "")
                            }));
                        }
                    }, {
                        key: "updateUnreadCount",
                        value: function(e, t) {
                            Ds(e) || (Qs(this.subType) || Zs(this.subType) ? this.unreadCount = 0 : t && this.type === Tn.CONV_GROUP ? this.unreadCount = e : this.unreadCount = this.unreadCount + e);
                        }
                    }, {
                        key: "updateLastMessage",
                        value: function(e) {
                            this.lastMessage = $v(e);
                        }
                    }, {
                        key: "updateGroupAtInfoList",
                        value: function(e) {
                            var t, n = (Xn(t = e.groupAtType) || Qn(t) || Zn(t) || tr()).slice(0);
                            -1 !== n.indexOf(Tn.CONV_AT_ME) && -1 !== n.indexOf(Tn.CONV_AT_ALL) && (n = [ Tn.CONV_AT_ALL_AT_ME ]);
                            var r = {
                                from: e.from,
                                groupID: e.groupID,
                                messageSequence: e.sequence,
                                atTypeArray: n,
                                __random: e.__random,
                                __sequence: e.__sequence
                            };
                            this.groupAtInfoList.push(r), Cs.debug("Conversation.updateGroupAtInfoList conversationID=".concat(this.conversationID), this.groupAtInfoList);
                        }
                    }, {
                        key: "clearGroupAtInfoList",
                        value: function() {
                            this.groupAtInfoList.length = 0;
                        }
                    }, {
                        key: "reduceUnreadCount",
                        value: function() {
                            this.unreadCount >= 1 && (this.unreadCount -= 1);
                        }
                    }, {
                        key: "isLastMessageRevoked",
                        value: function(e) {
                            var t = e.sequence, n = e.time;
                            return this.type === Tn.CONV_C2C && t === this.lastMessage.lastSequence && n === this.lastMessage.lastTime || this.type === Tn.CONV_GROUP && t === this.lastMessage.lastSequence;
                        }
                    }, {
                        key: "setLastMessageRevoked",
                        value: function(e) {
                            this.lastMessage.isRevoked = e;
                        }
                    }, {
                        key: "toAccount",
                        get: function() {
                            return this.conversationID.replace("C2C", "").replace("GROUP", "");
                        }
                    }, {
                        key: "subType",
                        get: function() {
                            return this.groupProfile ? this.groupProfile.type : "";
                        }
                    } ]), e;
                }(), Bv = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n(e) {
                        var r;
                        return Ln(this, n), (r = t.call(this, e)).pagingStatus = tu.NOT_START, r.pagingTimeStamp = 0, 
                        r.conversationMap = new Map(), r.tempGroupList = [], r.tempGroupAtTipsList = [], 
                        r._initListeners(), r;
                    }
                    return Pn(n, [ {
                        key: "hasLocalConversationMap",
                        value: function() {
                            return this.conversationMap.size > 0;
                        }
                    }, {
                        key: "_createLocalConversation",
                        value: function(e) {
                            return this.conversationMap.has(e) ? this.conversationMap.get(e) : (Cs.log("ConversationController._createLocalConversation conversationID:".concat(e)), 
                            new Vv({
                                conversationID: e,
                                type: e.slice(0, 3) === Tn.CONV_C2C ? Tn.CONV_C2C : Tn.CONV_GROUP
                            }));
                        }
                    }, {
                        key: "hasLocalConversation",
                        value: function(e) {
                            return this.conversationMap.has(e);
                        }
                    }, {
                        key: "getConversationList",
                        value: function() {
                            var e = this;
                            Cs.log("ConversationController.getConversationList."), this.pagingStatus === tu.REJECTED && (Cs.log("ConversationController.getConversationList. continue to sync conversationList"), 
                            this._syncConversationList());
                            var t = new Xd(mg);
                            return this.request({
                                name: "conversation",
                                action: "query"
                            }).then(function(n) {
                                var r = n.data.conversations, o = void 0 === r ? [] : r, i = e._getConversationOptions(o);
                                return e._updateLocalConversationList(i, !0), e._setStorageConversationList(), e._handleC2CPeerReadTime(), 
                                t.setText(o.length).setNetworkType(e.getNetworkType()).setEnd(), Cs.log("ConversationController.getConversationList ok."), 
                                Rd({
                                    conversationList: e.getLocalConversationList()
                                });
                            }).catch(function(n) {
                                return e.probeNetwork().then(function(e) {
                                    var r = Yn(e, 2), o = r[0], i = r[1];
                                    t.setError(n, o, i).setEnd();
                                }), Cs.error("ConversationController.getConversationList error:", n), Pd(n);
                            });
                        }
                    }, {
                        key: "_syncConversationList",
                        value: function() {
                            var e = this, t = new Xd(Sg);
                            return this.pagingStatus === tu.NOT_START && this.conversationMap.clear(), this._autoPagingSyncConversationList().then(function(n) {
                                return e.pagingStatus = tu.RESOLVED, e._setStorageConversationList(), e._handleC2CPeerReadTime(), 
                                t.setText("".concat(e.conversationMap.size)).setNetworkType(e.getNetworkType()).setEnd(), 
                                n;
                            }).catch(function(n) {
                                return e.pagingStatus = tu.REJECTED, t.setText(e.pagingTimeStamp), e.probeNetwork().then(function(e) {
                                    var r = Yn(e, 2), o = r[0], i = r[1];
                                    t.setError(n, o, i).setEnd();
                                }), Pd(n);
                            });
                        }
                    }, {
                        key: "_autoPagingSyncConversationList",
                        value: function() {
                            var e = this;
                            return this.pagingStatus = tu.PENDING, this.request({
                                name: "conversation",
                                action: "pagingQuery",
                                param: {
                                    fromAccount: this.tim.context.identifier,
                                    timeStamp: this.pagingTimeStamp,
                                    orderType: 1
                                }
                            }).then(function(t) {
                                var n = t.data, r = n.completeFlag, o = n.conversations, i = void 0 === o ? [] : o, a = n.timeStamp;
                                if (Cs.log("ConversationController._autoPagingSyncConversationList completeFlag=".concat(r, " nums=").concat(i.length)), 
                                i.length > 0) {
                                    var s = e._getConversationOptions(i);
                                    e._updateLocalConversationList(s, !0);
                                }
                                if (e._isReady) e._emitConversationUpdate(); else {
                                    if (!e.isLoggedIn()) return Rd();
                                    e.triggerReady();
                                }
                                return e.pagingTimeStamp = a, 1 !== r ? e._autoPagingSyncConversationList() : (e._handleGroupAtTipsList(), 
                                Rd());
                            }).catch(function(t) {
                                throw e.isLoggedIn() && (e._isReady || (Cs.warn("ConversationController._autoPagingSyncConversationList failed. error:".concat(Us(t))), 
                                e.triggerReady())), t;
                            });
                        }
                    }, {
                        key: "_handleC2CPeerReadTime",
                        value: function() {
                            var e, t = this.tim.messageController, n = nr(this.conversationMap);
                            try {
                                for (n.s(); !(e = n.n()).done; ) {
                                    var r = Yn(e.value, 2), o = r[0], i = r[1];
                                    i.type === Tn.CONV_C2C && (Cs.debug("ConversationController._handleC2CPeerReadTime", o, i.peerReadTime), 
                                    t.recordPeerReadTime(o, i.peerReadTime));
                                }
                            } catch (s) {
                                n.e(s);
                            } finally {
                                n.f();
                            }
                        }
                    }, {
                        key: "getConversationProfile",
                        value: function(e) {
                            var t = this, n = this.conversationMap.has(e) ? this.conversationMap.get(e) : this._createLocalConversation(e);
                            if (n._isInfoCompleted || n.type === Tn.CONV_SYSTEM) return Rd({
                                conversation: n
                            });
                            var r = new Xd(vg);
                            return Cs.log("ConversationController.getConversationProfile. conversationID:".concat(e, " lastMessage:"), n.lastMessage), 
                            this._updateUserOrGroupProfileCompletely(n).then(function(n) {
                                return r.setNetworkType(t.getNetworkType()).setText("conversationID=".concat(e, " unreadCount=").concat(n.data.conversation.unreadCount)).setEnd(), 
                                Cs.log("ConversationController.getConversationProfile ok. conversationID:", e), 
                                n;
                            }).catch(function(n) {
                                return t.probeNetwork().then(function(t) {
                                    var o = Yn(t, 2), i = o[0], a = o[1];
                                    r.setError(n, i, a).setText("conversationID=".concat(e)).setEnd();
                                }), Cs.error("ConversationController.getConversationProfile error:", n), Pd(n);
                            });
                        }
                    }, {
                        key: "deleteConversation",
                        value: function(e) {
                            var t = this, n = {};
                            if (!this.conversationMap.has(e)) {
                                var r = new Vp({
                                    code: Bp.CONVERSATION_NOT_FOUND,
                                    message: yh
                                });
                                return Pd(r);
                            }
                            switch (this.conversationMap.get(e).type) {
                              case Tn.CONV_C2C:
                                n.type = 1, n.toAccount = e.replace(Tn.CONV_C2C, "");
                                break;

                              case Tn.CONV_GROUP:
                                n.type = 2, n.toGroupID = e.replace(Tn.CONV_GROUP, "");
                                break;

                              case Tn.CONV_SYSTEM:
                                return this.tim.groupController.deleteGroupSystemNotice({
                                    messageList: this.tim.messageController.getLocalMessageList(e)
                                }), this.deleteLocalConversation(e), Rd({
                                    conversationID: e
                                });

                              default:
                                var o = new Vp({
                                    code: Bp.CONVERSATION_UN_RECORDED_TYPE,
                                    message: Sh
                                });
                                return Pd(o);
                            }
                            var i = new Xd(yg);
                            return i.setText("conversationID=".concat(e)), Cs.log("ConversationController.deleteConversation. conversationID=".concat(e)), 
                            this.tim.setMessageRead({
                                conversationID: e
                            }).then(function() {
                                return t.request({
                                    name: "conversation",
                                    action: "delete",
                                    param: n
                                });
                            }).then(function() {
                                return i.setNetworkType(t.getNetworkType()).setEnd(), Cs.log("ConversationController.deleteConversation ok."), 
                                t.deleteLocalConversation(e), Rd({
                                    conversationID: e
                                });
                            }).catch(function(e) {
                                return t.probeNetwork().then(function(t) {
                                    var n = Yn(t, 2), r = n[0], o = n[1];
                                    i.setError(e, r, o).setEnd();
                                }), Cs.error("ConversationController.deleteConversation error:", e), Pd(e);
                            });
                        }
                    }, {
                        key: "getLocalConversationList",
                        value: function() {
                            return Jn(this.conversationMap.values());
                        }
                    }, {
                        key: "getLocalConversation",
                        value: function(e) {
                            return this.conversationMap.get(e);
                        }
                    }, {
                        key: "_initLocalConversationList",
                        value: function() {
                            var e = new Xd(_g);
                            Cs.time(Wd), Cs.log("ConversationController._initLocalConversationList.");
                            var t = this._getStorageConversationList();
                            if (t) {
                                for (var n = t.length, r = 0; r < n; r++) this.conversationMap.set(t[r].conversationID, new Vv(t[r]));
                                this._emitConversationUpdate(!0, !1), e.setNetworkType(this.getNetworkType()).setText(n).setEnd();
                            } else e.setNetworkType(this.getNetworkType()).setText(0).setEnd();
                            this._syncConversationList();
                        }
                    }, {
                        key: "_getStorageConversationList",
                        value: function() {
                            return this.tim.storage.getItem("conversationMap");
                        }
                    }, {
                        key: "_setStorageConversationList",
                        value: function() {
                            var e = this.getLocalConversationList().slice(0, 20).map(function(e) {
                                return {
                                    conversationID: e.conversationID,
                                    type: e.type,
                                    subType: e.subType,
                                    lastMessage: e.lastMessage,
                                    groupProfile: e.groupProfile,
                                    userProfile: e.userProfile
                                };
                            });
                            this.tim.storage.setItem("conversationMap", e);
                        }
                    }, {
                        key: "_initListeners",
                        value: function() {
                            var e = this;
                            this.tim.innerEmitter.once(bf, this._initLocalConversationList, this), this.tim.innerEmitter.on(kf, this._onSendOrReceiveMessage, this), 
                            this.tim.innerEmitter.on(Of, this._handleSyncMessages, this), this.tim.innerEmitter.on(Lf, this._handleSyncMessages, this), 
                            this.tim.innerEmitter.on(Rf, this._onSendOrReceiveMessage, this), this.tim.innerEmitter.on(Pf, this._onSendOrReceiveMessage, this), 
                            this.tim.innerEmitter.on(Nf, this._onSendOrReceiveMessage, this), this.tim.innerEmitter.on(td, this._onGroupListUpdated, this), 
                            this.tim.innerEmitter.on(ld, this._updateConversationUserProfile, this), this.tim.innerEmitter.on(Gf, this._onMessageRevoked, this), 
                            this.tim.innerEmitter.on(Kf, this._onReceiveGroupAtTips, this), this.ready(function() {
                                e.tempGroupList.length > 0 && (e._updateConversationGroupProfile(e.tempGroupList), 
                                e.tempGroupList.length = 0);
                            });
                        }
                    }, {
                        key: "_onGroupListUpdated",
                        value: function(e) {
                            this._updateConversationGroupProfile(e.data);
                        }
                    }, {
                        key: "_updateConversationGroupProfile",
                        value: function(e) {
                            var t = this;
                            ws(e) && 0 === e.length || (this.hasLocalConversationMap() ? (e.forEach(function(e) {
                                var n = "GROUP".concat(e.groupID);
                                if (t.conversationMap.has(n)) {
                                    var r = t.conversationMap.get(n);
                                    r.groupProfile = e, r.lastMessage.lastSequence < e.nextMessageSeq && (r.lastMessage.lastSequence = e.nextMessageSeq - 1), 
                                    r.subType || (r.subType = e.type);
                                }
                            }), this._emitConversationUpdate(!0, !1)) : this.tempGroupList = e);
                        }
                    }, {
                        key: "_updateConversationUserProfile",
                        value: function(e) {
                            var t = this;
                            e.data.forEach(function(e) {
                                var n = "C2C".concat(e.userID);
                                t.conversationMap.has(n) && (t.conversationMap.get(n).userProfile = e);
                            }), this._emitConversationUpdate(!0, !1);
                        }
                    }, {
                        key: "_onMessageRevoked",
                        value: function(e) {
                            var t = this, n = e.data;
                            if (0 !== n.length) {
                                var r = null, o = !1;
                                n.forEach(function(e) {
                                    (r = t.conversationMap.get(e.conversationID)) && r.isLastMessageRevoked(e) && (o = !0, 
                                    r.setLastMessageRevoked(!0));
                                }), o && this._emitConversationUpdate(!0, !1);
                            }
                        }
                    }, {
                        key: "_onReceiveGroupAtTips",
                        value: function(e) {
                            var t = this, n = e.data, r = null;
                            n.forEach(function(e) {
                                e.groupAtTips ? r = e.groupAtTips : e.elements && (r = e.elements), r.__random = e.random, 
                                r.__sequence = e.clientSequence, t.tempGroupAtTipsList.push(r);
                            }), Cs.debug("ConversationController._onReceiveGroupAtTips isReady=".concat(this._isReady), this.tempGroupAtTipsList), 
                            this._isReady && this._handleGroupAtTipsList();
                        }
                    }, {
                        key: "_handleGroupAtTipsList",
                        value: function() {
                            var e = this;
                            if (0 !== this.tempGroupAtTipsList.length) {
                                var t = !1;
                                this.tempGroupAtTipsList.forEach(function(n) {
                                    var r = n.groupID;
                                    if (n.from !== e.tim.context.identifier) {
                                        var o = e.conversationMap.get("".concat(Tn.CONV_GROUP).concat(r));
                                        o && (o.updateGroupAtInfoList(n), t = !0);
                                    }
                                }), t && this._emitConversationUpdate(!0, !1), this.tempGroupAtTipsList.length = 0;
                            }
                        }
                    }, {
                        key: "deleteGroupAtTips",
                        value: function(e) {
                            Cs.log("ConversationController.deleteGroupAtTips");
                            var t = this.conversationMap.get(e);
                            if (!t) return Promise.resolve();
                            var n = t.groupAtInfoList;
                            if (0 === n.length) return Promise.resolve();
                            var r = this.tim.context.identifier;
                            return this.request({
                                name: "conversation",
                                action: "deleteGroupAtTips",
                                param: {
                                    messageListToDelete: n.map(function(e) {
                                        return {
                                            from: e.from,
                                            to: r,
                                            messageSeq: e.__sequence,
                                            messageRandom: e.__random,
                                            groupID: e.groupID
                                        };
                                    })
                                }
                            }).then(function() {
                                return Cs.log("ConversationController.deleteGroupAtTips ok. nums=".concat(n.length)), 
                                t.clearGroupAtInfoList(), Promise.resolve();
                            }).catch(function(e) {
                                return Cs.error("ConversationController.deleteGroupAtTips error:", e), Pd(e);
                            });
                        }
                    }, {
                        key: "_handleSyncMessages",
                        value: function(e) {
                            this._onSendOrReceiveMessage(e, !0);
                        }
                    }, {
                        key: "_onSendOrReceiveMessage",
                        value: function(e) {
                            var t = this, n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], r = e.data.eventDataList;
                            this._isReady ? 0 !== r.length && (this._getPeerReadTime(r), this._updateLocalConversationList(r, !1, n), 
                            this._setStorageConversationList(), this._emitConversationUpdate()) : this.ready(function() {
                                t._onSendOrReceiveMessage(e, n);
                            });
                        }
                    }, {
                        key: "_getPeerReadTime",
                        value: function(e) {
                            var t = this, n = [];
                            e.forEach(function(e) {
                                t.conversationMap.has(e.conversationID) || e.type !== Tn.CONV_C2C || n.push(e.conversationID.replace(Tn.CONV_C2C, ""));
                            }), n.length > 0 && (Cs.debug("ConversationController._getPeerReadTime userIDList:".concat(n)), 
                            this.tim.messageController.getPeerReadTime(n));
                        }
                    }, {
                        key: "_updateLocalConversationList",
                        value: function(e, t, n) {
                            var r;
                            r = this._updateTempConversations(e, t, n), this.conversationMap = new Map(this._sortConversations([].concat(Jn(r.conversations), Jn(this.conversationMap)))), 
                            t || this._updateUserOrGroupProfile(r.newerConversations);
                        }
                    }, {
                        key: "_updateTempConversations",
                        value: function(e, t, n) {
                            for (var r = [], o = [], i = 0, a = e.length; i < a; i++) {
                                var s = new Vv(e[i]), c = this.conversationMap.get(s.conversationID);
                                if (this.conversationMap.has(s.conversationID)) {
                                    var u = [ "unreadCount", "allowType", "adminForbidType", "payload" ];
                                    n && u.push("lastMessage"), Fs(c, s, u, [ null, void 0, "", 0, NaN ]), c.updateUnreadCount(s.unreadCount, t), 
                                    n || (c.lastMessage.payload = e[i].lastMessage.payload), this.conversationMap.delete(c.conversationID), 
                                    r.push([ c.conversationID, c ]);
                                } else {
                                    if (s.type === Tn.CONV_GROUP) {
                                        var l = s.groupProfile.groupID, p = this.tim.groupController.getLocalGroupProfile(l);
                                        p && (s.groupProfile = p, s.updateUnreadCount(0));
                                    }
                                    o.push(s), r.push([ s.conversationID, s ]);
                                }
                            }
                            return {
                                conversations: r,
                                newerConversations: o
                            };
                        }
                    }, {
                        key: "_sortConversations",
                        value: function(e) {
                            return e.sort(function(e, t) {
                                return t[1].lastMessage.lastTime - e[1].lastMessage.lastTime;
                            });
                        }
                    }, {
                        key: "_updateUserOrGroupProfile",
                        value: function(e) {
                            var t = this;
                            if (0 !== e.length) {
                                var n = [], r = [];
                                e.forEach(function(e) {
                                    if (e.type === Tn.CONV_C2C) n.push(e.toAccount); else if (e.type === Tn.CONV_GROUP) {
                                        var o = e.toAccount;
                                        t.tim.groupController.hasLocalGroup(o) ? e.groupProfile = t.tim.groupController.getLocalGroupProfile(o) : r.push(o);
                                    }
                                }), n.length > 0 && this.tim.getUserProfile({
                                    userIDList: n
                                }).then(function(e) {
                                    var n = e.data;
                                    ws(n) ? n.forEach(function(e) {
                                        t.conversationMap.get("C2C".concat(e.userID)).userProfile = e;
                                    }) : t.conversationMap.get("C2C".concat(n.userID)).userProfile = n;
                                }), r.length > 0 && this.tim.groupController.getGroupProfileAdvance({
                                    groupIDList: r,
                                    responseFilter: {
                                        groupBaseInfoFilter: [ "Type", "Name", "FaceUrl" ]
                                    }
                                }).then(function(e) {
                                    e.data.successGroupList.forEach(function(e) {
                                        var n = "GROUP".concat(e.groupID);
                                        if (t.conversationMap.has(n)) {
                                            var r = t.conversationMap.get(n);
                                            Fs(r.groupProfile, e, [], [ null, void 0, "", 0, NaN ]), !r.subType && e.type && (r.subType = e.type);
                                        }
                                    });
                                });
                            }
                        }
                    }, {
                        key: "_updateUserOrGroupProfileCompletely",
                        value: function(e) {
                            var t = this;
                            return e.type === Tn.CONV_C2C ? this.tim.getUserProfile({
                                userIDList: [ e.toAccount ]
                            }).then(function(n) {
                                var r = n.data;
                                return 0 === r.length ? Pd(new Vp({
                                    code: Bp.USER_OR_GROUP_NOT_FOUND,
                                    message: _h
                                })) : (e.userProfile = r[0], e._isInfoCompleted = !0, t._unshiftConversation(e), 
                                Rd({
                                    conversation: e
                                }));
                            }) : this.tim.getGroupProfile({
                                groupID: e.toAccount
                            }).then(function(n) {
                                return e.groupProfile = n.data.group, e._isInfoCompleted = !0, t._unshiftConversation(e), 
                                Rd({
                                    conversation: e
                                });
                            });
                        }
                    }, {
                        key: "_unshiftConversation",
                        value: function(e) {
                            e instanceof Vv && !this.conversationMap.has(e.conversationID) && (this.conversationMap = new Map([ [ e.conversationID, e ] ].concat(Jn(this.conversationMap))), 
                            this._setStorageConversationList(), this._emitConversationUpdate(!0, !1));
                        }
                    }, {
                        key: "deleteLocalConversation",
                        value: function(e) {
                            this.conversationMap.delete(e), this._setStorageConversationList(), this.emitInnerEvent(ud, e), 
                            this._emitConversationUpdate(!0, !1);
                        }
                    }, {
                        key: "_getConversationOptions",
                        value: function(e) {
                            var t = [], n = e.filter(function(e) {
                                var t = e.lastMsg;
                                return xs(t);
                            }).map(function(e) {
                                if (1 === e.type) {
                                    var n = {
                                        userID: e.userID,
                                        nick: e.c2CNick,
                                        avatar: e.c2CImage
                                    };
                                    return t.push(n), {
                                        conversationID: "C2C".concat(e.userID),
                                        type: "C2C",
                                        lastMessage: {
                                            lastTime: e.time,
                                            lastSequence: e.sequence,
                                            fromAccount: e.lastC2CMsgFromAccount,
                                            messageForShow: e.messageShow,
                                            type: e.lastMsg.elements[0] ? e.lastMsg.elements[0].type : null,
                                            payload: e.lastMsg.elements[0] ? e.lastMsg.elements[0].content : null
                                        },
                                        userProfile: new Ev(n),
                                        peerReadTime: e.c2cPeerReadTime
                                    };
                                }
                                return {
                                    conversationID: "GROUP".concat(e.groupID),
                                    type: "GROUP",
                                    lastMessage: {
                                        lastTime: e.time,
                                        lastSequence: e.messageReadSeq + e.unreadCount,
                                        fromAccount: e.msgGroupFromAccount,
                                        messageForShow: e.messageShow,
                                        type: e.lastMsg.elements[0] ? e.lastMsg.elements[0].type : null,
                                        payload: e.lastMsg.elements[0] ? e.lastMsg.elements[0].content : null
                                    },
                                    groupProfile: new qv({
                                        groupID: e.groupID,
                                        name: e.groupNick,
                                        avatar: e.groupImage
                                    }),
                                    unreadCount: e.unreadCount,
                                    peerReadTime: 0
                                };
                            });
                            return t.length > 0 && this.emitInnerEvent(cd, t), n;
                        }
                    }, {
                        key: "_emitConversationUpdate",
                        value: function() {
                            var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], n = Jn(this.conversationMap.values());
                            t && this.emitInnerEvent(sd, n), e && this.emitOuterEvent(Cn.CONVERSATION_LIST_UPDATED, n);
                        }
                    }, {
                        key: "_conversationMapTreeShaking",
                        value: function(e) {
                            var t = this, n = new Map(Jn(this.conversationMap));
                            e.forEach(function(e) {
                                return n.delete(e.conversationID);
                            }), n.has(Tn.CONV_SYSTEM) && n.delete(Tn.CONV_SYSTEM);
                            var r = this.tim.groupController.getJoinedAVChatRoom();
                            r && r.forEach(function(e) {
                                n.delete("".concat(Tn.CONV_GROUP).concat(e));
                            }), Jn(n.keys()).forEach(function(e) {
                                return t.conversationMap.delete(e);
                            });
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            this.pagingStatus = tu.NOT_START, this.pagingTimeStamp = 0, this.conversationMap.clear(), 
                            this.tempGroupAtTipsList.length = 0, this.resetReady(), this.tim.innerEmitter.once(bf, this._initLocalConversationList, this);
                        }
                    } ]), n;
                }(xd), Hv = 1..toFixed, Kv = Math.floor, zv = function e(t, n, r) {
                    return 0 === n ? r : n % 2 == 1 ? e(t, n - 1, r * t) : e(t * t, n / 2, r);
                }, Wv = Hv && ("0.000" !== 8e-5.toFixed(3) || "1" !== .9.toFixed(0) || "1.25" !== 1.255.toFixed(2) || "1000000000000000128" !== (0xde0b6b3a7640080).toFixed(0)) || !i(function() {
                    Hv.call({});
                });
                Oe({
                    target: "Number",
                    proto: !0,
                    forced: Wv
                }, {
                    toFixed: function(e) {
                        var t, n, r, o, i = function(e) {
                            if ("number" != typeof e && "Number" != h(e)) throw TypeError("Incorrect invocation");
                            return +e;
                        }(this), a = ce(e), s = [ 0, 0, 0, 0, 0, 0 ], c = "", u = "0", l = function(e, t) {
                            for (var n = -1, r = t; ++n < 6; ) r += e * s[n], s[n] = r % 1e7, r = Kv(r / 1e7);
                        }, p = function(e) {
                            for (var t = 6, n = 0; --t >= 0; ) n += s[t], s[t] = Kv(n / e), n = n % e * 1e7;
                        }, f = function() {
                            for (var e = 6, t = ""; --e >= 0; ) if ("" !== t || 0 === e || 0 !== s[e]) {
                                var n = String(s[e]);
                                t = "" === t ? n : t + Lr.call("0", 7 - n.length) + n;
                            }
                            return t;
                        };
                        if (a < 0 || a > 20) throw RangeError("Incorrect fraction digits");
                        if (i != i) return "NaN";
                        if (i <= -1e21 || i >= 1e21) return String(i);
                        if (i < 0 && (c = "-", i = -i), i > 1e-21) if (n = (t = function(e) {
                            for (var t = 0, n = e; n >= 4096; ) t += 12, n /= 4096;
                            for (;n >= 2; ) t += 1, n /= 2;
                            return t;
                        }(i * zv(2, 69, 1)) - 69) < 0 ? i * zv(2, -t, 1) : i / zv(2, t, 1), n *= 4503599627370496, 
                        (t = 52 - t) > 0) {
                            for (l(0, n), r = a; r >= 7; ) l(1e7, 0), r -= 7;
                            for (l(zv(10, r, 1), 0), r = t - 1; r >= 23; ) p(1 << 23), r -= 23;
                            p(1 << r), l(1, 1), p(2), u = f();
                        } else l(0, n), l(1 << -t, 0), u = f() + Lr.call("0", a);
                        return a > 0 ? c + ((o = u.length) <= a ? "0." + Lr.call("0", a - o) + u : u.slice(0, o - a) + "." + u.slice(o - a)) : c + u;
                    }
                });
                var Yv = [].push, Jv = Math.min, Xv = !i(function() {
                    return !RegExp(4294967295, "y");
                });
                ya("split", 2, function(e, t, n) {
                    var r;
                    return r = "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1).length || 2 != "ab".split(/(?:ab)*/).length || 4 != ".".split(/(.?)(.?)/).length || ".".split(/()()/).length > 1 || "".split(/.?/).length ? function(e, n) {
                        var r = String(g(this)), o = void 0 === n ? 4294967295 : n >>> 0;
                        if (0 === o) return [];
                        if (void 0 === e) return [ r ];
                        if (!ca(e)) return t.call(r, e, o);
                        for (var i, a, s, c = [], u = (e.ignoreCase ? "i" : "") + (e.multiline ? "m" : "") + (e.unicode ? "u" : "") + (e.sticky ? "y" : ""), l = 0, p = new RegExp(e.source, u + "g"); (i = na.call(p, r)) && !((a = p.lastIndex) > l && (c.push(r.slice(l, i.index)), 
                        i.length > 1 && i.index < r.length && Yv.apply(c, i.slice(1)), s = i[0].length, 
                        l = a, c.length >= o)); ) p.lastIndex === i.index && p.lastIndex++;
                        return l === r.length ? !s && p.test("") || c.push("") : c.push(r.slice(l)), c.length > o ? c.slice(0, o) : c;
                    } : "0".split(void 0, 0).length ? function(e, n) {
                        return void 0 === e && 0 === n ? [] : t.call(this, e, n);
                    } : t, [ function(t, n) {
                        var o = g(this), i = null == t ? void 0 : t[e];
                        return void 0 !== i ? i.call(t, o, n) : r.call(String(o), t, n);
                    }, function(e, o) {
                        var i = n(r, e, this, o, r !== t);
                        if (i.done) return i.value;
                        var a = b(e), s = String(this), c = Lo(a, RegExp), u = a.unicode, l = (a.ignoreCase ? "i" : "") + (a.multiline ? "m" : "") + (a.unicode ? "u" : "") + (Xv ? "y" : "g"), p = new c(Xv ? a : "^(?:" + a.source + ")", l), h = void 0 === o ? 4294967295 : o >>> 0;
                        if (0 === h) return [];
                        if (0 === s.length) return null === Ia(p, s) ? [ s ] : [];
                        for (var f = 0, d = 0, g = []; d < s.length; ) {
                            p.lastIndex = Xv ? d : 0;
                            var m, v = Ia(p, Xv ? s : s.slice(d));
                            if (null === v || (m = Jv(le(p.lastIndex + (Xv ? 0 : d)), s.length)) === f) d = Sa(s, d, u); else {
                                if (g.push(s.slice(f, d)), g.length === h) return g;
                                for (var y = 1; y <= v.length - 1; y++) if (g.push(v[y]), g.length === h) return g;
                                d = f = m;
                            }
                        }
                        return g.push(s.slice(f)), g;
                    } ];
                }, !Xv);
                var Qv, Zv = A.f, ey = "".startsWith, ty = Math.min, ny = pa("startsWith"), ry = !(ny || (Qv = Zv(String.prototype, "startsWith"), 
                !Qv || Qv.writable));
                Oe({
                    target: "String",
                    proto: !0,
                    forced: !ry && !ny
                }, {
                    startsWith: function(e) {
                        var t = String(g(this));
                        ua(e);
                        var n = le(ty(arguments.length > 1 ? arguments[1] : void 0, t.length)), r = String(e);
                        return ey ? ey.call(t, r, n) : t.slice(n, n + r.length) === r;
                    }
                });
                var oy = function() {
                    function e(t) {
                        if (Ln(this, e), void 0 === t) throw new Vp({
                            code: Bp.MESSAGE_LIST_CONSTRUCTOR_NEED_OPTIONS,
                            message: eh
                        });
                        if (void 0 === t.tim) throw new Vp({
                            code: Bp.MESSAGE_LIST_CONSTRUCTOR_NEED_OPTIONS,
                            message: "".concat(eh, ".tim")
                        });
                        this.list = new Map(), this.tim = t.tim, this._initializeOptions(t);
                    }
                    return Pn(e, [ {
                        key: "getLocalOldestMessageByConversationID",
                        value: function(e) {
                            if (!e) return null;
                            if (!this.list.has(e)) return null;
                            var t = this.list.get(e).values();
                            return t ? t.next().value : null;
                        }
                    }, {
                        key: "_initializeOptions",
                        value: function(e) {
                            this.options = {};
                            var t = {
                                memory: {
                                    maxDatasPerKey: 100,
                                    maxBytesPerData: 256,
                                    maxKeys: 0
                                },
                                cache: {
                                    maxDatasPerKey: 10,
                                    maxBytesPerData: 256,
                                    maxKeys: 0
                                }
                            };
                            for (var n in t) if (Object.prototype.hasOwnProperty.call(t, n)) {
                                if (void 0 === e[n]) {
                                    this.options[n] = t[n];
                                    continue;
                                }
                                var r = t[n];
                                for (var o in r) if (Object.prototype.hasOwnProperty.call(r, o)) {
                                    if (void 0 === e[n][o]) {
                                        this.options[n][o] = r[o];
                                        continue;
                                    }
                                    this.options[n][o] = e[n][o];
                                }
                            }
                        }
                    }, {
                        key: "pushIn",
                        value: function(e) {
                            var t = e.conversationID, n = e.ID, r = !0;
                            return this.list.has(t) || this.list.set(t, new Map()), this.list.has(t) && this.list.get(t).has(n) ? r = !1 : this.list.get(t).set(n, e), 
                            r;
                        }
                    }, {
                        key: "unshift",
                        value: function(e) {
                            ws(e) ? e.length > 0 && this._unshiftMultipleMessages(e) : this._unshiftSingleMessage(e);
                        }
                    }, {
                        key: "_unshiftSingleMessage",
                        value: function(e) {
                            var t = e.conversationID, n = e.ID;
                            if (!this.list.has(t)) return this.list.set(t, new Map()), void this.list.get(t).set(n, e);
                            var r = Array.from(this.list.get(t));
                            r.unshift([ n, e ]), this.list.set(t, new Map(r));
                        }
                    }, {
                        key: "_unshiftMultipleMessages",
                        value: function(e) {
                            for (var t = e.length, n = [], r = e[0].conversationID, o = this.list.has(r) ? Array.from(this.list.get(r)) : [], i = 0; i < t; i++) n.push([ e[i].ID, e[i] ]);
                            this.list.set(r, new Map(n.concat(o)));
                        }
                    }, {
                        key: "remove",
                        value: function(e) {
                            var t = e.conversationID, n = e.ID;
                            this.list.has(t) && this.list.get(t).delete(n);
                        }
                    }, {
                        key: "revoke",
                        value: function(e, t, n) {
                            if (Cs.debug("revoke message", e, t, n), this.list.has(e)) {
                                var r, o = nr(this.list.get(e));
                                try {
                                    for (o.s(); !(r = o.n()).done; ) {
                                        var i = Yn(r.value, 2)[1];
                                        if (i.sequence === t && !i.isRevoked && (Ds(n) || i.random === n)) return i.isRevoked = !0, 
                                        i;
                                    }
                                } catch (s) {
                                    o.e(s);
                                } finally {
                                    o.f();
                                }
                            }
                            return null;
                        }
                    }, {
                        key: "removeByConversationID",
                        value: function(e) {
                            this.list.has(e) && this.list.delete(e);
                        }
                    }, {
                        key: "updateMessageIsPeerReadProperty",
                        value: function(e, t) {
                            var n = [];
                            if (this.list.has(e)) {
                                var r, o = nr(this.list.get(e));
                                try {
                                    for (o.s(); !(r = o.n()).done; ) {
                                        var i = Yn(r.value, 2)[1];
                                        i.time <= t && !i.isPeerRead && "out" === i.flow && (i.isPeerRead = !0, n.push(i));
                                    }
                                } catch (s) {
                                    o.e(s);
                                } finally {
                                    o.f();
                                }
                                Cs.log("MessagesList.updateMessageIsPeerReadProperty conversationID=".concat(e, " peerReadTime=").concat(t, " count=").concat(n.length));
                            }
                            return n;
                        }
                    }, {
                        key: "hasLocalMessageList",
                        value: function(e) {
                            return this.list.has(e);
                        }
                    }, {
                        key: "getLocalMessageList",
                        value: function(e) {
                            return this.hasLocalMessageList(e) ? Jn(this.list.get(e).values()) : [];
                        }
                    }, {
                        key: "hasLocalMessage",
                        value: function(e, t) {
                            return !!this.hasLocalMessageList(e) && this.list.get(e).has(t);
                        }
                    }, {
                        key: "getLocalMessage",
                        value: function(e, t) {
                            return this.hasLocalMessage(e, t) ? this.list.get(e).get(t) : null;
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            this.list.clear();
                        }
                    } ]), e;
                }(), iy = function() {
                    function e(t) {
                        Ln(this, e), this.tim = t;
                    }
                    return Pn(e, [ {
                        key: "setMessageRead",
                        value: function(e) {
                            var t = e.conversationID, n = e.messageID, r = this.tim.conversationController, o = r.getLocalConversation(t);
                            if (Cs.log("ReadReportHandler.setMessageRead conversationID=".concat(t, " unreadCount=").concat(o ? o.unreadCount : 0)), 
                            !o) return Rd();
                            if (o.type !== Tn.CONV_GROUP || ac(o.groupAtInfoList) || r.deleteGroupAtTips(t), 
                            0 === o.unreadCount) return Rd();
                            var i = n ? this.tim.messageController.getLocalMessage(t, n) : null;
                            switch (o.type) {
                              case Tn.CONV_C2C:
                                return this._setC2CMessageRead({
                                    conversationID: t,
                                    lastMessageTime: i ? i.time : o.lastMessage.lastTime
                                });

                              case Tn.CONV_GROUP:
                                return this._setGroupMessageRead({
                                    conversationID: t,
                                    lastMessageSeq: i ? i.sequence : o.lastMessage.lastSequence
                                });

                              case Tn.CONV_SYSTEM:
                                return o.unreadCount = 0, Rd();

                              default:
                                return Rd();
                            }
                        }
                    }, {
                        key: "_setC2CMessageRead",
                        value: function(e) {
                            var t = this, n = e.conversationID, r = e.lastMessageTime;
                            Cs.log("ReadReportHandler._setC2CMessageRead conversationID=".concat(n, " lastMessageTime=").concat(r)), 
                            Es(r) || Cs.warn("ReadReportHandler._setC2CMessageRead 请勿修改 Conversation.lastMessage.lastTime，否则可能会导致已读上报结果不准确");
                            var o = new Xd(hg);
                            return o.setText("".concat(n, "-").concat(r)), this.tim.messageController.request({
                                name: "conversation",
                                action: "setC2CMessageRead",
                                param: {
                                    C2CMsgReaded: {
                                        cookie: "",
                                        C2CMsgReadedItem: [ {
                                            toAccount: n.replace("C2C", ""),
                                            lastMessageTime: r,
                                            receipt: 1
                                        } ]
                                    }
                                }
                            }).then(function() {
                                return o.setNetworkType(t.tim.netMonitor.getNetworkType()).setEnd(), Cs.log("ReadReportHandler._setC2CMessageRead ok."), 
                                t._updateIsReadAfterReadReport({
                                    conversationID: n,
                                    lastMessageTime: r
                                }), t._updateUnreadCount(n), new kd();
                            }).catch(function(e) {
                                return t.tim.netMonitor.probe().then(function(t) {
                                    var n = Yn(t, 2), r = n[0], i = n[1];
                                    o.setError(e, r, i).setEnd();
                                }), Cs.log("ReadReportHandler._setC2CMessageRead failed. ".concat(Us(e))), Pd(e);
                            });
                        }
                    }, {
                        key: "_setGroupMessageRead",
                        value: function(e) {
                            var t = this, n = e.conversationID, r = e.lastMessageSeq;
                            Cs.log("ReadReportHandler._setGroupMessageRead conversationID=".concat(n, " lastMessageSeq=").concat(r)), 
                            Es(r) || Cs.warn("ReadReportHandler._setGroupMessageRead 请勿修改 Conversation.lastMessage.lastSequence，否则可能会导致已读上报结果不准确");
                            var o = new Xd(fg);
                            return o.setText("".concat(n, "-").concat(r)), this.tim.messageController.request({
                                name: "conversation",
                                action: "setGroupMessageRead",
                                param: {
                                    groupID: n.replace("GROUP", ""),
                                    messageReadSeq: r
                                }
                            }).then(function() {
                                return o.setNetworkType(t.tim.netMonitor.getNetworkType()).setEnd(), Cs.log("ReadReportHandler._setGroupMessageRead ok."), 
                                t._updateIsReadAfterReadReport({
                                    conversationID: n,
                                    lastMessageSeq: r
                                }), t._updateUnreadCount(n), new kd();
                            }).catch(function(e) {
                                return t.tim.netMonitor.probe().then(function(t) {
                                    var n = Yn(t, 2), r = n[0], i = n[1];
                                    o.setError(e, r, i).setEnd();
                                }), Cs.log("ReadReportHandler._setGroupMessageRead failed. ".concat(Us(e))), Pd(e);
                            });
                        }
                    }, {
                        key: "_updateUnreadCount",
                        value: function(e) {
                            var t = this.tim, n = t.conversationController, r = t.messageController, o = n.getLocalConversation(e), i = r.getLocalMessageList(e);
                            o && (o.unreadCount = i.filter(function(e) {
                                return !e.isRead && !e.getOnlineOnlyFlag();
                            }).length, Cs.log("ReadReportHandler._updateUnreadCount conversationID=".concat(o.conversationID, " unreadCount=").concat(o.unreadCount)));
                        }
                    }, {
                        key: "_updateIsReadAfterReadReport",
                        value: function(e) {
                            var t = e.conversationID, n = e.lastMessageSeq, r = e.lastMessageTime, o = this.tim.messageController.getLocalMessageList(t);
                            if (0 !== o.length) for (var i, a = o.length - 1; a >= 0; a--) if (i = o[a], !(r && i.time > r || n && i.sequence > n)) {
                                if ("in" === i.flow && i.isRead) break;
                                i.setIsRead(!0);
                            }
                        }
                    }, {
                        key: "updateIsRead",
                        value: function(e) {
                            var t = this.tim, n = t.conversationController, r = t.messageController, o = n.getLocalConversation(e), i = r.getLocalMessageList(e);
                            if (o && 0 !== i.length && !ec(o.type)) {
                                for (var a = [], s = 0; s < i.length; s++) "in" !== i[s].flow ? "out" !== i[s].flow || i[s].isRead || i[s].setIsRead(!0) : a.push(i[s]);
                                var c = 0;
                                if (o.type === Tn.CONV_C2C) {
                                    var u = a.slice(-o.unreadCount).filter(function(e) {
                                        return e.isRevoked;
                                    }).length;
                                    c = a.length - o.unreadCount - u;
                                } else c = a.length - o.unreadCount;
                                for (var l = 0; l < c && !a[l].isRead; l++) a[l].setIsRead(!0);
                            }
                        }
                    } ]), e;
                }(), ay = at.findIndex, sy = !0, cy = pt("findIndex");
                "findIndex" in [] && Array(1).findIndex(function() {
                    sy = !1;
                }), Oe({
                    target: "Array",
                    proto: !0,
                    forced: sy || !cy
                }, {
                    findIndex: function(e) {
                        return ay(this, e, arguments.length > 1 ? arguments[1] : void 0);
                    }
                }), pr("findIndex");
                var uy = function() {
                    function e(t) {
                        var n = t.tim, r = t.messageController;
                        Ln(this, e), this.tim = n, this.messageController = r, this.completedMap = new Map(), 
                        this._initListener();
                    }
                    return Pn(e, [ {
                        key: "getMessageList",
                        value: function(e) {
                            var t = this, n = e.conversationID, r = e.nextReqMessageID, o = e.count;
                            if (this.tim.groupController.checkJoinedAVChatRoomByID(n.replace("GROUP", ""))) return Cs.log("GetMessageHandler.getMessageList not available in avchatroom. conversationID=".concat(n)), 
                            Rd({
                                messageList: [],
                                nextReqMessageID: "",
                                isCompleted: !0
                            });
                            (Ds(o) || o > 15) && (o = 15);
                            var i = this._computeLeftCount({
                                conversationID: n,
                                nextReqMessageID: r
                            });
                            return Cs.log("GetMessageHandler.getMessageList. conversationID=".concat(n, " leftCount=").concat(i, " count=").concat(o, " nextReqMessageID=").concat(r)), 
                            this._needGetHistory({
                                conversationID: n,
                                leftCount: i,
                                count: o
                            }) ? this.messageController.getHistoryMessages({
                                conversationID: n,
                                count: 20
                            }).then(function() {
                                return i = t._computeLeftCount({
                                    conversationID: n,
                                    nextReqMessageID: r
                                }), new kd(t._computeResult({
                                    conversationID: n,
                                    nextReqMessageID: r,
                                    count: o,
                                    leftCount: i
                                }));
                            }) : (Cs.log("GetMessageHandler.getMessageList. get messagelist from memory"), Rd(this._computeResult({
                                conversationID: n,
                                nextReqMessageID: r,
                                count: o,
                                leftCount: i
                            })));
                        }
                    }, {
                        key: "setCompleted",
                        value: function(e) {
                            Cs.log("GetMessageHandler.setCompleted. conversationID=".concat(e)), this.completedMap.set(e, !0);
                        }
                    }, {
                        key: "deleteCompletedItem",
                        value: function(e) {
                            Cs.log("GetMessageHandler.deleteCompletedItem. conversationID=".concat(e)), this.completedMap.delete(e);
                        }
                    }, {
                        key: "_initListener",
                        value: function() {
                            var e = this;
                            this.tim.innerEmitter.on(fd, function() {
                                e.setCompleted(Tn.CONV_SYSTEM);
                            }), this.tim.innerEmitter.on(pd, function(t) {
                                var n = t.data;
                                e.setCompleted("".concat(Tn.CONV_GROUP).concat(n));
                            });
                        }
                    }, {
                        key: "_getMessageListSize",
                        value: function(e) {
                            return this.messageController.getLocalMessageList(e).length;
                        }
                    }, {
                        key: "_needGetHistory",
                        value: function(e) {
                            var t = e.conversationID, n = e.leftCount, r = e.count, o = this.tim.conversationController.getLocalConversation(t), i = !!o && o.type === Tn.CONV_SYSTEM, a = !!o && o.subType === Tn.GRP_AVCHATROOM;
                            return !i && !a && n < r && !this.completedMap.has(t);
                        }
                    }, {
                        key: "_computeResult",
                        value: function(e) {
                            var t = e.conversationID, n = e.nextReqMessageID, r = e.count, o = e.leftCount, i = this._computeMessageList({
                                conversationID: t,
                                nextReqMessageID: n,
                                count: r
                            }), a = this._computeIsCompleted({
                                conversationID: t,
                                leftCount: o,
                                count: r
                            }), s = this._computeNextReqMessageID({
                                messageList: i,
                                isCompleted: a,
                                conversationID: t
                            });
                            return Cs.log("GetMessageHandler._computeResult. conversationID=".concat(t, " leftCount=").concat(o, " count=").concat(r, " nextReqMessageID=").concat(s, " nums=").concat(i.length, " isCompleted=").concat(a)), 
                            {
                                messageList: i,
                                nextReqMessageID: s,
                                isCompleted: a
                            };
                        }
                    }, {
                        key: "_computeNextReqMessageID",
                        value: function(e) {
                            var t = e.messageList, n = e.isCompleted, r = e.conversationID;
                            if (!n) return 0 === t.length ? "" : t[0].ID;
                            var o = this.messageController.getLocalMessageList(r);
                            return 0 === o.length ? "" : o[0].ID;
                        }
                    }, {
                        key: "_computeMessageList",
                        value: function(e) {
                            var t = e.conversationID, n = e.nextReqMessageID, r = e.count, o = this.messageController.getLocalMessageList(t), i = this._computeIndexEnd({
                                nextReqMessageID: n,
                                messageList: o
                            }), a = this._computeIndexStart({
                                indexEnd: i,
                                count: r
                            });
                            return o.slice(a, i);
                        }
                    }, {
                        key: "_computeIndexEnd",
                        value: function(e) {
                            var t = e.messageList, n = void 0 === t ? [] : t, r = e.nextReqMessageID;
                            return r ? n.findIndex(function(e) {
                                return e.ID === r;
                            }) : n.length;
                        }
                    }, {
                        key: "_computeIndexStart",
                        value: function(e) {
                            var t = e.indexEnd, n = e.count;
                            return t > n ? t - n : 0;
                        }
                    }, {
                        key: "_computeLeftCount",
                        value: function(e) {
                            var t = e.conversationID, n = e.nextReqMessageID;
                            return n ? this.messageController.getLocalMessageList(t).findIndex(function(e) {
                                return e.ID === n;
                            }) : this._getMessageListSize(t);
                        }
                    }, {
                        key: "_computeIsCompleted",
                        value: function(e) {
                            var t = e.conversationID;
                            return !!(e.leftCount <= e.count && this.completedMap.has(t));
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            Cs.log("GetMessageHandler.reset"), this.completedMap.clear();
                        }
                    } ]), e;
                }(), ly = function e(t) {
                    Ln(this, e), this.value = t, this.next = null;
                }, py = function() {
                    function e(t) {
                        Ln(this, e), this.MAX_LENGTH = t, this.pTail = null, this.pNodeToDel = null, this.map = new Map(), 
                        Cs.log("SinglyLinkedList init MAX_LENGTH=".concat(this.MAX_LENGTH));
                    }
                    return Pn(e, [ {
                        key: "pushIn",
                        value: function(e) {
                            var t = new ly(e);
                            if (this.map.size < this.MAX_LENGTH) null === this.pTail ? (this.pTail = t, this.pNodeToDel = t) : (this.pTail.next = t, 
                            this.pTail = t), this.map.set(e, 1); else {
                                var n = this.pNodeToDel;
                                this.pNodeToDel = this.pNodeToDel.next, this.map.delete(n.value), n.next = null, 
                                n = null, this.pTail.next = t, this.pTail = t, this.map.set(e, 1);
                            }
                        }
                    }, {
                        key: "has",
                        value: function(e) {
                            return this.map.has(e);
                        }
                    }, {
                        key: "tail",
                        value: function() {
                            return this.pTail;
                        }
                    }, {
                        key: "size",
                        value: function() {
                            return this.map.size;
                        }
                    }, {
                        key: "data",
                        value: function() {
                            return Array.from(this.map.keys());
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            for (var e; null !== this.pNodeToDel; ) e = this.pNodeToDel, this.pNodeToDel = this.pNodeToDel.next, 
                            e.next = null, e = null;
                            this.pTail = null, this.map.clear();
                        }
                    } ]), e;
                }(), hy = function() {
                    function e(t) {
                        Ln(this, e), this.tim = t;
                    }
                    return Pn(e, [ {
                        key: "upload",
                        value: function(e) {
                            switch (e.type) {
                              case Tn.MSG_IMAGE:
                                return this._uploadImage(e);

                              case Tn.MSG_FILE:
                                return this._uploadFile(e);

                              case Tn.MSG_AUDIO:
                                return this._uploadAudio(e);

                              case Tn.MSG_VIDEO:
                                return this._uploadVideo(e);

                              default:
                                return Promise.resolve();
                            }
                        }
                    }, {
                        key: "_uploadImage",
                        value: function(e) {
                            var t = this.tim, n = t.uploadController, r = t.messageController, o = e.getElements()[0], i = r.getMessageOptionByID(e.messageID);
                            return n.uploadImage({
                                file: i.payload.file,
                                to: i.to,
                                onProgress: function(e) {
                                    if (o.updatePercent(e), Os(i.onProgress)) try {
                                        i.onProgress(e);
                                    } catch (t) {
                                        return Pd(new Vp({
                                            code: Bp.MESSAGE_ONPROGRESS_FUNCTION_ERROR,
                                            message: "".concat(oh)
                                        }));
                                    }
                                }
                            }).then(function(t) {
                                var n = t.location, r = t.fileType, i = t.fileSize, a = t.width, s = t.height, c = Ws(n);
                                o.updateImageFormat(r);
                                var u = rc({
                                    originUrl: c,
                                    originWidth: a,
                                    originHeight: s,
                                    min: 198
                                }), l = rc({
                                    originUrl: c,
                                    originWidth: a,
                                    originHeight: s,
                                    min: 720
                                });
                                return o.updateImageInfoArray([ {
                                    size: i,
                                    url: c,
                                    width: a,
                                    height: s
                                }, Fn({}, l), Fn({}, u) ]), e;
                            });
                        }
                    }, {
                        key: "_uploadFile",
                        value: function(e) {
                            var t = this.tim, n = t.uploadController, r = t.messageController, o = e.getElements()[0], i = r.getMessageOptionByID(e.messageID);
                            return n.uploadFile({
                                file: i.payload.file,
                                to: i.to,
                                onProgress: function(e) {
                                    if (o.updatePercent(e), Os(i.onProgress)) try {
                                        i.onProgress(e);
                                    } catch (t) {
                                        return Pd(new Vp({
                                            code: Bp.MESSAGE_ONPROGRESS_FUNCTION_ERROR,
                                            message: "".concat(oh)
                                        }));
                                    }
                                }
                            }).then(function(t) {
                                var n = t.location, r = Ws(n);
                                return o.updateFileUrl(r), e;
                            });
                        }
                    }, {
                        key: "_uploadAudio",
                        value: function(e) {
                            var t = this.tim, n = t.uploadController, r = t.messageController, o = e.getElements()[0], i = r.getMessageOptionByID(e.messageID);
                            return n.uploadAudio({
                                file: i.payload.file,
                                to: i.to,
                                onProgress: function(e) {
                                    if (o.updatePercent(e), Os(i.onProgress)) try {
                                        i.onProgress(e);
                                    } catch (t) {
                                        return Pd(new Vp({
                                            code: Bp.MESSAGE_ONPROGRESS_FUNCTION_ERROR,
                                            message: "".concat(oh)
                                        }));
                                    }
                                }
                            }).then(function(t) {
                                var n = t.location, r = Ws(n);
                                return o.updateAudioUrl(r), e;
                            });
                        }
                    }, {
                        key: "_uploadVideo",
                        value: function(e) {
                            var t = this.tim, n = t.uploadController, r = t.messageController, o = e.getElements()[0], i = r.getMessageOptionByID(e.messageID);
                            return n.uploadVideo({
                                file: i.payload.file,
                                to: i.to,
                                onProgress: function(e) {
                                    if (o.updatePercent(e), Os(i.onProgress)) try {
                                        i.onProgress(e);
                                    } catch (t) {
                                        return Pd(new Vp({
                                            code: Bp.MESSAGE_ONPROGRESS_FUNCTION_ERROR,
                                            message: "".concat(oh)
                                        }));
                                    }
                                }
                            }).then(function(t) {
                                var n = Ws(t.location);
                                return o.updateVideoUrl(n), e;
                            });
                        }
                    } ]), e;
                }(), fy = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n(e) {
                        var r;
                        return Ln(this, n), (r = t.call(this, e))._initializeMembers(), r._initializeListener(), 
                        r._initializeHandlers(), r.messageOptionMap = new Map(), r;
                    }
                    return Pn(n, [ {
                        key: "_initializeMembers",
                        value: function() {
                            this.messagesList = new oy({
                                tim: this.tim
                            }), this.currentMessageKey = {}, this.singlyLinkedList = new py(100), this._peerReadTimeMap = new Map();
                        }
                    }, {
                        key: "_initializeHandlers",
                        value: function() {
                            this.readReportHandler = new iy(this.tim, this), this.getMessageHandler = new uy({
                                messageController: this,
                                tim: this.tim
                            }), this.uploadFileHandler = new hy(this.tim);
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            this.messagesList.reset(), this.currentMessageKey = {}, this.getMessageHandler.reset(), 
                            this.singlyLinkedList.reset(), this._peerReadTimeMap.clear(), this.messageOptionMap.clear();
                        }
                    }, {
                        key: "_initializeListener",
                        value: function() {
                            var e = this.tim.innerEmitter;
                            e.on(Vf, this._onReceiveC2CMessage, this), e.on(wf, this._onSyncMessagesProcessing, this), 
                            e.on(Df, this._onSyncMessagesFinished, this), e.on(Bf, this._onReceiveGroupMessage, this), 
                            e.on(Hf, this._onReceiveGroupTips, this), e.on(zf, this._onReceiveSystemNotice, this), 
                            e.on(Jf, this._onReceiveGroupMessageRevokedNotice, this), e.on(Xf, this._onReceiveC2CMessageRevokedNotice, this), 
                            e.on(Qf, this._onC2CMessageReadReceipt, this), e.on(ud, this._clearConversationMessages, this);
                        }
                    }, {
                        key: "_guardForAVChatRoom",
                        value: function(e) {
                            if (e.conversationType === Tn.CONV_GROUP) {
                                var t = this.tim.groupController, n = e.to;
                                return t.hasLocalGroup(n) ? Promise.resolve() : t.getGroupProfile({
                                    groupID: n
                                }).then(function(t) {
                                    var r = t.data.group.type;
                                    if (Cs.log("MessageController._guardForAVChatRoom. groupID=".concat(n, " type=").concat(r)), 
                                    r === Tn.GRP_AVCHATROOM) {
                                        var o = "userId=".concat(e.from, " 未加入群 groupID=").concat(n, "。发消息前先使用 joinGroup 接口申请加群，详细请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#joinGroup");
                                        return Cs.warn("MessageController._guardForAVChatRoom sendMessage not allowed. ".concat(o)), 
                                        Pd(new Vp({
                                            code: Bp.MESSAGE_SEND_FAIL,
                                            message: o,
                                            data: {
                                                message: e
                                            }
                                        }));
                                    }
                                    return Promise.resolve();
                                });
                            }
                            return Promise.resolve();
                        }
                    }, {
                        key: "sendMessageInstance",
                        value: function(e, t) {
                            var n, r = this, o = null;
                            switch (e.conversationType) {
                              case Tn.CONV_C2C:
                                o = this._handleOnSendC2CMessageSuccess.bind(this);
                                break;

                              case Tn.CONV_GROUP:
                                o = this._handleOnSendGroupMessageSuccess.bind(this);
                                break;

                              default:
                                return Pd(new Vp({
                                    code: Bp.MESSAGE_SEND_INVALID_CONVERSATION_TYPE,
                                    message: nh
                                }));
                            }
                            return this.singlyLinkedList.pushIn(e.random), this.uploadFileHandler.upload(e).then(function() {
                                return r._guardForAVChatRoom(e).then(function() {
                                    var o = null;
                                    return e.isSendable() ? (r._addSendMessageTotalCount(e), n = Date.now(), e.conversationType === Tn.CONV_C2C ? o = r._createC2CMessagePack(e, t) : e.conversationType === Tn.CONV_GROUP && (o = r._createGroupMessagePack(e, t)), 
                                    r.request(o)) : Pd({
                                        code: Bp.MESSAGE_FILE_URL_IS_EMPTY,
                                        message: vh
                                    });
                                }).then(function(i) {
                                    return r._addSendMessageSuccessCount(e, n), e.conversationType === Tn.CONV_GROUP && (e.sequence = i.data.sequence, 
                                    e.time = i.data.time, e.generateMessageID(r.tim.context.identifier)), r.messagesList.pushIn(e), 
                                    o(e, i.data), r.messageOptionMap.delete(e.messageID), r._isOnlineMessage(e, t) ? e.setOnlineOnlyFlag(!0) : r.emitInnerEvent(kf, {
                                        eventDataList: [ {
                                            conversationID: e.conversationID,
                                            unreadCount: 0,
                                            type: e.conversationType,
                                            subType: e.conversationSubType,
                                            lastMessage: e
                                        } ]
                                    }), "TIMImageElem" === e.type && oc(e.payload.imageInfoArray), new kd({
                                        message: e
                                    });
                                }).catch(function(t) {
                                    e.status = eu.FAIL;
                                    var n = new Xd(sg);
                                    return n.setMessageType(e.type).setText("".concat(r._generateTjgID(e), "-").concat(e.type, "-").concat(e.from, "-").concat(e.to)), 
                                    r.probeNetwork().then(function(e) {
                                        var r = Yn(e, 2), o = r[0], i = r[1];
                                        n.setError(t, o, i).setEnd();
                                    }), Cs.error("MessageController.sendMessageInstance error:", t), Pd(new Vp({
                                        code: t && t.code ? t.code : Bp.MESSAGE_SEND_FAIL,
                                        message: t && t.message ? t.message : Zp,
                                        data: {
                                            message: e
                                        }
                                    }));
                                });
                            });
                        }
                    }, {
                        key: "_getSendMessageSpecifiedKey",
                        value: function(e) {
                            if (e.conversationType === Tn.CONV_C2C) return jd;
                            if (e.conversationType === Tn.CONV_GROUP) {
                                var t = this.tim.groupController.getLocalGroupProfile(e.to);
                                if (!t) return;
                                var n = t.type;
                                if (Js(n)) return $d;
                                if (Xs(n)) return Vd;
                                if (Qs(n)) return Bd;
                                if (Zs(n)) return Hd;
                            }
                        }
                    }, {
                        key: "_addSendMessageTotalCount",
                        value: function(e) {
                            var t = this.tim.sumStatController;
                            t.addTotalCount(qd);
                            var n = this._getSendMessageSpecifiedKey(e);
                            n && t.addTotalCount(n);
                        }
                    }, {
                        key: "_addSendMessageSuccessCount",
                        value: function(e, t) {
                            var n = this.tim.sumStatController, r = Math.abs(Date.now() - t);
                            n.addSuccessCount(qd), n.addCost(qd, r);
                            var o = this._getSendMessageSpecifiedKey(e);
                            o && (n.addSuccessCount(o), n.addCost(o, r));
                        }
                    }, {
                        key: "resendMessage",
                        value: function(e) {
                            return e.isResend = !0, e.status = eu.UNSEND, this.sendMessageInstance(e);
                        }
                    }, {
                        key: "_isFileLikeMessage",
                        value: function(e) {
                            return [ Tn.MSG_IMAGE, Tn.MSG_FILE, Tn.MSG_AUDIO, Tn.MSG_VIDEO ].indexOf(e.type) >= 0;
                        }
                    }, {
                        key: "_resendBinaryTypeMessage",
                        value: function() {}
                    }, {
                        key: "_canIUseOnlineOnlyFlag",
                        value: function(e) {
                            var t = this.tim.groupController.getJoinedAVChatRoom();
                            return !t || !t.includes(e.to) || e.conversationType !== Tn.CONV_GROUP;
                        }
                    }, {
                        key: "_isOnlineMessage",
                        value: function(e, t) {
                            return !(!this._canIUseOnlineOnlyFlag(e) || !t || !0 !== t.onlineUserOnly);
                        }
                    }, {
                        key: "_createC2CMessagePack",
                        value: function(e, t) {
                            var n = null;
                            return t && (t.offlinePushInfo && (n = t.offlinePushInfo), !0 === t.onlineUserOnly && (n ? n.disablePush = !0 : n = {
                                disablePush: !0
                            })), {
                                name: "c2cMessage",
                                action: "create",
                                tjgID: this._generateTjgID(e),
                                param: {
                                    toAccount: e.to,
                                    msgBody: e.getElements(),
                                    msgSeq: e.sequence,
                                    msgRandom: e.random,
                                    msgLifeTime: this._isOnlineMessage(e, t) ? 0 : void 0,
                                    offlinePushInfo: n ? {
                                        pushFlag: !0 === n.disablePush ? 1 : 0,
                                        title: n.title || "",
                                        desc: n.description || "",
                                        ext: n.extension || "",
                                        apnsInfo: {
                                            badgeMode: !0 === n.ignoreIOSBadge ? 1 : 0
                                        },
                                        androidInfo: {
                                            OPPOChannelID: n.androidOPPOChannelID || ""
                                        }
                                    } : void 0
                                }
                            };
                        }
                    }, {
                        key: "_handleOnSendC2CMessageSuccess",
                        value: function(e, t) {
                            e.status = eu.SUCCESS, e.time = t.time;
                        }
                    }, {
                        key: "_createGroupMessagePack",
                        value: function(e, t) {
                            var n = null;
                            t && t.offlinePushInfo && (n = t.offlinePushInfo);
                            var r = e.getGroupAtInfoList();
                            return {
                                name: "groupMessage",
                                action: "create",
                                tjgID: this._generateTjgID(e),
                                param: {
                                    groupID: e.to,
                                    msgBody: e.getElements(),
                                    random: e.random,
                                    priority: e.priority,
                                    clientSequence: e.clientSequence,
                                    groupAtInfo: e.type !== Tn.MSG_TEXT || ac(r) ? void 0 : r,
                                    onlineOnlyFlag: this._isOnlineMessage(e, t) ? 1 : 0,
                                    offlinePushInfo: n ? {
                                        pushFlag: !0 === n.disablePush ? 1 : 0,
                                        title: n.title || "",
                                        desc: n.description || "",
                                        ext: n.extension || "",
                                        apnsInfo: {
                                            badgeMode: !0 === n.ignoreIOSBadge ? 1 : 0
                                        },
                                        androidInfo: {
                                            OPPOChannelID: n.androidOPPOChannelID || ""
                                        }
                                    } : void 0
                                }
                            };
                        }
                    }, {
                        key: "_handleOnSendGroupMessageSuccess",
                        value: function(e, t) {
                            e.sequence = t.sequence, e.time = t.time, e.status = eu.SUCCESS;
                        }
                    }, {
                        key: "_onReceiveC2CMessage",
                        value: function(e) {
                            Cs.debug("MessageController._onReceiveC2CMessage nums=".concat(e.data.length));
                            var t = Date.now(), n = this._newC2CMessageStoredAndSummary({
                                notifiesList: e.data,
                                type: Tn.CONV_C2C,
                                C2CRemainingUnreadList: e.C2CRemainingUnreadList
                            }), r = n.eventDataList, o = n.result;
                            if (r.length > 0 && this.emitInnerEvent(Rf, {
                                eventDataList: r,
                                result: o
                            }), o.length > 0) {
                                var i = this.tim.sumStatController;
                                i.addTotalCount(Kd), i.addSuccessCount(Kd), i.addCost(Kd, Date.now() - t), this.emitOuterEvent(Cn.MESSAGE_RECEIVED, o);
                            }
                        }
                    }, {
                        key: "_onReceiveGroupMessage",
                        value: function(e) {
                            Cs.debug("MessageController._onReceiveGroupMessage nums=".concat(e.data.length));
                            var t = Date.now(), n = this.newGroupMessageStoredAndSummary(e.data), r = n.eventDataList, o = n.result;
                            if (r.length > 0 && this.emitInnerEvent(Pf, {
                                eventDataList: r,
                                result: o,
                                isGroupTip: !1
                            }), o.length > 0) {
                                var i = this.tim.sumStatController;
                                i.addTotalCount(Kd), i.addSuccessCount(Kd), i.addCost(Kd, Date.now() - t), this.emitOuterEvent(Cn.MESSAGE_RECEIVED, o);
                            }
                        }
                    }, {
                        key: "_onReceiveGroupTips",
                        value: function(e) {
                            var t = Date.now(), n = e.data;
                            Cs.debug("MessageController._onReceiveGroupTips nums=".concat(n.length));
                            var r = this.newGroupTipsStoredAndSummary(n), o = r.eventDataList, i = r.result;
                            if (o.length > 0 && this.emitInnerEvent(Pf, {
                                eventDataList: o,
                                result: i,
                                isGroupTip: !0
                            }), i.length > 0) {
                                var a = this.tim.sumStatController;
                                a.addTotalCount(Kd), a.addSuccessCount(Kd), a.addCost(Kd, Date.now() - t), this.emitOuterEvent(Cn.MESSAGE_RECEIVED, i);
                            }
                        }
                    }, {
                        key: "_onReceiveSystemNotice",
                        value: function(e) {
                            var t = Date.now(), n = e.data, r = n.groupSystemNotices, o = n.type;
                            Cs.debug("MessageController._onReceiveSystemNotice nums=".concat(r.length));
                            var i = this.newSystemNoticeStoredAndSummary({
                                notifiesList: r,
                                type: o
                            }), a = i.eventDataList, s = i.result;
                            if (a.length > 0 && this.emitInnerEvent(Nf, {
                                eventDataList: a,
                                result: s,
                                type: o
                            }), s.length > 0 && "poll" === o) {
                                var c = this.tim.sumStatController;
                                c.addTotalCount(Kd), c.addSuccessCount(Kd), c.addCost(Kd, Date.now() - t), this.emitOuterEvent(Cn.MESSAGE_RECEIVED, s);
                            }
                        }
                    }, {
                        key: "_onReceiveGroupMessageRevokedNotice",
                        value: function(e) {
                            var t = this;
                            Cs.debug("MessageController._onReceiveGroupMessageRevokedNotice nums=".concat(e.data.length));
                            var n = [], r = null;
                            e.data.forEach(function(e) {
                                e.elements.revokedInfos.forEach(function(e) {
                                    (r = t.messagesList.revoke("GROUP".concat(e.groupID), e.sequence)) && n.push(r);
                                });
                            }), 0 !== n.length && (this.emitInnerEvent(Gf, n), this.emitOuterEvent(Cn.MESSAGE_REVOKED, n));
                        }
                    }, {
                        key: "_onReceiveC2CMessageRevokedNotice",
                        value: function(e) {
                            var t = this;
                            Cs.debug("MessageController._onReceiveC2CMessageRevokedNotice nums=".concat(e.data.length));
                            var n = [], r = null;
                            e.data.forEach(function(e) {
                                e.c2cMessageRevokedNotify.revokedInfos.forEach(function(e) {
                                    var o = t.tim.context.identifier === e.from ? "C2C".concat(e.to) : "C2C".concat(e.from);
                                    (r = t.messagesList.revoke(o, e.sequence, e.random)) && n.push(r);
                                });
                            }), 0 !== n.length && (this.emitInnerEvent(Gf, n), this.emitOuterEvent(Cn.MESSAGE_REVOKED, n));
                        }
                    }, {
                        key: "_onC2CMessageReadReceipt",
                        value: function(e) {
                            var t = this;
                            e.data.forEach(function(e) {
                                if (!ac(e.c2cMessageReadReceipt)) {
                                    var n = e.c2cMessageReadReceipt.to;
                                    e.c2cMessageReadReceipt.uinPairReadArray.forEach(function(e) {
                                        var r = e.peerReadTime;
                                        Cs.debug("MessageController._onC2CMessageReadReceipt to=".concat(n, " peerReadTime=").concat(r));
                                        var o = "C2C".concat(n);
                                        t.recordPeerReadTime(o, r), t._updateMessageIsPeerReadProperty(o, r);
                                    });
                                }
                            });
                        }
                    }, {
                        key: "_updateMessageIsPeerReadProperty",
                        value: function(e, t) {
                            if (e.startsWith(Tn.CONV_C2C) && t > 0) {
                                var n = this.messagesList.updateMessageIsPeerReadProperty(e, t);
                                n.length > 0 && this.emitOuterEvent(Cn.MESSAGE_READ_BY_PEER, n);
                            }
                        }
                    }, {
                        key: "getPeerReadTime",
                        value: function(e) {
                            var t = this;
                            if (!ac(e)) {
                                var n = new Xd(gg);
                                return Cs.log("MessageController.getPeerReadTime userIDList:".concat(e)), this.request({
                                    name: "c2cPeerReadTime",
                                    action: "get",
                                    param: {
                                        userIDList: e
                                    }
                                }).then(function(r) {
                                    var o = r.data.peerReadTimeList;
                                    Cs.log("MessageController.getPeerReadTime ok. peerReadTimeList:".concat(o));
                                    for (var i = "", a = 0; a < e.length; a++) i += "".concat(e[a], "-").concat(o[a], " "), 
                                    o[a] > 0 && t.recordPeerReadTime("C2C".concat(e[a]), o[a]);
                                    n.setNetworkType(t.getNetworkType()).setText(i).setEnd();
                                }).catch(function(e) {
                                    t.probeNetwork().then(function(t) {
                                        var r = Yn(t, 2), o = r[0], i = r[1];
                                        n.setError(e, o, i).setEnd();
                                    }), Cs.warn("MessageController.getPeerReadTime failed. error:", e);
                                });
                            }
                        }
                    }, {
                        key: "recordPeerReadTime",
                        value: function(e, t) {
                            this._peerReadTimeMap.has(e) ? this._peerReadTimeMap.get(e) < t && this._peerReadTimeMap.set(e, t) : this._peerReadTimeMap.set(e, t);
                        }
                    }, {
                        key: "_clearConversationMessages",
                        value: function(e) {
                            var t = e.data;
                            this.messagesList.removeByConversationID(t), this.getMessageHandler.deleteCompletedItem(t);
                        }
                    }, {
                        key: "_pushIntoNoticeResult",
                        value: function(e, t) {
                            return !(!this.messagesList.pushIn(t) || this.singlyLinkedList.has(t.random)) && (e.push(t), 
                            !0);
                        }
                    }, {
                        key: "_newC2CMessageStoredAndSummary",
                        value: function(e) {
                            for (var t = e.notifiesList, n = e.type, r = e.C2CRemainingUnreadList, o = e.isFromSync, i = null, a = [], s = [], c = {}, u = this.tim.bigDataHallwayController, l = 0, p = t.length; l < p; l++) {
                                var h = t[l];
                                (h.currentUser = this.tim.context.identifier, h.conversationType = n, h.isSystemMessage = !!h.isSystemMessage, 
                                i = new rf(h), h.elements = u.parseElements(h.elements, h.from), i.setElement(h.elements), 
                                o || this._pushIntoNoticeResult(s, i)) && (0 !== h.msgLifeTime ? void 0 === c[i.conversationID] ? c[i.conversationID] = a.push({
                                    conversationID: i.conversationID,
                                    unreadCount: "out" === i.flow ? 0 : 1,
                                    type: i.conversationType,
                                    subType: i.conversationSubType,
                                    lastMessage: i
                                }) - 1 : (a[c[i.conversationID]].type = i.conversationType, a[c[i.conversationID]].subType = i.conversationSubType, 
                                a[c[i.conversationID]].lastMessage = i, "in" === i.flow && a[c[i.conversationID]].unreadCount++) : i.setOnlineOnlyFlag(!0));
                            }
                            if (ws(r)) for (var f = function(e, t) {
                                var n = a.find(function(t) {
                                    return t.conversationID === "C2C".concat(r[e].from);
                                });
                                n ? n.unreadCount += r[e].count : a.push({
                                    conversationID: "C2C".concat(r[e].from),
                                    unreadCount: r[e].count,
                                    type: Tn.CONV_C2C,
                                    lastMsgTime: r[e].lastMsgTime
                                });
                            }, d = 0, g = r.length; d < g; d++) f(d);
                            return {
                                eventDataList: a,
                                result: s
                            };
                        }
                    }, {
                        key: "newGroupMessageStoredAndSummary",
                        value: function(e) {
                            var t = null, n = [], r = {}, o = [], i = Tn.CONV_GROUP, a = this.tim.bigDataHallwayController, s = e.length;
                            s > 1 && e.sort(function(e, t) {
                                return e.sequence - t.sequence;
                            });
                            for (var c = 0; c < s; c++) {
                                var u = e[c];
                                u.currentUser = this.tim.context.identifier, u.conversationType = i, u.isSystemMessage = !!u.isSystemMessage, 
                                t = new rf(u), u.elements = a.parseElements(u.elements, u.from), t.setElement(u.elements), 
                                this._isMessageFromAVChatroom(t) || this._pushIntoNoticeResult(o, t) && (1 !== u.onlineOnlyFlag ? void 0 === r[t.conversationID] ? r[t.conversationID] = n.push({
                                    conversationID: t.conversationID,
                                    unreadCount: "out" === t.flow ? 0 : 1,
                                    type: t.conversationType,
                                    subType: t.conversationSubType,
                                    lastMessage: t
                                }) - 1 : (n[r[t.conversationID]].type = t.conversationType, n[r[t.conversationID]].subType = t.conversationSubType, 
                                n[r[t.conversationID]].lastMessage = t, "in" === t.flow && n[r[t.conversationID]].unreadCount++) : t.setOnlineOnlyFlag(!0));
                            }
                            return {
                                eventDataList: n,
                                result: o
                            };
                        }
                    }, {
                        key: "_isMessageFromAVChatroom",
                        value: function(e) {
                            var t = e.conversationID.slice(5);
                            return this.tim.groupController.checkJoinedAVChatRoomByID(t);
                        }
                    }, {
                        key: "newGroupTipsStoredAndSummary",
                        value: function(e) {
                            for (var t = null, n = [], r = [], o = {}, i = 0, a = e.length; i < a; i++) {
                                var s = e[i];
                                s.currentUser = this.tim.context.identifier, s.conversationType = Tn.CONV_GROUP, 
                                (t = new rf(s)).setElement({
                                    type: Tn.MSG_GRP_TIP,
                                    content: Fn(Fn({}, s.elements), {}, {
                                        groupProfile: s.groupProfile
                                    })
                                }), t.isSystemMessage = !1, this._isMessageFromAVChatroom(t) || this._pushIntoNoticeResult(r, t) && (void 0 === o[t.conversationID] ? o[t.conversationID] = n.push({
                                    conversationID: t.conversationID,
                                    unreadCount: "out" === t.flow ? 0 : 1,
                                    type: t.conversationType,
                                    subType: t.conversationSubType,
                                    lastMessage: t
                                }) - 1 : (n[o[t.conversationID]].type = t.conversationType, n[o[t.conversationID]].subType = t.conversationSubType, 
                                n[o[t.conversationID]].lastMessage = t, "in" === t.flow && n[o[t.conversationID]].unreadCount++));
                            }
                            return {
                                eventDataList: n,
                                result: r
                            };
                        }
                    }, {
                        key: "newSystemNoticeStoredAndSummary",
                        value: function(e) {
                            var t = e.notifiesList, n = e.type, r = null, o = t.length, i = 0, a = [], s = {
                                conversationID: Tn.CONV_SYSTEM,
                                unreadCount: 0,
                                type: Tn.CONV_SYSTEM,
                                subType: null,
                                lastMessage: null
                            };
                            for (i = 0; i < o; i++) {
                                var c = t[i];
                                c.elements.operationType !== vp && (c.currentUser = this.tim.context.identifier, 
                                c.conversationType = Tn.CONV_SYSTEM, c.conversationID = Tn.CONV_SYSTEM, (r = new rf(c)).setElement({
                                    type: Tn.MSG_GRP_SYS_NOTICE,
                                    content: Fn(Fn({}, c.elements), {}, {
                                        groupProfile: c.groupProfile
                                    })
                                }), r.isSystemMessage = !0, (1 === r.sequence && 1 === r.random || 2 === r.sequence && 2 === r.random) && (r.sequence = $s(), 
                                r.random = $s(), r.generateMessageID(c.currentUser), Cs.log("MessageController.newSystemNoticeStoredAndSummary sequence and random maybe duplicated, regenerate. ID=".concat(r.ID))), 
                                this._pushIntoNoticeResult(a, r) && ("poll" === n ? s.unreadCount++ : "sync" === n && r.setIsRead(!0), 
                                s.subType = r.conversationSubType));
                            }
                            return s.lastMessage = a[a.length - 1], {
                                eventDataList: a.length > 0 ? [ s ] : [],
                                result: a
                            };
                        }
                    }, {
                        key: "_onSyncMessagesProcessing",
                        value: function(e) {
                            var t = this._newC2CMessageStoredAndSummary({
                                notifiesList: e.data,
                                type: Tn.CONV_C2C,
                                isFromSync: !0,
                                C2CRemainingUnreadList: e.C2CRemainingUnreadList
                            }), n = t.eventDataList, r = t.result;
                            this.emitInnerEvent(Of, {
                                eventDataList: n,
                                result: r
                            });
                        }
                    }, {
                        key: "_onSyncMessagesFinished",
                        value: function(e) {
                            this.triggerReady();
                            var t = this._newC2CMessageStoredAndSummary({
                                notifiesList: e.data.messageList,
                                type: Tn.CONV_C2C,
                                isFromSync: !0,
                                C2CRemainingUnreadList: e.data.C2CRemainingUnreadList
                            }), n = t.eventDataList, r = t.result;
                            this.emitInnerEvent(Lf, {
                                eventDataList: n,
                                result: r
                            });
                        }
                    }, {
                        key: "getHistoryMessages",
                        value: function(e) {
                            if (e.conversationID === Tn.CONV_SYSTEM) return Rd();
                            !e.count && (e.count = 15), e.count > 20 && (e.count = 20);
                            var t = this.messagesList.getLocalOldestMessageByConversationID(e.conversationID);
                            t || ((t = {}).time = 0, t.sequence = 0, 0 === e.conversationID.indexOf(Tn.CONV_C2C) ? (t.to = e.conversationID.replace(Tn.CONV_C2C, ""), 
                            t.conversationType = Tn.CONV_C2C) : 0 === e.conversationID.indexOf(Tn.CONV_GROUP) && (t.to = e.conversationID.replace(Tn.CONV_GROUP, ""), 
                            t.conversationType = Tn.CONV_GROUP));
                            var n = "";
                            switch (t.conversationType) {
                              case Tn.CONV_C2C:
                                return n = e.conversationID.replace(Tn.CONV_C2C, ""), this.getC2CRoamMessages({
                                    conversationID: e.conversationID,
                                    peerAccount: n,
                                    count: e.count,
                                    lastMessageTime: void 0 === this.currentMessageKey[e.conversationID] ? 0 : t.time
                                });

                              case Tn.CONV_GROUP:
                                return this.getGroupRoamMessages({
                                    conversationID: e.conversationID,
                                    groupID: t.to,
                                    count: e.count,
                                    sequence: t.sequence - 1
                                });

                              default:
                                return Rd();
                            }
                        }
                    }, {
                        key: "getC2CRoamMessages",
                        value: function(e) {
                            var t = this, n = e.conversationID, r = void 0 !== this.currentMessageKey[n] ? this.currentMessageKey[n] : "";
                            Cs.log("MessageController.getC2CRoamMessages toAccount=".concat(e.peerAccount, " count=").concat(e.count || 15, " lastMessageTime=").concat(e.lastMessageTime || 0, " messageKey=").concat(r));
                            var o = new Xd(ug);
                            return this.request({
                                name: "c2cMessage",
                                action: "query",
                                param: {
                                    peerAccount: e.peerAccount,
                                    count: e.count || 15,
                                    lastMessageTime: e.lastMessageTime || 0,
                                    messageKey: r
                                }
                            }).then(function(i) {
                                var a = i.data, s = a.complete, c = a.messageList;
                                Ds(c) ? Cs.log("MessageController.getC2CRoamMessages ok. complete=".concat(s, " but messageList is undefined!")) : Cs.log("MessageController.getC2CRoamMessages ok. complete=".concat(s, " nums=").concat(c.length)), 
                                o.setNetworkType(t.getNetworkType()).setText("".concat(e.peerAccount, "-").concat(e.count || 15, "-").concat(e.lastMessageTime || 0, "-").concat(r, "-").concat(s, "-").concat(c ? c.length : "undefined")).setEnd(), 
                                1 === s && t.getMessageHandler.setCompleted(n);
                                var u = t._roamMessageStore(c, Tn.CONV_C2C, n);
                                t.readReportHandler.updateIsRead(n), t.currentMessageKey[n] = i.data.messageKey;
                                var l = t._peerReadTimeMap.get(n);
                                if (Cs.log("MessageController.getC2CRoamMessages update isPeerRead property. conversationID=".concat(n, " peerReadTime=").concat(l)), 
                                l) t._updateMessageIsPeerReadProperty(n, l); else {
                                    var p = n.replace(Tn.CONV_C2C, "");
                                    t.getPeerReadTime([ p ]).then(function() {
                                        t._updateMessageIsPeerReadProperty(n, t._peerReadTimeMap.get(n));
                                    });
                                }
                                return u;
                            }).catch(function(n) {
                                return t.probeNetwork().then(function(t) {
                                    var i = Yn(t, 2), a = i[0], s = i[1];
                                    o.setError(n, a, s).setText("".concat(e.peerAccount, "-").concat(e.count || 15, "-").concat(e.lastMessageTime || 0, "-").concat(r)).setEnd();
                                }), Cs.warn("MessageController.getC2CRoamMessages failed. ".concat(n)), Pd(n);
                            });
                        }
                    }, {
                        key: "_computeLastSequence",
                        value: function(e) {
                            return e.sequence >= 0 ? Promise.resolve(e.sequence) : this.tim.groupController.getGroupLastSequence(e.groupID);
                        }
                    }, {
                        key: "getGroupRoamMessages",
                        value: function(e) {
                            var t = this, n = new Xd(lg), r = 0;
                            return this._computeLastSequence(e).then(function(n) {
                                return r = n, Cs.log("MessageController.getGroupRoamMessages groupID=".concat(e.groupID, " lastSequence=").concat(r)), 
                                t.request({
                                    name: "groupMessage",
                                    action: "query",
                                    param: {
                                        groupID: e.groupID,
                                        count: 21,
                                        sequence: r
                                    }
                                });
                            }).then(function(o) {
                                var i = o.data, a = i.messageList, s = i.complete;
                                Ds(a) ? Cs.log("MessageController.getGroupRoamMessages ok. complete=".concat(s, " but messageList is undefined!")) : Cs.log("MessageController.getGroupRoamMessages ok. complete=".concat(s, " nums=").concat(a.length)), 
                                n.setNetworkType(t.getNetworkType()).setText("".concat(e.groupID, "-").concat(r, "-").concat(s, "-").concat(a ? a.length : "undefined")).setEnd();
                                var c = "GROUP".concat(e.groupID);
                                if (2 === s || ac(a)) return t.getMessageHandler.setCompleted(c), [];
                                var u = t._roamMessageStore(a, Tn.CONV_GROUP, c);
                                return t.readReportHandler.updateIsRead(c), t._patchConversationLastMessage(c), 
                                u;
                            }).catch(function(o) {
                                return t.probeNetwork().then(function(t) {
                                    var i = Yn(t, 2), a = i[0], s = i[1];
                                    n.setError(o, a, s).setText("".concat(e.groupID, "-").concat(r)).setEnd();
                                }), Cs.warn("MessageController.getGroupRoamMessages failed. ".concat(o)), Pd(o);
                            });
                        }
                    }, {
                        key: "_patchConversationLastMessage",
                        value: function(e) {
                            var t = this.tim.conversationController.getLocalConversation(e);
                            if (t) {
                                var n = t.lastMessage, r = n.messageForShow, o = n.payload;
                                if (ac(r) || ac(o)) {
                                    var i = this.messagesList.getLocalMessageList(e);
                                    if (0 === i.length) return;
                                    var a = i[i.length - 1];
                                    Cs.log("MessageController._patchConversationLastMessage conversationID:".concat(e, " payload:"), a.payload), 
                                    t.updateLastMessage(a);
                                }
                            }
                        }
                    }, {
                        key: "_roamMessageStore",
                        value: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], t = arguments.length > 1 ? arguments[1] : void 0, n = arguments.length > 2 ? arguments[2] : void 0, r = null, o = [], i = 0, a = e.length, s = null, c = t === Tn.CONV_GROUP, u = this.tim.bigDataHallwayController, l = function() {
                                i = c ? e.length - 1 : 0, a = c ? 0 : e.length;
                            }, p = function() {
                                c ? --i : ++i;
                            }, h = function() {
                                return c ? i >= a : i < a;
                            };
                            for (l(); h(); p()) if (c && 1 === e[i].sequence && this.getMessageHandler.setCompleted(n), 
                            1 !== e[i].isPlaceMessage) if ((r = new rf(e[i])).to = e[i].to, r.isSystemMessage = !!e[i].isSystemMessage, 
                            r.conversationType = t, e[i].event === sp.JSON.TYPE.GROUP.TIP ? s = {
                                type: Tn.MSG_GRP_TIP,
                                content: Fn(Fn({}, e[i].elements), {}, {
                                    groupProfile: e[i].groupProfile
                                })
                            } : (e[i].elements = u.parseElements(e[i].elements, e[i].from), s = e[i].elements), 
                            ac(s)) {
                                var f = new Xd(dg);
                                f.setText("from:".concat(r.from, " to:").concat(r.to, " sequence:").concat(r.sequence, " event:").concat(e[i].event)), 
                                f.setNetworkType(this.getNetworkType()).setEnd();
                            } else r.setElement(s), r.reInitialize(this.tim.context.identifier), o.push(r);
                            return this.messagesList.unshift(o), l = p = h = null, o;
                        }
                    }, {
                        key: "getLocalMessageList",
                        value: function(e) {
                            return this.messagesList.getLocalMessageList(e);
                        }
                    }, {
                        key: "getLocalMessage",
                        value: function(e, t) {
                            return this.messagesList.getLocalMessage(e, t);
                        }
                    }, {
                        key: "hasLocalMessage",
                        value: function(e, t) {
                            return this.messagesList.hasLocalMessage(e, t);
                        }
                    }, {
                        key: "deleteLocalMessage",
                        value: function(e) {
                            e instanceof rf && this.messagesList.remove(e);
                        }
                    }, {
                        key: "revokeMessage",
                        value: function(e) {
                            var t, n = this;
                            e.conversationType === Tn.CONV_C2C ? t = {
                                name: "c2cMessageWillBeRevoked",
                                action: "create",
                                param: {
                                    msgInfo: {
                                        fromAccount: e.from,
                                        toAccount: e.to,
                                        msgSeq: e.sequence,
                                        msgRandom: e.random,
                                        msgTimeStamp: e.time
                                    }
                                }
                            } : e.conversationType === Tn.CONV_GROUP && (t = {
                                name: "groupMessageWillBeRevoked",
                                action: "create",
                                param: {
                                    to: e.to,
                                    msgSeqList: [ {
                                        msgSeq: e.sequence
                                    } ]
                                }
                            });
                            var r = new Xd(pg);
                            return r.setMessageType(e.type).setText("".concat(this._generateTjgID(e), "-").concat(e.type, "-").concat(e.from, "-").concat(e.to)), 
                            this.request(t).then(function(t) {
                                var o = t.data.recallRetList;
                                if (!ac(o) && 0 !== o[0].retCode) {
                                    var i = new Vp({
                                        code: o[0].retCode,
                                        message: $p[o[0].retCode] || ih,
                                        data: {
                                            message: e
                                        }
                                    });
                                    return r.setCode(i.code).setMessage(i.message).setEnd(), Pd(i);
                                }
                                return Cs.info("MessageController.revokeMessage ok. ID=".concat(e.ID)), e.isRevoked = !0, 
                                r.setEnd(), n.emitInnerEvent(Gf, [ e ]), new kd({
                                    message: e
                                });
                            }).catch(function(t) {
                                n.probeNetwork().then(function(e) {
                                    var n = Yn(e, 2), o = n[0], i = n[1];
                                    r.setError(t, o, i).setEnd();
                                });
                                var o = new Vp({
                                    code: t && t.code ? t.code : Bp.MESSAGE_REVOKE_FAIL,
                                    message: t && t.message ? t.message : ih,
                                    data: {
                                        message: e
                                    }
                                });
                                return Cs.warn("MessageController.revokeMessage failed. ID=".concat(e.ID, " code=").concat(o.code, " message=").concat(o.message)), 
                                Pd(o);
                            });
                        }
                    }, {
                        key: "setMessageRead",
                        value: function(e) {
                            var t = this;
                            return new Promise(function(n, r) {
                                t.ready(function() {
                                    t.readReportHandler.setMessageRead(e).then(n).catch(r);
                                });
                            });
                        }
                    }, {
                        key: "getMessageList",
                        value: function(e) {
                            return this.getMessageHandler.getMessageList(e);
                        }
                    }, {
                        key: "createTextMessage",
                        value: function(e) {
                            e.currentUser = this.tim.context.identifier;
                            var t = new rf(e), n = "string" == typeof e.payload ? e.payload : e.payload.text, r = new nu({
                                text: n
                            });
                            return t.setElement(r), t;
                        }
                    }, {
                        key: "createCustomMessage",
                        value: function(e) {
                            e.currentUser = this.tim.context.identifier;
                            var t = new rf(e), n = new Zh({
                                data: e.payload.data,
                                description: e.payload.description,
                                extension: e.payload.extension
                            });
                            return t.setElement(n), t;
                        }
                    }, {
                        key: "createImageMessage",
                        value: function(e) {
                            e.currentUser = this.tim.context.identifier;
                            var t = new rf(e);
                            if (Ka) {
                                var n = e.payload.file;
                                if (Ts(n)) return void Cs.warn("小程序环境下调用 createImageMessage 接口时，payload.file 不支持传入 File 对象");
                                var r = n.tempFilePaths[0], o = {
                                    url: r,
                                    name: r.slice(r.lastIndexOf("/") + 1),
                                    size: n.tempFiles[0].size,
                                    type: r.slice(r.lastIndexOf(".") + 1).toLowerCase()
                                };
                                e.payload.file = o;
                            } else if (qa && Ts(e.payload.file)) {
                                var i = e.payload.file;
                                e.payload.file = {
                                    files: [ i ]
                                };
                            }
                            var a = new Ap({
                                imageFormat: sp.IMAGE_FORMAT.UNKNOWN,
                                uuid: this._generateUUID(),
                                file: e.payload.file
                            });
                            return t.setElement(a), this.messageOptionMap.set(t.messageID, e), t;
                        }
                    }, {
                        key: "createFileMessage",
                        value: function(e) {
                            if (!Ka) {
                                if (qa && Ts(e.payload.file)) {
                                    var t = e.payload.file;
                                    e.payload.file = {
                                        files: [ t ]
                                    };
                                }
                                e.currentUser = this.tim.context.identifier;
                                var n = new rf(e), r = new Qh({
                                    uuid: this._generateUUID(),
                                    file: e.payload.file
                                });
                                return n.setElement(r), this.messageOptionMap.set(n.messageID, e), n;
                            }
                            Cs.warn("小程序目前不支持选择文件， createFileMessage 接口不可用！");
                        }
                    }, {
                        key: "createAudioMessage",
                        value: function(e) {
                            if (Ka) {
                                var t = e.payload.file;
                                if (Ka) {
                                    var n = {
                                        url: t.tempFilePath,
                                        name: t.tempFilePath.slice(t.tempFilePath.lastIndexOf("/") + 1),
                                        size: t.fileSize,
                                        second: parseInt(t.duration) / 1e3,
                                        type: t.tempFilePath.slice(t.tempFilePath.lastIndexOf(".") + 1).toLowerCase()
                                    };
                                    e.payload.file = n;
                                }
                                e.currentUser = this.tim.context.identifier;
                                var r = new rf(e), o = new xp({
                                    second: Math.floor(t.duration / 1e3),
                                    size: t.fileSize,
                                    url: t.tempFilePath,
                                    uuid: this._generateUUID()
                                });
                                return r.setElement(o), this.messageOptionMap.set(r.messageID, e), r;
                            }
                            Cs.warn("createAudioMessage 目前只支持小程序环境下发语音消息");
                        }
                    }, {
                        key: "createVideoMessage",
                        value: function(e) {
                            e.currentUser = this.tim.context.identifier, e.payload.file.thumbUrl = "https://webim-1252463788.cos.ap-shanghai.myqcloud.com/assets/images/transparent.png", 
                            e.payload.file.thumbSize = 1668;
                            var t = {};
                            if (Ka) {
                                if (Ts(e.payload.file)) return void Cs.warn("小程序环境下调用 createVideoMessage 接口时，payload.file 不支持传入 File 对象");
                                var n = e.payload.file;
                                t.url = n.tempFilePath, t.name = n.tempFilePath.slice(n.tempFilePath.lastIndexOf("/") + 1), 
                                t.size = n.size, t.second = n.duration, t.type = n.tempFilePath.slice(n.tempFilePath.lastIndexOf(".") + 1).toLowerCase();
                            } else if (qa) {
                                if (Ts(e.payload.file)) {
                                    var r = e.payload.file;
                                    e.payload.file.files = [ r ];
                                }
                                var o = e.payload.file;
                                t.url = window.URL.createObjectURL(o.files[0]), t.name = o.files[0].name, t.size = o.files[0].size, 
                                t.second = o.files[0].duration || 0, t.type = o.files[0].type.split("/")[1];
                            }
                            e.payload.file.videoFile = t;
                            var i = new rf(e), a = new ef({
                                videoFormat: t.type,
                                videoSecond: Number(t.second.toFixed(0)),
                                videoSize: t.size,
                                remoteVideoUrl: "",
                                videoUrl: t.url,
                                videoUUID: this._generateUUID(),
                                thumbUUID: this._generateUUID(),
                                thumbWidth: e.payload.file.width || 200,
                                thumbHeight: e.payload.file.height || 200,
                                thumbUrl: e.payload.file.thumbUrl,
                                thumbSize: e.payload.file.thumbSize,
                                thumbFormat: e.payload.file.thumbUrl.slice(e.payload.file.thumbUrl.lastIndexOf(".") + 1).toLowerCase()
                            });
                            return i.setElement(a), this.messageOptionMap.set(i.messageID, e), i;
                        }
                    }, {
                        key: "createFaceMessage",
                        value: function(e) {
                            e.currentUser = this.tim.context.identifier;
                            var t = new rf(e), n = new bp(e.payload);
                            return t.setElement(n), t;
                        }
                    }, {
                        key: "_generateUUID",
                        value: function() {
                            var e = this.tim.context;
                            return "".concat(e.SDKAppID, "-").concat(e.identifier, "-").concat(function() {
                                for (var e = "", t = 32; t > 0; --t) e += Vs[Math.floor(Math.random() * Bs)];
                                return e;
                            }());
                        }
                    }, {
                        key: "_generateTjgID",
                        value: function(e) {
                            return this.tim.context.tinyID + "-" + e.random;
                        }
                    }, {
                        key: "getMessageOptionByID",
                        value: function(e) {
                            return this.messageOptionMap.get(e);
                        }
                    }, {
                        key: "isMessageSentByCurrentInstance",
                        value: function(e) {
                            return !(!this.messagesList.hasLocalMessage(e.conversationID, e.ID) && !this.singlyLinkedList.has(e.random));
                        }
                    }, {
                        key: "pushToMessageList",
                        value: function(e) {
                            this.messagesList.pushIn(e);
                        }
                    } ]), n;
                }(xd), dy = function() {
                    function e(t) {
                        Ln(this, e), this.userID = "", this.avatar = "", this.nick = "", this.role = "", 
                        this.joinTime = "", this.lastSendMsgTime = "", this.nameCard = "", this.muteUntil = 0, 
                        this.memberCustomField = [], this._initMember(t);
                    }
                    return Pn(e, [ {
                        key: "_initMember",
                        value: function(e) {
                            this.updateMember(e);
                        }
                    }, {
                        key: "updateMember",
                        value: function(e) {
                            var t = [ null, void 0, "", 0, NaN ];
                            e.memberCustomField && Ys(this.memberCustomField, e.memberCustomField), Fs(this, e, [ "memberCustomField" ], t);
                        }
                    }, {
                        key: "updateRole",
                        value: function(e) {
                            [ "Owner", "Admin", "Member" ].indexOf(e) < 0 || (this.role = e);
                        }
                    }, {
                        key: "updateMuteUntil",
                        value: function(e) {
                            Ds(e) || (this.muteUntil = Math.floor((Date.now() + 1e3 * e) / 1e3));
                        }
                    }, {
                        key: "updateNameCard",
                        value: function(e) {
                            Ds(e) || (this.nameCard = e);
                        }
                    }, {
                        key: "updateMemberCustomField",
                        value: function(e) {
                            e && Ys(this.memberCustomField, e);
                        }
                    } ]), e;
                }(), gy = function() {
                    function e(t) {
                        Ln(this, e), this.tim = t.tim, this.groupController = t.groupController, this._initListeners();
                    }
                    return Pn(e, [ {
                        key: "_initListeners",
                        value: function() {
                            this.tim.innerEmitter.on(Pf, this._onReceivedGroupTips, this);
                        }
                    }, {
                        key: "_onReceivedGroupTips",
                        value: function(e) {
                            var t = this, n = e.data, r = n.result;
                            n.isGroupTip && r.forEach(function(e) {
                                switch (e.payload.operationType) {
                                  case 1:
                                    t._onNewMemberComeIn(e);
                                    break;

                                  case 2:
                                    t._onMemberQuit(e);
                                    break;

                                  case 3:
                                    t._onMemberKickedOut(e);
                                    break;

                                  case 4:
                                    t._onMemberSetAdmin(e);
                                    break;

                                  case 5:
                                    t._onMemberCancelledAdmin(e);
                                    break;

                                  case 6:
                                    t._onGroupProfileModified(e);
                                    break;

                                  case 7:
                                    t._onMemberInfoModified(e);
                                    break;

                                  default:
                                    Cs.warn("GroupTipsHandler._onReceivedGroupTips Unhandled groupTips. operationType=", e.payload.operationType);
                                }
                            });
                        }
                    }, {
                        key: "_onNewMemberComeIn",
                        value: function(e) {
                            var t = e.payload, n = t.memberNum, r = t.groupProfile.groupID, o = this.groupController.getLocalGroupProfile(r);
                            o && Es(n) && (o.memberNum = n);
                        }
                    }, {
                        key: "_onMemberQuit",
                        value: function(e) {
                            var t = e.payload, n = t.memberNum, r = t.groupProfile.groupID, o = this.groupController.getLocalGroupProfile(r);
                            o && Es(n) && (o.memberNum = n), this.groupController.deleteLocalGroupMembers(r, e.payload.userIDList);
                        }
                    }, {
                        key: "_onMemberKickedOut",
                        value: function(e) {
                            var t = e.payload, n = t.memberNum, r = t.groupProfile.groupID, o = this.groupController.getLocalGroupProfile(r);
                            o && Es(n) && (o.memberNum = n), this.groupController.deleteLocalGroupMembers(r, e.payload.userIDList);
                        }
                    }, {
                        key: "_onMemberSetAdmin",
                        value: function(e) {
                            var t = this, n = e.payload.groupProfile.groupID;
                            e.payload.userIDList.forEach(function(e) {
                                var r = t.groupController.getLocalGroupMemberInfo(n, e);
                                r && r.updateRole(Tn.GRP_MBR_ROLE_ADMIN);
                            });
                        }
                    }, {
                        key: "_onMemberCancelledAdmin",
                        value: function(e) {
                            var t = this, n = e.payload.groupProfile.groupID;
                            e.payload.userIDList.forEach(function(e) {
                                var r = t.groupController.getLocalGroupMemberInfo(n, e);
                                r && r.updateRole(Tn.GRP_MBR_ROLE_MEMBER);
                            });
                        }
                    }, {
                        key: "_onGroupProfileModified",
                        value: function(e) {
                            var t = this, n = e.payload.newGroupProfile, r = e.payload.groupProfile.groupID, o = this.groupController.getLocalGroupProfile(r);
                            Object.keys(n).forEach(function(e) {
                                switch (e) {
                                  case "ownerID":
                                    t._ownerChaged(o, n);
                                    break;

                                  default:
                                    o[e] = n[e];
                                }
                            }), this.groupController.emitGroupListUpdate(!0, !0);
                        }
                    }, {
                        key: "_ownerChaged",
                        value: function(e, t) {
                            var n = e.groupID, r = this.groupController.getLocalGroupProfile(n), o = this.tim.context.identifier;
                            if (o === t.ownerID) {
                                r.updateGroup({
                                    selfInfo: {
                                        role: Tn.GRP_MBR_ROLE_OWNER
                                    }
                                });
                                var i = this.groupController.getLocalGroupMemberInfo(n, o), a = this.groupController.getLocalGroupProfile(n).ownerID, s = this.groupController.getLocalGroupMemberInfo(n, a);
                                i && i.updateRole(Tn.GRP_MBR_ROLE_OWNER), s && s.updateRole(Tn.GRP_MBR_ROLE_MEMBER);
                            }
                        }
                    }, {
                        key: "_onMemberInfoModified",
                        value: function(e) {
                            var t = this, n = e.payload.groupProfile.groupID;
                            e.payload.memberList.forEach(function(e) {
                                var r = t.groupController.getLocalGroupMemberInfo(n, e.userID);
                                r && e.muteTime && r.updateMuteUntil(e.muteTime);
                            });
                        }
                    } ]), e;
                }(), vy = function() {
                    function e(t) {
                        Ln(this, e), this.groupController = t.groupController, this.tim = t.tim, this.pendencyMap = new Map(), 
                        this._initLiceners();
                    }
                    return Pn(e, [ {
                        key: "_initLiceners",
                        value: function() {
                            this.tim.innerEmitter.on(Nf, this._onReceivedGroupSystemNotice, this), this.tim.innerEmitter.on(Df, this._clearGroupSystemNotice, this);
                        }
                    }, {
                        key: "_clearGroupSystemNotice",
                        value: function() {
                            var e = this;
                            this.getPendencyList().then(function(t) {
                                t.forEach(function(t) {
                                    e.pendencyMap.set("".concat(t.from, "_").concat(t.groupID, "_").concat(t.to), t);
                                });
                                var n = e.tim.messageController.getLocalMessageList(Tn.CONV_SYSTEM), r = [];
                                n.forEach(function(t) {
                                    var n = t.payload, o = n.operatorID, i = n.operationType, a = n.groupProfile;
                                    if (i === cp) {
                                        var s = "".concat(o, "_").concat(a.groupID, "_").concat(a.to), c = e.pendencyMap.get(s);
                                        c && Es(c.handled) && 0 !== c.handled && r.push(t);
                                    }
                                }), e.groupController.deleteGroupSystemNotice({
                                    messageList: r
                                });
                            });
                        }
                    }, {
                        key: "getPendencyList",
                        value: function(e) {
                            var t = this;
                            return this.groupController.request({
                                name: "group",
                                action: "getGroupPendency",
                                param: {
                                    startTime: e && e.startTime ? e.startTime : 0,
                                    limit: e && e.limit ? e.limit : 10,
                                    handleAccount: this.tim.context.identifier
                                }
                            }).then(function(e) {
                                var n = e.data, r = n.pendencyList;
                                return 0 !== n.nextStartTime ? t.getPendencyList({
                                    startTime: n.nextStartTime
                                }).then(function(e) {
                                    return [].concat(Jn(r), Jn(e));
                                }) : r;
                            });
                        }
                    }, {
                        key: "_onReceivedGroupSystemNotice",
                        value: function(e) {
                            var t = this, n = e.data, r = n.result;
                            "sync" !== n.type && r.forEach(function(e) {
                                switch (e.payload.operationType) {
                                  case 1:
                                    t._onApplyGroupRequest(e);
                                    break;

                                  case 2:
                                    t._onApplyGroupRequestAgreed(e);
                                    break;

                                  case 3:
                                    t._onApplyGroupRequestRefused(e);
                                    break;

                                  case 4:
                                    t._onMemberKicked(e);
                                    break;

                                  case 5:
                                    t._onGroupDismissed(e);
                                    break;

                                  case 6:
                                    break;

                                  case 7:
                                    t._onInviteGroup(e);
                                    break;

                                  case 8:
                                    t._onQuitGroup(e);
                                    break;

                                  case 9:
                                    t._onSetManager(e);
                                    break;

                                  case 10:
                                    t._onDeleteManager(e);
                                    break;

                                  case 11:
                                  case 12:
                                  case 15:
                                    break;

                                  case 255:
                                    t.groupController.emitOuterEvent(Cn.GROUP_SYSTEM_NOTICE_RECEIVED, {
                                        message: e,
                                        type: yp
                                    });
                                }
                            });
                        }
                    }, {
                        key: "_onApplyGroupRequest",
                        value: function(e) {
                            this.groupController.emitOuterEvent(Cn.GROUP_SYSTEM_NOTICE_RECEIVED, {
                                message: e,
                                type: cp
                            });
                        }
                    }, {
                        key: "_onApplyGroupRequestAgreed",
                        value: function(e) {
                            var t = this, n = e.payload.groupProfile.groupID;
                            this.groupController.hasLocalGroup(n) || this.groupController.getGroupProfile({
                                groupID: n
                            }).then(function(e) {
                                var n = e.data.group;
                                n && (t.groupController.updateGroupMap([ n ]), t.groupController.emitGroupListUpdate());
                            }), this.groupController.emitOuterEvent(Cn.GROUP_SYSTEM_NOTICE_RECEIVED, {
                                message: e,
                                type: up
                            });
                        }
                    }, {
                        key: "_onApplyGroupRequestRefused",
                        value: function(e) {
                            this.groupController.emitOuterEvent(Cn.GROUP_SYSTEM_NOTICE_RECEIVED, {
                                message: e,
                                type: lp
                            });
                        }
                    }, {
                        key: "_onMemberKicked",
                        value: function(e) {
                            var t = e.payload.groupProfile.groupID;
                            this.groupController.hasLocalGroup(t) && this.groupController.deleteLocalGroupAndConversation(t), 
                            this.groupController.emitOuterEvent(Cn.GROUP_SYSTEM_NOTICE_RECEIVED, {
                                message: e,
                                type: pp
                            });
                        }
                    }, {
                        key: "_onGroupDismissed",
                        value: function(e) {
                            var t = e.payload.groupProfile.groupID, n = this.groupController.hasLocalGroup(t), r = this.groupController.AVChatRoomHandler;
                            n && this.groupController.deleteLocalGroupAndConversation(t), r.checkJoinedAVChatRoomByID(t) && r.reset(t), 
                            this.groupController.emitOuterEvent(Cn.GROUP_SYSTEM_NOTICE_RECEIVED, {
                                message: e,
                                type: hp
                            });
                        }
                    }, {
                        key: "_onInviteGroup",
                        value: function(e) {
                            var t = this, n = e.payload.groupProfile.groupID;
                            this.groupController.hasLocalGroup(n) || this.groupController.getGroupProfile({
                                groupID: n
                            }).then(function(e) {
                                var n = e.data.group;
                                n && (t.groupController.updateGroupMap([ n ]), t.groupController.emitGroupListUpdate());
                            }), this.groupController.emitOuterEvent(Cn.GROUP_SYSTEM_NOTICE_RECEIVED, {
                                message: e,
                                type: fp
                            });
                        }
                    }, {
                        key: "_onQuitGroup",
                        value: function(e) {
                            var t = e.payload.groupProfile.groupID;
                            this.groupController.hasLocalGroup(t) && this.groupController.deleteLocalGroupAndConversation(t), 
                            this.groupController.emitOuterEvent(Cn.GROUP_SYSTEM_NOTICE_RECEIVED, {
                                message: e,
                                type: dp
                            });
                        }
                    }, {
                        key: "_onSetManager",
                        value: function(e) {
                            var t = e.payload.groupProfile, n = t.to, r = t.groupID, o = this.groupController.getLocalGroupMemberInfo(r, n);
                            o && o.updateRole(Tn.GRP_MBR_ROLE_ADMIN), this.groupController.emitOuterEvent(Cn.GROUP_SYSTEM_NOTICE_RECEIVED, {
                                message: e,
                                type: gp
                            });
                        }
                    }, {
                        key: "_onDeleteManager",
                        value: function(e) {
                            var t = e.payload.groupProfile, n = t.to, r = t.groupID, o = this.groupController.getLocalGroupMemberInfo(r, n);
                            o && o.updateRole(Tn.GRP_MBR_ROLE_MEMBER), this.groupController.emitOuterEvent(Cn.GROUP_SYSTEM_NOTICE_RECEIVED, {
                                message: e,
                                type: mp
                            });
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            this.pendencyMap.clear();
                        }
                    } ]), e;
                }(), yy = Je("splice"), _y = pt("splice", {
                    ACCESSORS: !0,
                    0: 0,
                    1: 2
                }), Sy = Math.max, Iy = Math.min;
                Oe({
                    target: "Array",
                    proto: !0,
                    forced: !yy || !_y
                }, {
                    splice: function(e, t) {
                        var n, r, o, i, a, s, c = Re(this), u = le(c.length), l = fe(e, u), p = arguments.length;
                        if (0 === p ? n = r = 0 : 1 === p ? (n = 0, r = u - l) : (n = p - 2, r = Iy(Sy(ce(t), 0), u - l)), 
                        u + n - r > 9007199254740991) throw TypeError("Maximum allowed length exceeded");
                        for (o = Ve(c, r), i = 0; i < r; i++) (a = l + i) in c && Pe(o, i, c[a]);
                        if (o.length = r, n < r) {
                            for (i = l; i < u - r; i++) s = i + n, (a = i + r) in c ? c[s] = c[a] : delete c[s];
                            for (i = u; i > u - r + n; i--) delete c[i - 1];
                        } else if (n > r) for (i = u - r; i > l; i--) s = i + n - 1, (a = i + r - 1) in c ? c[s] = c[a] : delete c[s];
                        for (i = 0; i < n; i++) c[i + l] = arguments[i + 2];
                        return c.length = u - r + n, o;
                    }
                });
                var My = {
                    3: !0,
                    4: !0,
                    5: !0,
                    6: !0
                }, Cy = function() {
                    function e(t) {
                        var n = t.tim, r = t.groupController;
                        Ln(this, e), this.tim = n, this.groupController = r, this.sequencesLinkedList = new py(100), 
                        this.receivedMessageCount = 0, this._pollingRequestInfoMap = new Map(), this._pollingInstanceMap = new Map(), 
                        this._joinedGroupMap = new Map(), this._reportMessageStackedCount = 0, this._onlineMemberCountMap = new Map(), 
                        this.DEFAULT_EXPIRE_TIME = 60;
                    }
                    return Pn(e, [ {
                        key: "hasJoinedAVChatRoom",
                        value: function() {
                            return this._joinedGroupMap.size > 0;
                        }
                    }, {
                        key: "checkJoinedAVChatRoomByID",
                        value: function(e) {
                            return this._joinedGroupMap.has(e);
                        }
                    }, {
                        key: "getJoinedAVChatRoom",
                        value: function() {
                            return this._joinedGroupMap.size > 0 ? Jn(this._joinedGroupMap.keys()) : null;
                        }
                    }, {
                        key: "start",
                        value: function(e) {
                            var t = this._pollingRequestInfoMap.get(e), n = {
                                key: t.key,
                                startSeq: t.startSeq
                            };
                            if (this._pollingInstanceMap.has(e)) {
                                var r = this._pollingInstanceMap.get(e);
                                r.isRunning() || r.start();
                            } else {
                                var o = this.groupController.createTransportCapsule({
                                    name: "AVChatRoom",
                                    action: "startLongPoll",
                                    param: n
                                }), i = this.tim.connectionController.createRunLoop({
                                    pack: o,
                                    before: this._updateRequestData.bind(this, e),
                                    success: this._handleSuccess.bind(this, e),
                                    fail: this._handleFailure.bind(this),
                                    isAVChatRoomLoop: !0
                                });
                                i.start(), this._pollingInstanceMap.set(e, i), Cs.log("AVChatRoomHandler.start message channel started. groupID=".concat(e));
                            }
                        }
                    }, {
                        key: "stop",
                        value: function(e) {
                            var t = this._pollingInstanceMap.get(e);
                            t && t.isRunning() && (t.abort(), t.stop(), Cs.log("AVChatRoomHandler.stop message channel stopped. groupID=".concat(e)));
                        }
                    }, {
                        key: "startRunLoop",
                        value: function(e) {
                            var t = this;
                            return this._precheck().then(function() {
                                var n = e.longPollingKey, r = e.group, o = r.groupID;
                                return t._pollingRequestInfoMap.set(o, {
                                    key: n,
                                    startSeq: 0
                                }), t._joinedGroupMap.set(o, r), t._addAVChatRoomID(o), t.groupController.updateGroupMap([ r ]), 
                                t.groupController.emitGroupListUpdate(!0, !1), t.start(o), t.groupController.isLoggedIn() ? Rd({
                                    status: Xc.SUCCESS,
                                    group: r
                                }) : Rd({
                                    status: Xc.SUCCESS
                                });
                            });
                        }
                    }, {
                        key: "joinWithoutAuth",
                        value: function(e) {
                            var t = this;
                            return this.groupController.request({
                                name: "group",
                                action: "applyJoinAVChatRoom",
                                param: e
                            }).then(function(n) {
                                var r = n.data.longPollingKey;
                                if (Ds(r)) return Pd(new Vp({
                                    code: Bp.CANNOT_JOIN_NON_AVCHATROOM_WITHOUT_LOGIN,
                                    message: xh
                                }));
                                Cs.log("AVChatRoomHandler.joinWithoutAuth ok. groupID:".concat(e.groupID)), t.groupController.emitInnerEvent(hd), 
                                t.groupController.emitInnerEvent(pd, e.groupID);
                                var o = new qv({
                                    groupID: e.groupID
                                });
                                return t.startRunLoop({
                                    group: o,
                                    longPollingKey: r
                                }), new kd({
                                    status: Xc.SUCCESS
                                });
                            }).catch(function(t) {
                                return Cs.error("AVChatRoomHandler.joinWithoutAuth error:".concat(Us(t), ". groupID:").concat(e.groupID)), 
                                Pd(t);
                            });
                        }
                    }, {
                        key: "_precheck",
                        value: function() {
                            if (this.tim.context.unlimitedAVChatRoom) return Promise.resolve();
                            if (!this.hasJoinedAVChatRoom()) return Promise.resolve();
                            var e = Yn(this._joinedGroupMap.entries().next().value, 2), t = e[0], n = e[1];
                            if (this.groupController.isLoggedIn()) {
                                if (n.selfInfo.role !== Tn.GRP_MBR_ROLE_OWNER && n.ownerID !== this.tim.loginInfo.identifier) return this.groupController.quitGroup(t);
                                this.groupController.deleteLocalGroupAndConversation(t);
                            } else this.groupController.deleteLocalGroupAndConversation(t);
                            return this.reset(t), Promise.resolve();
                        }
                    }, {
                        key: "_updateRequestData",
                        value: function(e, t) {
                            var n = this._pollingRequestInfoMap.get(e), r = n.key, o = n.startSeq;
                            t.StartSeq = o, t.Key = r, this.tim.sumStatController.addTotalCount(Ud);
                        }
                    }, {
                        key: "_handleSuccess",
                        value: function(e, t) {
                            this.tim.sumStatController.addSuccessCount(Ud), this.tim.sumStatController.addCost(Ud, t.data.timecost);
                            var n = t.data, r = n.errorCode, o = n.errorInfo, i = n.key, a = n.nextSeq, s = n.rspMsgList;
                            if (r !== Qc.SUCCESS) {
                                var c = this._pollingRequestInfoMap.get(e), u = new Xd(Hg), l = c ? "".concat(c.key, "-").concat(c.startSeq) : "requestInfo is undefined";
                                u.setMessage("".concat(e, "-").concat(l, "-").concat(o || JSON.stringify(t.data))).setCode(r).setNetworkType(this.groupController.getNetworkType()).setEnd(!0);
                            } else As(i) && Es(a) && this._pollingRequestInfoMap.set(e, {
                                key: i,
                                startSeq: a
                            }), ws(s) && s.length > 0 && (s.forEach(function(e) {
                                e.to = e.groupID;
                            }), this._dispatchNotice(s));
                            this.groupController.emitInnerEvent(ed);
                        }
                    }, {
                        key: "_handleFailure",
                        value: function(e) {
                            if (e.error) if ("ECONNABORTED" === e.error.code || e.error.code === Bp.NETWORK_TIMEOUT) if (e.error.config) {
                                var t = e.error.config.url, n = e.error.config.data;
                                Cs.log("AVChatRoomHandler._handleFailure request timed out. url=".concat(t, " data=").concat(n));
                            } else Cs.log("AVChatRoomHandler._handleFailure request timed out"); else Cs.log("AVChatRoomHandler._handleFailure request failed due to network error");
                            this.groupController.emitInnerEvent(Zf);
                        }
                    }, {
                        key: "_dispatchNotice",
                        value: function(e) {
                            if (ws(e) && 0 !== e.length) {
                                var t = Date.now(), n = null, r = [], o = [], i = e.length;
                                i > 1 && e.sort(function(e, t) {
                                    return e.sequence - t.sequence;
                                });
                                for (var a = 0; a < i; a++) if (My[e[a].event]) {
                                    if (this.receivedMessageCount += 1, n = this.packMessage(e[a], e[a].event), this.tim.context.unlimitedAVChatRoom || !this.sequencesLinkedList.has(n.sequence)) {
                                        var s = n.conversationID;
                                        if (this.receivedMessageCount % 40 == 0 && this.tim.messageLossController.detectMessageLoss(s, this.sequencesLinkedList.data()), 
                                        null !== this.sequencesLinkedList.tail()) {
                                            var c = this.sequencesLinkedList.tail().value, u = n.sequence - c;
                                            u > 1 && u <= 20 ? this.tim.messageLossController.onMessageMaybeLost(s, c + 1, u - 1) : u < -1 && u >= -20 && this.tim.messageLossController.onMessageMaybeLost(s, n.sequence + 1, Math.abs(u) - 1);
                                        }
                                        this.sequencesLinkedList.pushIn(n.sequence), this._isMessageSentByCurrentInstance(n) || (n.conversationType === Tn.CONV_SYSTEM && o.push(n), 
                                        r.push(n));
                                    }
                                } else Cs.warn("AVChatRoomHandler._dispatchMessage 未处理的 event 类型: ".concat(e[a].event));
                                if (o.length > 0 && this.groupController.emitInnerEvent(Nf, {
                                    result: o,
                                    eventDataList: [],
                                    type: "poll"
                                }), 0 !== r.length) {
                                    var l = this.packConversationOption(r);
                                    l.length > 0 && this.groupController.emitInnerEvent(Pf, {
                                        eventDataList: l,
                                        type: "poll"
                                    }), Cs.debug("AVChatRoomHandler._dispatchNotice nums=".concat(r.length));
                                    var p = this.tim.sumStatController;
                                    p.addTotalCount(zd), p.addSuccessCount(zd), p.addCost(zd, Date.now() - t), this._checkMessageStacked(r), 
                                    this.groupController.emitOuterEvent(Cn.MESSAGE_RECEIVED, r);
                                }
                            }
                        }
                    }, {
                        key: "_checkMessageStacked",
                        value: function(e) {
                            var t = e.length;
                            t >= 100 && (Cs.warn("AVChatRoomHandler.checkMessageStacked 直播群消息堆积数:".concat(e.length, '！可能会导致微信小程序渲染时遇到 "Dom limit exceeded" 的错误，建议接入侧此时只渲染最近的10条消息')), 
                            this._reportMessageStackedCount < 5 && (new Xd(Yg).setNetworkType(this.groupController.getNetworkType()).setText("nums=".concat(t, " groupID=").concat(Jn(this._joinedGroupMap.keys()))).setEnd(), 
                            this._reportMessageStackedCount += 1));
                        }
                    }, {
                        key: "_isMessageSentByCurrentInstance",
                        value: function(e) {
                            return !!this.tim.messageController.isMessageSentByCurrentInstance(e);
                        }
                    }, {
                        key: "packMessage",
                        value: function(e, t) {
                            e.currentUser = this.tim.context.identifier, e.conversationType = 5 === t ? Tn.CONV_SYSTEM : Tn.CONV_GROUP, 
                            e.isSystemMessage = !!e.isSystemMessage;
                            var n = new rf(e), r = this.packElements(e, t);
                            return n.setElement(r), n;
                        }
                    }, {
                        key: "packElements",
                        value: function(e, t) {
                            return 4 === t || 6 === t ? (this._updateMemberCountByGroupTips(e), {
                                type: Tn.MSG_GRP_TIP,
                                content: Fn(Fn({}, e.elements), {}, {
                                    groupProfile: e.groupProfile
                                })
                            }) : 5 === t ? {
                                type: Tn.MSG_GRP_SYS_NOTICE,
                                content: Fn(Fn({}, e.elements), {}, {
                                    groupProfile: e.groupProfile
                                })
                            } : this.tim.bigDataHallwayController.parseElements(e.elements, e.from);
                        }
                    }, {
                        key: "packConversationOption",
                        value: function(e) {
                            for (var t = new Map(), n = 0; n < e.length; n++) {
                                var r = e[n], o = r.conversationID;
                                if (t.has(o)) {
                                    var i = t.get(o);
                                    i.lastMessage = r, "in" === r.flow && i.unreadCount++;
                                } else t.set(o, {
                                    conversationID: r.conversationID,
                                    unreadCount: "out" === r.flow ? 0 : 1,
                                    type: r.conversationType,
                                    subType: r.conversationSubType,
                                    lastMessage: r
                                });
                            }
                            return Jn(t.values());
                        }
                    }, {
                        key: "_addAVChatRoomID",
                        value: function(e) {
                            var t = this.tim.loginInfo.avchatroomIDList || [];
                            t.includes(e) || (this.tim.context.unlimitedAVChatRoom ? t.push(e) : t.splice(0, 1, e), 
                            this.tim.loginInfo.avchatroomIDList = t);
                        }
                    }, {
                        key: "_deleteAVChatRoomID",
                        value: function(e) {
                            var t = this.tim.loginInfo.avchatroomIDList || [], n = t.indexOf(e);
                            -1 !== n && (t.splice(n, 1), this.tim.loginInfo.avchatroomIDList = t);
                        }
                    }, {
                        key: "joinAVChatRoomSilently",
                        value: function() {
                            var e = this, t = this.tim.loginInfo.avchatroomIDList || [];
                            if (0 !== t.length) {
                                var n = new Xd(Cg);
                                t.forEach(function(t) {
                                    e.groupController.joinGroup({
                                        groupID: t
                                    }).then(function(r) {
                                        Cs.warn("AVChatRoomHandler.joinAVChatRoomSilently silently join group ok:".concat(t)), 
                                        n.setCode(r.code).setText("groupID=".concat(t)).setNetworkType(e.groupController.getNetworkType()).setEnd(!0);
                                    }).catch(function(r) {
                                        Cs.warn("AVChatRoomHandler.joinAVChatRoomSilently silently join group failed:".concat(Us(r))), 
                                        n.setMessage("".concat(t, "-").concat(JSON.stringify(r))).setCode(r.code).setNetworkType(e.groupController.getNetworkType()).setEnd(!0);
                                    });
                                });
                            }
                        }
                    }, {
                        key: "getGroupOnlineMemberCount",
                        value: function(e) {
                            var t = this._onlineMemberCountMap.get(e) || {}, n = Date.now();
                            return ac(t) || n - t.lastSyncTime > 1e3 * t.expireTime && n - t.latestUpdateTime > 1e4 && n - t.lastReqTime > 3e3 ? (t.lastReqTime = n, 
                            this._onlineMemberCountMap.set(e, t), this._getGroupOnlineMemberCount(e).then(function(e) {
                                return new kd({
                                    memberCount: e.memberCount
                                });
                            }).catch(function(e) {
                                return Pd(e);
                            })) : Rd({
                                memberCount: t.memberCount
                            });
                        }
                    }, {
                        key: "_getGroupOnlineMemberCount",
                        value: function(e) {
                            var t = this;
                            return this.groupController.request({
                                name: "group",
                                action: "getOnlineMemberNum",
                                param: {
                                    groupID: e
                                }
                            }).then(function(n) {
                                var r = t._onlineMemberCountMap.get(e) || {}, o = n.data, i = o.onlineMemberNum, a = void 0 === i ? 0 : i, s = o.expireTime, c = void 0 === s ? t.DEFAULT_EXPIRE_TIME : s;
                                Cs.log("AVChatRoomHandler._getGroupOnlineMemberCount ok. groupID=".concat(e, " memberCount=").concat(a, " expireTime=").concat(c));
                                var u = Date.now();
                                return ac(r) && (r.lastReqTime = u), t._onlineMemberCountMap.set(e, Object.assign(r, {
                                    lastSyncTime: u,
                                    latestUpdateTime: u,
                                    memberCount: a,
                                    expireTime: c
                                })), {
                                    memberCount: a
                                };
                            }).catch(function(n) {
                                return Cs.warn("AVChatRoomHandler._getGroupOnlineMemberCount failed. error:".concat(Us(n))), 
                                new Xd(Vg).setCode(n.code).setMessage("".concat(e, "-").concat(JSON.stringify(n))).setNetworkType(t.groupController.getNetworkType()).setEnd(), 
                                Promise.reject(n);
                            });
                        }
                    }, {
                        key: "_updateMemberCountByGroupTips",
                        value: function(e) {
                            var t = e.groupProfile.groupID, n = e.elements.onlineMemberInfo, r = void 0 === n ? void 0 : n;
                            if (void 0 !== r) {
                                var o = r.onlineMemberNum, i = void 0 === o ? 0 : o, a = r.expireTime, s = void 0 === a ? this.DEFAULT_EXPIRE_TIME : a, c = this._onlineMemberCountMap.get(t) || {}, u = Date.now();
                                ac(c) ? Object.assign(c, {
                                    lastReqTime: 0,
                                    lastSyncTime: 0,
                                    latestUpdateTime: u,
                                    memberCount: i,
                                    expireTime: s
                                }) : (c.latestUpdateTime = u, c.memberCount = i), Cs.debug("AVChatRoomHandler._updateMemberCountByGroupTips info:", c), 
                                this._onlineMemberCountMap.set(t, c);
                            }
                        }
                    }, {
                        key: "reset",
                        value: function(e) {
                            if (0 !== this._pollingInstanceMap.size) {
                                if (e) Cs.log("AVChatRoomHandler.reset groupID=".concat(e)), this.stop(e), this._pollingInstanceMap.delete(e), 
                                this._joinedGroupMap.delete(e), this._pollingRequestInfoMap.delete(e), this._onlineMemberCountMap.delete(e); else {
                                    Cs.log("AVChatRoomHandler.reset all");
                                    var t, n = nr(this._pollingInstanceMap.keys());
                                    try {
                                        for (n.s(); !(t = n.n()).done; ) {
                                            var r = t.value;
                                            this.stop(r);
                                        }
                                    } catch (i) {
                                        n.e(i);
                                    } finally {
                                        n.f();
                                    }
                                    this._pollingInstanceMap.clear(), this._joinedGroupMap.clear(), this._pollingRequestInfoMap.clear(), 
                                    this._onlineMemberCountMap.clear();
                                }
                                this.sequencesLinkedList.reset(), this.receivedMessageCount = 0, this._reportMessageStackedCount = 0, 
                                this._deleteAVChatRoomID(e);
                            }
                        }
                    } ]), e;
                }(), Ty = "GroupController", Ey = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n(e) {
                        var r;
                        return Ln(this, n), (r = t.call(this, e)).groupMap = new Map(), r.groupMemberListMap = new Map(), 
                        r.groupNoticeHandler = new vy({
                            tim: e,
                            groupController: Kn(r)
                        }), r.groupTipsHandler = new gy({
                            tim: e,
                            groupController: Kn(r)
                        }), r.AVChatRoomHandler = new Cy({
                            tim: e,
                            groupController: Kn(r)
                        }), r._initListeners(), r;
                    }
                    return Pn(n, [ {
                        key: "createGroup",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".createGroup");
                            if (![ "Public", "Private", "ChatRoom", "AVChatRoom" ].includes(e.type)) {
                                var r = new Vp({
                                    code: Bp.ILLEGAL_GROUP_TYPE,
                                    message: Ih
                                });
                                return Pd(r);
                            }
                            Zs(e.type) && !Ds(e.memberList) && e.memberList.length > 0 && (Cs.warn("".concat(n, "创建AVChatRoom时不能添加群成员，自动忽略该字段")), 
                            e.memberList = void 0), Xs(e.type) || Ds(e.joinOption) || (Cs.warn("".concat(n, " 创建Work/Meeting/AVChatRoom群时不能设置字段：joinOption，自动忽略该字段")), 
                            e.joinOption = void 0);
                            var o = new Xd(Ig);
                            return Cs.log("".concat(n)), this.request({
                                name: "group",
                                action: "create",
                                param: e
                            }).then(function(r) {
                                if (o.setNetworkType(t.getNetworkType()).setText("groupType=".concat(e.type, " groupID=").concat(r.data.groupID)).setEnd(), 
                                Cs.log("".concat(n, " ok. groupID:"), r.data.groupID), e.type === Tn.GRP_AVCHATROOM) return t.getGroupProfile({
                                    groupID: r.data.groupID
                                });
                                t.updateGroupMap([ Fn(Fn({}, e), {}, {
                                    groupID: r.data.groupID
                                }) ]);
                                var i = t.tim.createCustomMessage({
                                    to: r.data.groupID,
                                    conversationType: Tn.CONV_GROUP,
                                    payload: {
                                        data: "group_create",
                                        extension: "".concat(t.tim.context.identifier, "创建群组")
                                    }
                                });
                                return t.tim.sendMessage(i), t.emitGroupListUpdate(), t.getGroupProfile({
                                    groupID: r.data.groupID
                                });
                            }).then(function(e) {
                                var t = e.data.group;
                                return t.selfInfo.messageRemindType = Tn.MSG_REMIND_ACPT_AND_NOTE, t.selfInfo.role = Tn.GRP_MBR_ROLE_OWNER, 
                                e;
                            }).catch(function(r) {
                                return o.setText("groupType=".concat(e.type)), t.probeNetwork().then(function(e) {
                                    var t = Yn(e, 2), n = t[0], i = t[1];
                                    o.setError(r, n, i).setEnd();
                                }), Cs.error("".concat(n, " error:"), r), Pd(r);
                            });
                        }
                    }, {
                        key: "joinGroup",
                        value: function(e) {
                            var t = this, n = e.groupID, r = e.type, o = "".concat(Ty, ".joinGroup");
                            if (r === Tn.GRP_WORK) {
                                var i = new Vp({
                                    code: Bp.CANNOT_JOIN_WORK,
                                    message: Mh
                                });
                                return Pd(i);
                            }
                            if (this.hasLocalGroup(n)) {
                                if (!this.isLoggedIn()) return Rd({
                                    status: Tn.JOIN_STATUS_ALREADY_IN_GROUP
                                });
                                var a = new Xd(Mg);
                                return this.getGroupProfile({
                                    groupID: n
                                }).then(function(e) {
                                    return a.setNetworkType(t.getNetworkType()).setText("groupID=".concat(n, " joinedStatus=").concat(Tn.JOIN_STATUS_ALREADY_IN_GROUP)).setEnd(), 
                                    Rd({
                                        status: Tn.JOIN_STATUS_ALREADY_IN_GROUP
                                    });
                                }).catch(function(r) {
                                    return a.setNetworkType(t.getNetworkType()).setText("groupID=".concat(n, " unjoined")).setEnd(), 
                                    Cs.warn("".concat(o, " ").concat(n, " was unjoined, now join!")), t.groupMap.delete(n), 
                                    t.applyJoinGroup(e);
                                });
                            }
                            return Cs.log("".concat(o, " groupID:"), n), this.isLoggedIn() ? this.applyJoinGroup(e) : this.AVChatRoomHandler.joinWithoutAuth(e);
                        }
                    }, {
                        key: "quitGroup",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".quitGroup");
                            Cs.log("".concat(n, " groupID:"), e);
                            var r = this.AVChatRoomHandler.checkJoinedAVChatRoomByID(e);
                            if (r && !this.isLoggedIn()) return Cs.log("".concat(n, " anonymously ok. groupID:"), e), 
                            this.deleteLocalGroupAndConversation(e), this.AVChatRoomHandler.reset(e), Rd({
                                groupID: e
                            });
                            var o = new Xd(Tg);
                            return this.request({
                                name: "group",
                                action: "quitGroup",
                                param: {
                                    groupID: e
                                }
                            }).then(function() {
                                return o.setNetworkType(t.getNetworkType()).setText("groupID=".concat(e)).setEnd(), 
                                Cs.log("".concat(n, " ok. groupID:"), e), r && t.AVChatRoomHandler.reset(e), t.deleteLocalGroupAndConversation(e), 
                                new kd({
                                    groupID: e
                                });
                            }).catch(function(r) {
                                return o.setText("groupID=".concat(e)), t.probeNetwork().then(function(e) {
                                    var t = Yn(e, 2), n = t[0], i = t[1];
                                    o.setError(r, n, i).setEnd();
                                }), Cs.error("".concat(n, " error. error:").concat(Us(r), " groupID:").concat(e)), 
                                Pd(r);
                            });
                        }
                    }, {
                        key: "changeGroupOwner",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".changeGroupOwner");
                            if (this.hasLocalGroup(e.groupID) && this.getLocalGroupProfile(e.groupID).type === Tn.GRP_AVCHATROOM) return Pd(new Vp({
                                code: Bp.CANNOT_CHANGE_OWNER_IN_AVCHATROOM,
                                message: Ch
                            }));
                            if (e.newOwnerID === this.tim.loginInfo.identifier) return Pd(new Vp({
                                code: Bp.CANNOT_CHANGE_OWNER_TO_SELF,
                                message: Th
                            }));
                            var r = new Xd(Ag);
                            return Cs.log("".concat(n, " groupID:"), e.groupID), this.request({
                                name: "group",
                                action: "changeGroupOwner",
                                param: e
                            }).then(function() {
                                r.setNetworkType(t.getNetworkType()).setText("groupID=".concat(e.groupID)).setEnd(), 
                                Cs.log("".concat(n, " ok. groupID:"), e.groupID);
                                var o = e.groupID, i = e.newOwnerID;
                                t.groupMap.get(o).ownerID = i;
                                var a = t.groupMemberListMap.get(o);
                                if (a instanceof Map) {
                                    var s = a.get(t.tim.loginInfo.identifier);
                                    Ds(s) || (s.updateRole("Member"), t.groupMap.get(o).selfInfo.role = "Member");
                                    var c = a.get(i);
                                    Ds(c) || c.updateRole("Owner");
                                }
                                return t.emitGroupListUpdate(!0, !1), new kd({
                                    group: t.groupMap.get(o)
                                });
                            }).catch(function(o) {
                                return r.setText("groupID=".concat(e.groupID)), t.probeNetwork().then(function(e) {
                                    var t = Yn(e, 2), n = t[0], i = t[1];
                                    r.setError(o, n, i).setEnd();
                                }), Cs.error("".concat(n, " error:").concat(Us(o), " groupID:").concat(e.groupID)), 
                                Pd(o);
                            });
                        }
                    }, {
                        key: "dismissGroup",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".dismissGroup");
                            if (this.hasLocalGroup(e) && this.getLocalGroupProfile(e).type === Tn.GRP_WORK) return Pd(new Vp({
                                code: Bp.CANNOT_DISMISS_WORK,
                                message: Eh
                            }));
                            var r = new Xd(wg);
                            return Cs.log("".concat(n, " groupID:").concat(e)), this.request({
                                name: "group",
                                action: "destroyGroup",
                                param: {
                                    groupID: e
                                }
                            }).then(function() {
                                return r.setNetworkType(t.getNetworkType()).setText("groupID=".concat(e)).setEnd(), 
                                Cs.log("".concat(n, " ok. groupID:").concat(e)), t.deleteLocalGroupAndConversation(e), 
                                t.checkJoinedAVChatRoomByID(e) && t.AVChatRoomHandler.reset(e), new kd({
                                    groupID: e
                                });
                            }).catch(function(o) {
                                return r.setText("groupID=".concat(e)), t.probeNetwork().then(function(e) {
                                    var t = Yn(e, 2), n = t[0], i = t[1];
                                    r.setError(o, n, i).setEnd();
                                }), Cs.error("".concat(n, " error:").concat(Us(o), " groupID:").concat(e)), Pd(o);
                            });
                        }
                    }, {
                        key: "updateGroupProfile",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".updateGroupProfile");
                            !this.hasLocalGroup(e.groupID) || Xs(this.getLocalGroupProfile(e.groupID).type) || Ds(e.joinOption) || (Cs.warn("".concat(n, " Work/Meeting/AVChatRoom群不能设置字段：joinOption，自动忽略该字段")), 
                            e.joinOption = void 0), Ds(e.muteAllMembers) || (e.muteAllMembers ? e.muteAllMembers = "On" : e.muteAllMembers = "Off");
                            var r = new Xd(Dg);
                            return r.setText(JSON.stringify(e)), Cs.log("".concat(n, " groupID:"), e.groupID), 
                            this.request({
                                name: "group",
                                action: "updateGroupProfile",
                                param: e
                            }).then(function() {
                                return r.setNetworkType(t.getNetworkType()).setEnd(), Cs.log("".concat(n, " ok. groupID:"), e.groupID), 
                                t.hasLocalGroup(e.groupID) && (t.groupMap.get(e.groupID).updateGroup(e), t._setStorageGroupList()), 
                                new kd({
                                    group: t.groupMap.get(e.groupID)
                                });
                            }).catch(function(o) {
                                return t.probeNetwork().then(function(e) {
                                    var t = Yn(e, 2), n = t[0], i = t[1];
                                    r.setError(o, n, i).setEnd();
                                }), Cs.log("".concat(n, " failed. error:").concat(Us(o), " groupID:").concat(e.groupID)), 
                                Pd(o);
                            });
                        }
                    }, {
                        key: "setGroupMemberRole",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".setGroupMemberRole"), r = e.groupID, o = e.userID, i = e.role, a = this.groupMap.get(r);
                            if (a.selfInfo.role !== Tn.GRP_MBR_ROLE_OWNER) return Pd(new Vp({
                                code: Bp.NOT_OWNER,
                                message: Dh
                            }));
                            if ([ Tn.GRP_WORK, Tn.GRP_AVCHATROOM ].includes(a.type)) return Pd(new Vp({
                                code: Bp.CANNOT_SET_MEMBER_ROLE_IN_WORK_AND_AVCHATROOM,
                                message: kh
                            }));
                            if ([ Tn.GRP_MBR_ROLE_ADMIN, Tn.GRP_MBR_ROLE_MEMBER ].indexOf(i) < 0) return Pd(new Vp({
                                code: Bp.INVALID_MEMBER_ROLE,
                                message: Oh
                            }));
                            if (o === this.tim.loginInfo.identifier) return Pd(new Vp({
                                code: Bp.CANNOT_SET_SELF_MEMBER_ROLE,
                                message: Lh
                            }));
                            var s = new Xd(jg);
                            return s.setText("groupID=".concat(r, " userID=").concat(o, " role=").concat(i)), 
                            Cs.log("".concat(n, " groupID:").concat(r, ". userID: ").concat(o)), this._modifyGroupMemberInfo({
                                groupID: r,
                                userID: o,
                                role: i
                            }).then(function(e) {
                                return s.setNetworkType(t.getNetworkType()).setEnd(), Cs.log("".concat(n, " ok. groupID:").concat(r, ". userID: ").concat(o)), 
                                new kd({
                                    group: a,
                                    member: e
                                });
                            }).catch(function(e) {
                                return t.probeNetwork().then(function(t) {
                                    var n = Yn(t, 2), r = n[0], o = n[1];
                                    s.setError(e, r, o).setEnd();
                                }), Cs.error("".concat(n, " error:").concat(Us(e), " groupID:").concat(r, " userID:").concat(o)), 
                                Pd(e);
                            });
                        }
                    }, {
                        key: "setGroupMemberMuteTime",
                        value: function(e) {
                            var t = this, n = e.groupID, r = e.userID, o = e.muteTime, i = "".concat(Ty, ".setGroupMemberMuteTime");
                            if (r === this.tim.loginInfo.identifier) return Pd(new Vp({
                                code: Bp.CANNOT_MUTE_SELF,
                                message: Rh
                            }));
                            Cs.log("".concat(i, " groupID:").concat(n, ". userID: ").concat(r));
                            var a = new Xd(Ug);
                            return a.setText("groupID=".concat(n, " userID=").concat(r, " muteTime=").concat(o)), 
                            this._modifyGroupMemberInfo({
                                groupID: n,
                                userID: r,
                                muteTime: o
                            }).then(function(e) {
                                return a.setNetworkType(t.getNetworkType()).setEnd(), Cs.log("".concat(i, " ok. groupID:").concat(n, ". userID: ").concat(r)), 
                                new kd({
                                    group: t.getLocalGroupProfile(n),
                                    member: e
                                });
                            }).catch(function(e) {
                                return t.probeNetwork().then(function(t) {
                                    var n = Yn(t, 2), r = n[0], o = n[1];
                                    a.setError(e, r, o).setEnd();
                                }), Cs.error("".concat(i, " error:").concat(Us(e), " groupID:").concat(n, " userID:").concat(r)), 
                                Pd(e);
                            });
                        }
                    }, {
                        key: "setMessageRemindType",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".setMessageRemindType"), r = new Xd(xg);
                            r.setText("groupID=".concat(e.groupID, " userID=").concat(e.userID || this.tim.loginInfo.identifier)), 
                            Cs.log("".concat(n, " groupID:").concat(e.groupID, ". userID: ").concat(e.userID || this.tim.loginInfo.identifier));
                            var o = e.groupID, i = e.messageRemindType;
                            return this._modifyGroupMemberInfo({
                                groupID: o,
                                messageRemindType: i,
                                userID: this.tim.loginInfo.identifier
                            }).then(function() {
                                r.setNetworkType(t.getNetworkType()).setEnd(), Cs.log("".concat(n, " ok. groupID:").concat(e.groupID, " userID:").concat(e.userID || t.tim.loginInfo.identifier));
                                var o = t.getLocalGroupProfile(e.groupID);
                                return o && (o.selfInfo.messageRemindType = i), new kd({
                                    group: o
                                });
                            }).catch(function(o) {
                                return t.probeNetwork().then(function(e) {
                                    var t = Yn(e, 2), n = t[0], i = t[1];
                                    r.setError(o, n, i).setEnd();
                                }), Cs.error("".concat(n, " error:").concat(Us(o), " groupID:").concat(e.groupID, " userID:").concat(e.userID || t.tim.loginInfo.identifier)), 
                                Pd(o);
                            });
                        }
                    }, {
                        key: "setGroupMemberNameCard",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".setGroupMemberNameCard"), r = e.groupID, o = e.userID, i = void 0 === o ? this.tim.loginInfo.identifier : o, a = e.nameCard;
                            Cs.log("".concat(n, " groupID:").concat(r, ". userID: ").concat(i));
                            var s = new Xd(qg);
                            return s.setText("groupID=".concat(r, " userID=").concat(i, " nameCard=").concat(a)), 
                            this._modifyGroupMemberInfo({
                                groupID: r,
                                userID: i,
                                nameCard: a
                            }).then(function(e) {
                                Cs.log("".concat(n, " ok. groupID:").concat(r, ". userID: ").concat(i)), s.setNetworkType(t.getNetworkType()).setEnd();
                                var o = t.getLocalGroupProfile(r);
                                return i === t.tim.loginInfo.identifier && o && o.setSelfNameCard(a), new kd({
                                    group: o,
                                    member: e
                                });
                            }).catch(function(e) {
                                return t.probeNetwork().then(function(t) {
                                    var n = Yn(t, 2), r = n[0], o = n[1];
                                    s.setError(e, r, o).setEnd();
                                }), Cs.error("".concat(n, " error:").concat(Us(e), " groupID:").concat(r, " userID:").concat(i)), 
                                Pd(e);
                            });
                        }
                    }, {
                        key: "setGroupMemberCustomField",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".setGroupMemberCustomField"), r = e.groupID, o = e.userID, i = void 0 === o ? this.tim.loginInfo.identifier : o, a = e.memberCustomField;
                            Cs.log("".concat(n, " groupID:").concat(r, ". userID: ").concat(i));
                            var s = new Xd($g);
                            return s.setText("groupID=".concat(r, " userID=").concat(i, " memberCustomField=").concat(a)), 
                            this._modifyGroupMemberInfo({
                                groupID: r,
                                userID: i,
                                memberCustomField: a
                            }).then(function(e) {
                                return s.setNetworkType(t.getNetworkType()).setEnd(), Cs.log("".concat(n, " ok. groupID:").concat(r, ". userID: ").concat(i)), 
                                new kd({
                                    group: t.groupMap.get(r),
                                    member: e
                                });
                            }).catch(function(e) {
                                return t.probeNetwork().then(function(t) {
                                    var n = Yn(t, 2), r = n[0], o = n[1];
                                    s.setError(e, r, o).setEnd();
                                }), Cs.error("".concat(n, " error:").concat(Us(e), " groupID:").concat(r, " userID:").concat(i)), 
                                Pd(e);
                            });
                        }
                    }, {
                        key: "getGroupList",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".getGroupList"), r = new Xd(kg);
                            Cs.log("".concat(n));
                            var o = {
                                introduction: "Introduction",
                                notification: "Notification",
                                createTime: "CreateTime",
                                ownerID: "Owner_Account",
                                lastInfoTime: "LastInfoTime",
                                memberNum: "MemberNum",
                                maxMemberNum: "MaxMemberNum",
                                joinOption: "ApplyJoinOption",
                                muteAllMembers: "ShutUpAllMember"
                            }, i = [ "Type", "Name", "FaceUrl", "NextMsgSeq", "LastMsgTime" ];
                            return e && e.groupProfileFilter && e.groupProfileFilter.forEach(function(e) {
                                o[e] && i.push(o[e]);
                            }), this.request({
                                name: "group",
                                action: "list",
                                param: {
                                    responseFilter: {
                                        groupBaseInfoFilter: i,
                                        selfInfoFilter: [ "Role", "JoinTime", "MsgFlag" ]
                                    }
                                }
                            }).then(function(e) {
                                var o = e.data.groups;
                                return Cs.log("".concat(n, " ok. nums=").concat(o.length)), t._groupListTreeShaking(o), 
                                t.updateGroupMap(o), r.setNetworkType(t.getNetworkType()).setText("".concat(o.length, "-afterTreeshaking-").concat(t.groupMap.size)).setEnd(), 
                                t.tempConversationList && (Cs.log("".concat(n, " update last message with tempConversationList, nums=").concat(t.tempConversationList.length)), 
                                t._handleUpdateGroupLastMessage({
                                    data: t.tempConversationList
                                }), t.tempConversationList = null), t.emitGroupListUpdate(), new kd({
                                    groupList: t.getLocalGroups()
                                });
                            }).catch(function(e) {
                                return t.probeNetwork().then(function(t) {
                                    var n = Yn(t, 2), o = n[0], i = n[1];
                                    r.setError(e, o, i).setEnd();
                                }), Cs.error("".concat(n, " error:"), e), Pd(e);
                            });
                        }
                    }, {
                        key: "getGroupMemberList",
                        value: function(e) {
                            var t = this, n = e.groupID, r = e.offset, o = void 0 === r ? 0 : r, i = e.count, a = void 0 === i ? 15 : i, s = "".concat(Ty, ".getGroupMemberList"), c = new Xd(Pg);
                            Cs.log("".concat(s, " groupID: ").concat(n, " offset: ").concat(o, " count: ").concat(a));
                            var u = [];
                            return this.request({
                                name: "group",
                                action: "getGroupMemberList",
                                param: {
                                    groupID: n,
                                    offset: o,
                                    limit: a > 100 ? 100 : a,
                                    memberInfoFilter: [ "Role", "NameCard", "ShutUpUntil" ]
                                }
                            }).then(function(e) {
                                var r = e.data, o = r.members, i = r.memberNum;
                                return ws(o) && 0 !== o.length ? (t.hasLocalGroup(n) && (t.getLocalGroupProfile(n).memberNum = i), 
                                u = t._updateLocalGroupMemberMap(n, o), t.tim.getUserProfile({
                                    userIDList: o.map(function(e) {
                                        return e.userID;
                                    }),
                                    tagList: [ Mp.NICK, Mp.AVATAR ]
                                })) : Promise.resolve([]);
                            }).then(function(e) {
                                var r = e.data;
                                if (!ws(r) || 0 === r.length) return Rd({
                                    memberList: []
                                });
                                var i = r.map(function(e) {
                                    return {
                                        userID: e.userID,
                                        nick: e.nick,
                                        avatar: e.avatar
                                    };
                                });
                                return t._updateLocalGroupMemberMap(n, i), c.setNetworkType(t.getNetworkType()).setText("groupID=".concat(n, " offset=").concat(o, " count=").concat(a)).setEnd(), 
                                Cs.log("".concat(s, " ok.")), new kd({
                                    memberList: u
                                });
                            }).catch(function(e) {
                                return t.probeNetwork().then(function(t) {
                                    var n = Yn(t, 2), r = n[0], o = n[1];
                                    c.setError(e, r, o).setEnd();
                                }), Cs.error("".concat(s, " error:"), e), Pd(e);
                            });
                        }
                    }, {
                        key: "getLocalGroups",
                        value: function() {
                            return Jn(this.groupMap.values());
                        }
                    }, {
                        key: "getLocalGroupProfile",
                        value: function(e) {
                            return this.groupMap.get(e);
                        }
                    }, {
                        key: "hasLocalGroup",
                        value: function(e) {
                            return this.groupMap.has(e);
                        }
                    }, {
                        key: "getLocalGroupMemberInfo",
                        value: function(e, t) {
                            return this.groupMemberListMap.has(e) ? this.groupMemberListMap.get(e).get(t) : null;
                        }
                    }, {
                        key: "setLocalGroupMember",
                        value: function(e, t) {
                            if (this.groupMemberListMap.has(e)) this.groupMemberListMap.get(e).set(t.userID, t); else {
                                var n = new Map().set(t.userID, t);
                                this.groupMemberListMap.set(e, n);
                            }
                        }
                    }, {
                        key: "hasLocalGroupMember",
                        value: function(e, t) {
                            return this.groupMemberListMap.has(e) && this.groupMemberListMap.get(e).has(t);
                        }
                    }, {
                        key: "hasLocalGroupMemberMap",
                        value: function(e) {
                            return this.groupMemberListMap.has(e);
                        }
                    }, {
                        key: "getGroupProfile",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".getGroupProfile"), r = new Xd(Og);
                            Cs.log("".concat(n, " groupID:"), e.groupID);
                            var o = e.groupID, i = e.groupCustomFieldFilter, a = {
                                groupIDList: [ o ],
                                responseFilter: {
                                    groupBaseInfoFilter: [ "Type", "Name", "Introduction", "Notification", "FaceUrl", "Owner_Account", "CreateTime", "InfoSeq", "LastInfoTime", "LastMsgTime", "MemberNum", "MaxMemberNum", "ApplyJoinOption", "NextMsgSeq", "ShutUpAllMember" ],
                                    groupCustomFieldFilter: i
                                }
                            };
                            return this.getGroupProfileAdvance(a).then(function(i) {
                                var a, s = i.data, c = s.successGroupList, u = s.failureGroupList;
                                return Cs.log("".concat(n, " ok. groupID:").concat(e.groupID)), u.length > 0 ? Pd(u[0]) : (Zs(c[0].type) && !t.hasLocalGroup(o) ? a = new qv(c[0]) : (t.updateGroupMap(c), 
                                a = t.getLocalGroupProfile(o)), r.setNetworkType(t.getNetworkType()).setText("groupID=".concat(a.groupID, " type=").concat(a.type, " muteAllMembers=").concat(a.muteAllMembers, " ownerID=").concat(a.ownerID)).setEnd(), 
                                a && a.selfInfo && !a.selfInfo.nameCard ? t.updateSelfInfo(a).then(function(e) {
                                    return new kd({
                                        group: e
                                    });
                                }) : new kd({
                                    group: a
                                }));
                            }).catch(function(o) {
                                return t.probeNetwork().then(function(t) {
                                    var n = Yn(t, 2), i = n[0], a = n[1];
                                    r.setError(o, i, a).setText("groupID=".concat(e.groupID)).setEnd();
                                }), Cs.error("".concat(n, " error:").concat(Us(o), " groupID:").concat(e.groupID)), 
                                Pd(o);
                            });
                        }
                    }, {
                        key: "getGroupMemberProfile",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".getGroupMemberProfile"), r = new Xd(Ng);
                            r.setText(e.userIDList.length > 5 ? "userIDList.length=".concat(e.userIDList.length) : "userIDList=".concat(e.userIDList)), 
                            Cs.log("".concat(n, " groupID:").concat(e.groupID, " userIDList:").concat(e.userIDList.join(","))), 
                            e.userIDList.length > 50 && (e.userIDList = e.userIDList.slice(0, 50));
                            var o = e.groupID, i = e.userIDList;
                            return this._getGroupMemberProfileAdvance(Fn(Fn({}, e), {}, {
                                userIDList: i
                            })).then(function(e) {
                                var n = e.data.members;
                                return ws(n) && 0 !== n.length ? (t._updateLocalGroupMemberMap(o, n), t.tim.getUserProfile({
                                    userIDList: n.map(function(e) {
                                        return e.userID;
                                    }),
                                    tagList: [ Mp.NICK, Mp.AVATAR ]
                                })) : Rd([]);
                            }).then(function(e) {
                                var n = e.data.map(function(e) {
                                    return {
                                        userID: e.userID,
                                        nick: e.nick,
                                        avatar: e.avatar
                                    };
                                });
                                t._updateLocalGroupMemberMap(o, n);
                                var a = i.filter(function(e) {
                                    return t.hasLocalGroupMember(o, e);
                                }).map(function(e) {
                                    return t.getLocalGroupMemberInfo(o, e);
                                });
                                return r.setNetworkType(t.getNetworkType()).setEnd(), new kd({
                                    memberList: a
                                });
                            });
                        }
                    }, {
                        key: "_getGroupMemberProfileAdvance",
                        value: function(e) {
                            return this.request({
                                name: "group",
                                action: "getGroupMemberProfile",
                                param: Fn(Fn({}, e), {}, {
                                    memberInfoFilter: e.memberInfoFilter ? e.memberInfoFilter : [ "Role", "JoinTime", "NameCard", "ShutUpUntil" ]
                                })
                            });
                        }
                    }, {
                        key: "updateSelfInfo",
                        value: function(e) {
                            var t = "".concat(Ty, ".updateSelfInfo"), n = e.groupID;
                            Cs.log("".concat(t, " groupID:"), n);
                            var r = {
                                groupID: n,
                                userIDList: [ this.tim.loginInfo.identifier ]
                            };
                            return this.getGroupMemberProfile(r).then(function(r) {
                                var o = r.data.memberList;
                                return Cs.log("".concat(t, " ok. groupID:"), n), e && 0 !== o.length && e.updateSelfInfo(o[0]), 
                                e;
                            });
                        }
                    }, {
                        key: "addGroupMember",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".addGroupMember"), r = new Xd(Gg);
                            r.setText("groupID=".concat(e.groupID));
                            var o = this.getLocalGroupProfile(e.groupID);
                            if (Zs(o.type)) {
                                var i = new Vp({
                                    code: Bp.CANNOT_ADD_MEMBER_IN_AVCHATROOM,
                                    message: bh
                                });
                                return r.setCode(Bp.CANNOT_ADD_MEMBER_IN_AVCHATROOM).setMessage(bh).setNetworkType(this.getNetworkType()).setText("groupID=".concat(e.groupID, " groupType=").concat(o.type)).setEnd(), 
                                Pd(i);
                            }
                            return e.userIDList = e.userIDList.map(function(e) {
                                return {
                                    userID: e
                                };
                            }), Cs.log("".concat(n, " groupID:"), e.groupID), this.request({
                                name: "group",
                                action: "addGroupMember",
                                param: e
                            }).then(function(i) {
                                var a = i.data.members;
                                r.setNetworkType(t.getNetworkType()).setText("groupID=".concat(e.groupID)).setEnd(), 
                                Cs.log("".concat(n, " ok. groupID:"), e.groupID);
                                var s = a.filter(function(e) {
                                    return 1 === e.result;
                                }).map(function(e) {
                                    return e.userID;
                                }), c = a.filter(function(e) {
                                    return 0 === e.result;
                                }).map(function(e) {
                                    return e.userID;
                                }), u = a.filter(function(e) {
                                    return 2 === e.result;
                                }).map(function(e) {
                                    return e.userID;
                                });
                                return 0 === s.length ? new kd({
                                    successUserIDList: s,
                                    failureUserIDList: c,
                                    existedUserIDList: u
                                }) : (o.memberNum += s.length, new kd({
                                    successUserIDList: s,
                                    failureUserIDList: c,
                                    existedUserIDList: u,
                                    group: o
                                }));
                            }).catch(function(o) {
                                return t.probeNetwork().then(function(t) {
                                    var n = Yn(t, 2), i = n[0], a = n[1];
                                    r.setError(o, i, a).setText("groupID=".concat(e.groupID)).setEnd();
                                }), Cs.error("".concat(n, " error:").concat(Us(o), " groupID:").concat(e.groupID)), 
                                Pd(o);
                            });
                        }
                    }, {
                        key: "deleteGroupMember",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".deleteGroupMember"), r = new Xd(Fg);
                            r.setText(e.userIDList.length > 5 ? "userIDList.length=".concat(e.userIDList.length) : "userIDList=".concat(e.userIDList)), 
                            Cs.log("".concat(n, " groupID:").concat(e.groupID, " userIDList:").concat(e.userIDList));
                            var o = this.getLocalGroupProfile(e.groupID);
                            return o.type === Tn.GRP_AVCHATROOM ? Pd(new Vp({
                                code: Bp.CANNOT_KICK_MEMBER_IN_AVCHATROOM,
                                message: wh
                            })) : this.request({
                                name: "group",
                                action: "deleteGroupMember",
                                param: e
                            }).then(function() {
                                return r.setNetworkType(t.getNetworkType()).setEnd(), Cs.log("".concat(n, " ok")), 
                                o.memberNum--, t.deleteLocalGroupMembers(e.groupID, e.userIDList), new kd({
                                    group: o,
                                    userIDList: e.userIDList
                                });
                            }).catch(function(o) {
                                return t.probeNetwork().then(function(t) {
                                    var n = Yn(t, 2), i = n[0], a = n[1];
                                    r.setError(o, i, a).setText("groupID=".concat(e.groupID)).setEnd();
                                }), Cs.error("".concat(n, " error:").concat(Us(o), " groupID:").concat(e.groupID)), 
                                Pd(o);
                            });
                        }
                    }, {
                        key: "searchGroupByID",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".searchGroupByID"), r = {
                                groupIDList: [ e ]
                            }, o = new Xd(Eg);
                            return o.setText("groupID=".concat(e)), Cs.log("".concat(n, " groupID:").concat(e)), 
                            this.request({
                                name: "group",
                                action: "searchGroupByID",
                                param: r
                            }).then(function(r) {
                                var i = r.data.groupProfile;
                                if (i[0].errorCode !== Qc.SUCCESS) throw new Vp({
                                    code: i[0].errorCode,
                                    message: i[0].errorInfo
                                });
                                return o.setNetworkType(t.getNetworkType()).setEnd(), Cs.log("".concat(n, " ok. groupID:").concat(e)), 
                                new kd({
                                    group: new qv(i[0])
                                });
                            }).catch(function(r) {
                                return t.probeNetwork().then(function(e) {
                                    var t = Yn(e, 2), n = t[0], i = t[1];
                                    o.setError(r, n, i).setEnd();
                                }), Cs.warn("".concat(n, " error:").concat(Us(r), " groupID:").concat(e)), Pd(r);
                            });
                        }
                    }, {
                        key: "applyJoinGroup",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".applyJoinGroup"), r = new Xd(Mg);
                            return this.request({
                                name: "group",
                                action: "applyJoinGroup",
                                param: e
                            }).then(function(o) {
                                var i = o.data, a = i.joinedStatus, s = i.longPollingKey;
                                switch (r.setNetworkType(t.getNetworkType()).setText("groupID=".concat(e.groupID, " joinedStatus=").concat(a)).setEnd(), 
                                Cs.log("".concat(n, " ok. groupID:").concat(e.groupID, " joinedStatus:").concat(a, " longPollingKey:").concat(s)), 
                                a) {
                                  case Xc.WAIT_APPROVAL:
                                    return new kd({
                                        status: Xc.WAIT_APPROVAL
                                    });

                                  case Xc.SUCCESS:
                                    return t.getGroupProfile({
                                        groupID: e.groupID
                                    }).then(function(n) {
                                        var r = n.data.group, o = {
                                            status: Xc.SUCCESS,
                                            group: r
                                        };
                                        return Ds(s) ? (t.emitGroupListUpdate(!0, !1), new kd(o)) : (t.emitInnerEvent(pd, e.groupID), 
                                        t.AVChatRoomHandler.startRunLoop({
                                            longPollingKey: s,
                                            group: r
                                        }));
                                    });

                                  default:
                                    var c = new Vp({
                                        code: Bp.JOIN_GROUP_FAIL,
                                        message: Ah
                                    });
                                    return Cs.error("".concat(n, " error:").concat(Us(c), " groupID:").concat(e.groupID)), 
                                    Pd(c);
                                }
                            }).catch(function(o) {
                                return r.setText("groupID=".concat(e.groupID)), t.probeNetwork().then(function(e) {
                                    var t = Yn(e, 2), n = t[0], i = t[1];
                                    r.setError(o, n, i).setEnd();
                                }), Cs.error("".concat(n, " error:").concat(Us(o), " groupID:").concat(e.groupID)), 
                                Pd(o);
                            });
                        }
                    }, {
                        key: "applyJoinAVChatRoom",
                        value: function(e) {
                            return this.AVChatRoomHandler.applyJoinAVChatRoom(e);
                        }
                    }, {
                        key: "handleGroupApplication",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".handleGroupApplication"), r = e.message.payload, o = r.groupProfile.groupID, i = r.authentication, a = r.messageKey, s = r.operatorID, c = new Xd(bg);
                            return c.setText("groupID=".concat(o)), Cs.log("".concat(n, " groupID:"), o), this.request({
                                name: "group",
                                action: "handleApplyJoinGroup",
                                param: Fn(Fn({}, e), {}, {
                                    applicant: s,
                                    groupID: o,
                                    authentication: i,
                                    messageKey: a
                                })
                            }).then(function() {
                                return c.setNetworkType(t.getNetworkType()).setEnd(), Cs.log("".concat(n, " ok. groupID:"), o), 
                                t.deleteGroupSystemNotice({
                                    messageList: [ e.message ]
                                }), new kd({
                                    group: t.getLocalGroupProfile(o)
                                });
                            }).catch(function(e) {
                                return t.probeNetwork().then(function(t) {
                                    var n = Yn(t, 2), r = n[0], o = n[1];
                                    c.setError(e, r, o).setEnd();
                                }), Cs.error("".concat(n, " error. error:").concat(Us(e), " groupID:").concat(o)), 
                                Pd(e);
                            });
                        }
                    }, {
                        key: "deleteGroupSystemNotice",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".deleteGroupSystemNotice");
                            return ws(e.messageList) && 0 !== e.messageList.length ? (Cs.log("".concat(n) + e.messageList.map(function(e) {
                                return e.ID;
                            })), this.request({
                                name: "group",
                                action: "deleteGroupSystemNotice",
                                param: {
                                    messageListToDelete: e.messageList.map(function(e) {
                                        return {
                                            from: Tn.CONV_SYSTEM,
                                            messageSeq: e.clientSequence,
                                            messageRandom: e.random
                                        };
                                    })
                                }
                            }).then(function() {
                                return Cs.log("".concat(n, " ok")), e.messageList.forEach(function(e) {
                                    t.tim.messageController.deleteLocalMessage(e);
                                }), new kd();
                            }).catch(function(e) {
                                return Cs.error("".concat(n, " error:"), e), Pd(e);
                            })) : Rd();
                        }
                    }, {
                        key: "getGroupProfileAdvance",
                        value: function(e) {
                            var t = "".concat(Ty, ".getGroupProfileAdvance");
                            return ws(e.groupIDList) && e.groupIDList.length > 50 && (Cs.warn("".concat(t, " 获取群资料的数量不能超过50个")), 
                            e.groupIDList.length = 50), Cs.log("".concat(t, " groupIDList:"), e.groupIDList), 
                            this.request({
                                name: "group",
                                action: "query",
                                param: e
                            }).then(function(e) {
                                Cs.log("".concat(t, " ok."));
                                var n = e.data.groups, r = n.filter(function(e) {
                                    return Ds(e.errorCode) || e.errorCode === Qc.SUCCESS;
                                }), o = n.filter(function(e) {
                                    return e.errorCode && e.errorCode !== Qc.SUCCESS;
                                }).map(function(e) {
                                    return new Vp({
                                        code: e.errorCode,
                                        message: e.errorInfo,
                                        data: {
                                            groupID: e.groupID
                                        }
                                    });
                                });
                                return new kd({
                                    successGroupList: r,
                                    failureGroupList: o
                                });
                            }).catch(function(n) {
                                return Cs.error("".concat(t, " error:").concat(Us(n), " groupIDList:").concat(e.groupIDList)), 
                                Pd(n);
                            });
                        }
                    }, {
                        key: "_deleteLocalGroup",
                        value: function(e) {
                            return this.groupMap.delete(e), this.groupMemberListMap.delete(e), this._setStorageGroupList(), 
                            this.groupMap.has(e) && this.groupMemberListMap.has(e);
                        }
                    }, {
                        key: "_initGroupList",
                        value: function() {
                            var e = this, t = "".concat(Ty, "._initGroupList"), n = new Xd(Lg);
                            Cs.time(Yd), Cs.log("".concat(t));
                            var r = this._getStorageGroupList();
                            ws(r) && r.length > 0 ? (r.forEach(function(t) {
                                e.groupMap.set(t.groupID, new qv(t));
                            }), this.emitGroupListUpdate(!0, !1), n.setNetworkType(this.getNetworkType()).setText(this.groupMap.size).setEnd()) : n.setNetworkType(this.getNetworkType()).setText(0).setEnd(), 
                            this.triggerReady(), Cs.log("".concat(t, " ok. initCost=").concat(Cs.timeEnd(Yd), "ms")), 
                            this.getGroupList();
                        }
                    }, {
                        key: "_initListeners",
                        value: function() {
                            var e = this.tim.innerEmitter;
                            e.once(bf, this._initGroupList, this), e.on(sd, this._handleUpdateGroupLastMessage, this), 
                            e.on(Pf, this._handleReceivedGroupMessage, this), e.on(ld, this._handleProfileUpdated, this);
                        }
                    }, {
                        key: "emitGroupListUpdate",
                        value: function() {
                            var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], n = this.getLocalGroups(), r = JSON.parse(JSON.stringify(n));
                            t && this.emitInnerEvent(td, r), e && this.emitOuterEvent(Cn.GROUP_LIST_UPDATED, n);
                        }
                    }, {
                        key: "_handleReceivedGroupMessage",
                        value: function(e) {
                            var t = this, n = e.data.eventDataList;
                            Array.isArray(n) && n.forEach(function(e) {
                                var n = e.conversationID.replace(Tn.CONV_GROUP, "");
                                t.groupMap.has(n) && (t.groupMap.get(n).nextMessageSeq = e.lastMessage.sequence + 1);
                            });
                        }
                    }, {
                        key: "_onReceivedGroupSystemNotice",
                        value: function(e) {
                            var t = e.data;
                            this.groupNoticeHandler._onReceivedGroupNotice(t);
                        }
                    }, {
                        key: "_handleUpdateGroupLastMessage",
                        value: function(e) {
                            var t = "".concat(Ty, "._handleUpdateGroupLastMessage"), n = e.data;
                            if (Cs.log("".concat(t, " convNums=").concat(n.length, " groupNums=").concat(this.groupMap.size)), 
                            0 !== this.groupMap.size) {
                                for (var r, o, i, a = !1, s = 0, c = n.length; s < c; s++) (r = n[s]).conversationID && r.type !== Tn.CONV_GROUP && (o = r.conversationID.split(/^GROUP/)[1], 
                                (i = this.getLocalGroupProfile(o)) && (i.lastMessage = r.lastMessage, a = !0));
                                a && (this.groupMap = this._sortLocalGroupList(this.groupMap), this.emitGroupListUpdate(!0, !1));
                            } else this.tempConversationList = n;
                        }
                    }, {
                        key: "_sortLocalGroupList",
                        value: function(e) {
                            var t = Jn(e).filter(function(e) {
                                var t = Yn(e, 2);
                                return t[0], !ac(t[1].lastMessage);
                            });
                            return t.sort(function(e, t) {
                                return t[1].lastMessage.lastTime - e[1].lastMessage.lastTime;
                            }), new Map([].concat(Jn(t), Jn(e)));
                        }
                    }, {
                        key: "_getStorageGroupList",
                        value: function() {
                            return this.tim.storage.getItem("groupMap");
                        }
                    }, {
                        key: "_setStorageGroupList",
                        value: function() {
                            var e = this.getLocalGroups().filter(function(e) {
                                var t = e.type;
                                return !Zs(t);
                            }).slice(0, 20).map(function(e) {
                                return {
                                    groupID: e.groupID,
                                    name: e.name,
                                    avatar: e.avatar,
                                    type: e.type
                                };
                            });
                            this.tim.storage.setItem("groupMap", e);
                        }
                    }, {
                        key: "updateGroupMap",
                        value: function(e) {
                            var t = this;
                            e.forEach(function(e) {
                                t.groupMap.has(e.groupID) ? t.groupMap.get(e.groupID).updateGroup(e) : t.groupMap.set(e.groupID, new qv(e));
                            }), this._setStorageGroupList();
                        }
                    }, {
                        key: "_updateLocalGroupMemberMap",
                        value: function(e, t) {
                            var n = this;
                            return ws(t) && 0 !== t.length ? t.map(function(t) {
                                return n.hasLocalGroupMember(e, t.userID) ? n.getLocalGroupMemberInfo(e, t.userID).updateMember(t) : n.setLocalGroupMember(e, new dy(t)), 
                                n.getLocalGroupMemberInfo(e, t.userID);
                            }) : [];
                        }
                    }, {
                        key: "deleteLocalGroupMembers",
                        value: function(e, t) {
                            var n = this.groupMemberListMap.get(e);
                            n && t.forEach(function(e) {
                                n.delete(e);
                            });
                        }
                    }, {
                        key: "_modifyGroupMemberInfo",
                        value: function(e) {
                            var t = this, n = e.groupID, r = e.userID;
                            return this.request({
                                name: "group",
                                action: "modifyGroupMemberInfo",
                                param: e
                            }).then(function() {
                                if (t.hasLocalGroupMember(n, r)) {
                                    var o = t.getLocalGroupMemberInfo(n, r);
                                    return Ds(e.muteTime) || o.updateMuteUntil(e.muteTime), Ds(e.role) || o.updateRole(e.role), 
                                    Ds(e.nameCard) || o.updateNameCard(e.nameCard), Ds(e.memberCustomField) || o.updateMemberCustomField(e.memberCustomField), 
                                    o;
                                }
                                return t.getGroupMemberProfile({
                                    groupID: n,
                                    userIDList: [ r ]
                                }).then(function(e) {
                                    return Yn(e.data.memberList, 1)[0];
                                });
                            });
                        }
                    }, {
                        key: "_groupListTreeShaking",
                        value: function(e) {
                            for (var t = new Map(Jn(this.groupMap)), n = 0, r = e.length; n < r; n++) t.delete(e[n].groupID);
                            this.AVChatRoomHandler.hasJoinedAVChatRoom() && this.AVChatRoomHandler.getJoinedAVChatRoom().forEach(function(e) {
                                t.delete(e);
                            });
                            for (var o = Jn(t.keys()), i = 0, a = o.length; i < a; i++) this.groupMap.delete(o[i]);
                        }
                    }, {
                        key: "_handleProfileUpdated",
                        value: function(e) {
                            for (var t = this, n = e.data, r = function(e) {
                                var r = n[e];
                                t.groupMemberListMap.forEach(function(e) {
                                    e.has(r.userID) && e.get(r.userID).updateMember({
                                        nick: r.nick,
                                        avatar: r.avatar
                                    });
                                });
                            }, o = 0; o < n.length; o++) r(o);
                        }
                    }, {
                        key: "getJoinedAVChatRoom",
                        value: function() {
                            return this.AVChatRoomHandler.getJoinedAVChatRoom();
                        }
                    }, {
                        key: "deleteLocalGroupAndConversation",
                        value: function(e) {
                            this._deleteLocalGroup(e), this.tim.conversationController.deleteLocalConversation("GROUP".concat(e)), 
                            this.emitGroupListUpdate(!0, !1);
                        }
                    }, {
                        key: "checkJoinedAVChatRoomByID",
                        value: function(e) {
                            return this.AVChatRoomHandler.checkJoinedAVChatRoomByID(e);
                        }
                    }, {
                        key: "getGroupLastSequence",
                        value: function(e) {
                            var t = this, n = "".concat(Ty, ".getGroupLastSequence"), r = new Xd(Rg), o = 0;
                            if (this.hasLocalGroup(e)) {
                                var i = this.getLocalGroupProfile(e);
                                if (i.lastMessage.lastSequence > 0) return o = i.lastMessage.lastSequence, Cs.log("".concat(n, " got lastSequence=").concat(o, " from local group profile[lastMessage.lastSequence]. groupID=").concat(e)), 
                                r.setNetworkType(this.getNetworkType()).setText("got lastSequence=".concat(o, " from local group profile[lastMessage.lastSequence]. groupID=").concat(e)).setEnd(), 
                                Promise.resolve(o);
                                if (i.nextMessageSeq > 1) return o = i.nextMessageSeq - 1, Cs.log("".concat(n, " got lastSequence=").concat(o, " from local group profile[nextMessageSeq]. groupID=").concat(e)), 
                                r.setNetworkType(this.getNetworkType()).setText("got lastSequence=".concat(o, " from local group profile[nextMessageSeq]. groupID=").concat(e)).setEnd(), 
                                Promise.resolve(o);
                            }
                            var a = "GROUP".concat(e), s = this.tim.conversationController.getLocalConversation(a);
                            if (s && s.lastMessage.lastSequence) return o = s.lastMessage.lastSequence, Cs.log("".concat(n, " got lastSequence=").concat(o, " from local conversation profile[lastMessage.lastSequence]. groupID=").concat(e)), 
                            r.setNetworkType(this.getNetworkType()).setText("got lastSequence=".concat(o, " from local conversation profile[lastMessage.lastSequence]. groupID=").concat(e)).setEnd(), 
                            Promise.resolve(o);
                            var c = {
                                groupIDList: [ e ],
                                responseFilter: {
                                    groupBaseInfoFilter: [ "NextMsgSeq" ]
                                }
                            };
                            return this.getGroupProfileAdvance(c).then(function(i) {
                                var a = i.data.successGroupList;
                                return ac(a) ? Cs.log("".concat(n, " successGroupList is empty. groupID=").concat(e)) : (o = a[0].nextMessageSeq - 1, 
                                Cs.log("".concat(n, " got lastSequence=").concat(o, " from getGroupProfileAdvance. groupID=").concat(e))), 
                                r.setNetworkType(t.getNetworkType()).setText("got lastSequence=".concat(o, " from getGroupProfileAdvance. groupID=").concat(e)).setEnd(), 
                                o;
                            }).catch(function(o) {
                                return t.probeNetwork().then(function(t) {
                                    var n = Yn(t, 2), i = n[0], a = n[1];
                                    r.setError(o, i, a).setText("get lastSequence failed from getGroupProfileAdvance. groupID=".concat(e)).setEnd();
                                }), Cs.warn("".concat(n, " failed. ").concat(o)), Pd(o);
                            });
                        }
                    }, {
                        key: "getGroupOnlineMemberCount",
                        value: function(e) {
                            return this.AVChatRoomHandler.checkJoinedAVChatRoomByID(e) ? this.AVChatRoomHandler.getGroupOnlineMemberCount(e) : Rd({
                                memberCount: 0
                            });
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            this.groupMap.clear(), this.groupMemberListMap.clear(), this.resetReady(), this.groupNoticeHandler.reset(), 
                            this.AVChatRoomHandler.reset(), this.tim.innerEmitter.once(bf, this._initGroupList, this);
                        }
                    } ]), n;
                }(xd), Ay = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n(e) {
                        var r;
                        Ln(this, n), (r = t.call(this, e)).REALTIME_MESSAGE_TIMEOUT = 3e5, r.LONGPOLLING_ID_TIMEOUT = 3e5, 
                        r._currentState = Tn.NET_STATE_CONNECTED, r._status = {
                            OPENIM: {
                                lastResponseReceivedTime: 0,
                                jitterCount: 0,
                                failedCount: 0
                            },
                            AVCHATROOM: {
                                lastResponseReceivedTime: 0,
                                jitterCount: 0,
                                failedCount: 0
                            }
                        };
                        var o = r.tim.innerEmitter;
                        return o.on(Ff, r._onGetLongPollIDFailed, Kn(r)), o.on(qf, r._onOpenIMResponseOK, Kn(r)), 
                        o.on(Uf, r._onOpenIMRequestFailed, Kn(r)), o.on(ed, r._onAVChatroomResponseOK, Kn(r)), 
                        o.on(Zf, r._onAVChatroomRequestFailed, Kn(r)), r;
                    }
                    return Pn(n, [ {
                        key: "_onGetLongPollIDFailed",
                        value: function() {
                            this._currentState !== Tn.NET_STATE_DISCONNECTED && this._emitNetStateChangeEvent(Tn.NET_STATE_DISCONNECTED);
                        }
                    }, {
                        key: "_onOpenIMResponseOK",
                        value: function() {
                            this._onResponseOK("OPENIM");
                        }
                    }, {
                        key: "_onOpenIMRequestFailed",
                        value: function() {
                            this._onRequestFailed("OPENIM");
                        }
                    }, {
                        key: "_onAVChatroomResponseOK",
                        value: function() {
                            this.isLoggedIn() || this._onResponseOK("AVCHATROOM");
                        }
                    }, {
                        key: "_onAVChatroomRequestFailed",
                        value: function() {
                            this.isLoggedIn() || this._onRequestFailed("AVCHATROOM");
                        }
                    }, {
                        key: "_onResponseOK",
                        value: function(e) {
                            var t = this._status[e], n = Date.now();
                            if (0 !== t.lastResponseReceivedTime) {
                                var r = n - t.lastResponseReceivedTime;
                                Cs.debug("StatusController._onResponseOK key=".concat(e, " currentState=").concat(this._currentState, " interval=").concat(r, " failedCount=").concat(t.failedCount, " jitterCount=").concat(t.jitterCount)), 
                                t.failedCount > 0 && (t.failedCount = 0, t.jitterCount += 1, this._currentState !== Tn.NET_STATE_CONNECTED && this._emitNetStateChangeEvent(Tn.NET_STATE_CONNECTED)), 
                                r <= this.LONGPOLLING_ID_TIMEOUT ? t.jitterCount >= 3 && (new Xd(Kg).setText("".concat(e, "-").concat(r, "-").concat(t.jitterCount)).setNetworkType(this.getNetworkType()).setEnd(), 
                                t.jitterCount = 0) : (new Xd(zg).setText("".concat(e, "-").concat(r)).setNetworkType(this.getNetworkType()).setEnd(), 
                                Cs.warn("StatusController._onResponseOK, sdk reload. key=".concat(e, " interval=").concat(r, "ms. https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/module-EVENT.html#.SDK_RELOAD")), 
                                this.emitInnerEvent(dd)), t.lastResponseReceivedTime = n;
                            } else t.lastResponseReceivedTime = n;
                        }
                    }, {
                        key: "_onRequestFailed",
                        value: function(e) {
                            var t = this, n = this._status[e];
                            Date.now() - n.lastResponseReceivedTime >= this.LONGPOLLING_ID_TIMEOUT ? this._currentState !== Tn.NET_STATE_DISCONNECTED && (Cs.warn("StatusController._onRequestFailed, disconnected, longpolling unavailable more than 5min. key=".concat(e, " networkType=").concat(this.getNetworkType())), 
                            this._emitNetStateChangeEvent(Tn.NET_STATE_DISCONNECTED)) : (n.failedCount += 1, 
                            n.failedCount > 5 ? this.probeNetwork().then(function(r) {
                                var o = Yn(r, 2), i = o[0], a = o[1];
                                i ? (t._currentState !== Tn.NET_STATE_CONNECTING && t._emitNetStateChangeEvent(Tn.NET_STATE_CONNECTING), 
                                Cs.warn("StatusController._onRequestFailed, connecting, network jitter. key=".concat(e, " networkType=").concat(a))) : (t._currentState !== Tn.NET_STATE_DISCONNECTED && t._emitNetStateChangeEvent(Tn.NET_STATE_DISCONNECTED), 
                                Cs.warn("StatusController._onRequestFailed, disconnected, longpolling unavailable. key=".concat(e, " networkType=").concat(a))), 
                                n.failedCount = 0, n.jitterCount = 0;
                            }) : this._currentState === Tn.NET_STATE_CONNECTED && this._emitNetStateChangeEvent(Tn.NET_STATE_CONNECTING));
                        }
                    }, {
                        key: "_emitNetStateChangeEvent",
                        value: function(e) {
                            Cs.log("StatusController._emitNetStateChangeEvent net state changed from ".concat(this._currentState, " to ").concat(e)), 
                            this._currentState = e, this.emitOuterEvent(Cn.NET_STATE_CHANGE, {
                                state: e
                            });
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            Cs.log("StatusController.reset"), this._currentState = Tn.NET_STATE_CONNECTED, this._status = {
                                OPENIM: {
                                    lastResponseReceivedTime: 0,
                                    jitterCount: 0,
                                    failedCount: 0
                                },
                                AVCHATROOM: {
                                    lastResponseReceivedTime: 0,
                                    jitterCount: 0,
                                    failedCount: 0
                                }
                            };
                        }
                    } ]), n;
                }(xd);
                function by() {
                    return null;
                }
                var xy = function() {
                    function e(t) {
                        Ln(this, e), this.tim = t, this.storageQueue = new Map(), this.checkTimes = 0, this.checkTimer = setInterval(this._onCheckTimer.bind(this), 1e3), 
                        this._errorTolerantHandle();
                    }
                    return Pn(e, [ {
                        key: "_errorTolerantHandle",
                        value: function() {
                            !Ka && Ds(window.localStorage) && (this.getItem = by, this.setItem = by, this.removeItem = by, 
                            this.clear = by);
                        }
                    }, {
                        key: "_onCheckTimer",
                        value: function() {
                            if (this.checkTimes++, this.checkTimes % 20 == 0) {
                                if (0 === this.storageQueue.size) return;
                                this._doFlush();
                            }
                        }
                    }, {
                        key: "_doFlush",
                        value: function() {
                            try {
                                var e, t = nr(this.storageQueue);
                                try {
                                    for (t.s(); !(e = t.n()).done; ) {
                                        var n = Yn(e.value, 2), r = n[0], o = n[1];
                                        this._setStorageSync(this._getKey(r), o);
                                    }
                                } catch (a) {
                                    t.e(a);
                                } finally {
                                    t.f();
                                }
                                this.storageQueue.clear();
                            } catch (f_) {
                                Cs.warn("Storage._doFlush error", f_);
                            }
                        }
                    }, {
                        key: "_getPrefix",
                        value: function() {
                            var e = this.tim.loginInfo, t = e.SDKAppID, n = e.identifier;
                            return "TIM_".concat(t, "_").concat(n, "_");
                        }
                    }, {
                        key: "getItem",
                        value: function(e) {
                            var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                            try {
                                var n = t ? this._getKey(e) : e;
                                return this._getStorageSync(n);
                            } catch (f_) {
                                return Cs.warn("Storage.getItem error:", f_), {};
                            }
                        }
                    }, {
                        key: "setItem",
                        value: function(e, t) {
                            var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], r = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3];
                            if (n) {
                                var o = r ? this._getKey(e) : e;
                                this._setStorageSync(o, t);
                            } else this.storageQueue.set(e, t);
                        }
                    }, {
                        key: "clear",
                        value: function() {
                            try {
                                Ka ? za.clearStorageSync() : localStorage.clear();
                            } catch (f_) {
                                Cs.warn("Storage.clear error:", f_);
                            }
                        }
                    }, {
                        key: "removeItem",
                        value: function(e) {
                            var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                            try {
                                var n = t ? this._getKey(e) : e;
                                this._removeStorageSync(n);
                            } catch (f_) {
                                Cs.warn("Storage.removeItem error:", f_);
                            }
                        }
                    }, {
                        key: "getSize",
                        value: function(e) {
                            var t = this, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "b";
                            try {
                                var r = {
                                    size: 0,
                                    limitSize: 5242880,
                                    unit: n
                                };
                                if (Object.defineProperty(r, "leftSize", {
                                    enumerable: !0,
                                    get: function() {
                                        return r.limitSize - r.size;
                                    }
                                }), Ka && (r.limitSize = 1024 * za.getStorageInfoSync().limitSize), e) r.size = JSON.stringify(this.getItem(e)).length + this._getKey(e).length; else if (Ka) {
                                    var o = za.getStorageInfoSync(), i = o.keys;
                                    i.forEach(function(e) {
                                        r.size += JSON.stringify(t._getStorageSync(e)).length + t._getKey(e).length;
                                    });
                                } else for (var a in localStorage) localStorage.hasOwnProperty(a) && (r.size += localStorage.getItem(a).length + a.length);
                                return this._convertUnit(r);
                            } catch (f_) {
                                Cs.warn("Storage.getSize error:", f_);
                            }
                        }
                    }, {
                        key: "_convertUnit",
                        value: function(e) {
                            var t = {}, n = e.unit;
                            for (var r in t.unit = n, e) "number" == typeof e[r] && ("kb" === n.toLowerCase() ? t[r] = Math.round(e[r] / 1024) : "mb" === n.toLowerCase() ? t[r] = Math.round(e[r] / 1024 / 1024) : t[r] = e[r]);
                            return t;
                        }
                    }, {
                        key: "_getKey",
                        value: function(e) {
                            return "".concat(this._getPrefix()).concat(e);
                        }
                    }, {
                        key: "_setStorageSync",
                        value: function(e, t) {
                            Ka ? Ha ? my.setStorageSync({
                                key: e,
                                data: t
                            }) : za.setStorageSync(e, t) : localStorage.setItem(e, JSON.stringify(t));
                        }
                    }, {
                        key: "_getStorageSync",
                        value: function(e) {
                            return Ka ? Ha ? my.getStorageSync({
                                key: e
                            }).data : za.getStorageSync(e) : JSON.parse(localStorage.getItem(e));
                        }
                    }, {
                        key: "_removeStorageSync",
                        value: function(e) {
                            Ka ? Ha ? my.removeStorageSync({
                                key: e
                            }) : za.removeStorageSync(e) : localStorage.removeItem(e);
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            this._doFlush(), this.checkTimes = 0;
                        }
                    } ]), e;
                }(), wy = n(function(e) {
                    var t = Object.prototype.hasOwnProperty, n = "~";
                    function r() {}
                    function o(e, t, n) {
                        this.fn = e, this.context = t, this.once = n || !1;
                    }
                    function i(e, t, r, i, a) {
                        if ("function" != typeof r) throw new TypeError("The listener must be a function");
                        var s = new o(r, i || e, a), c = n ? n + t : t;
                        return e._events[c] ? e._events[c].fn ? e._events[c] = [ e._events[c], s ] : e._events[c].push(s) : (e._events[c] = s, 
                        e._eventsCount++), e;
                    }
                    function a(e, t) {
                        0 == --e._eventsCount ? e._events = new r() : delete e._events[t];
                    }
                    function s() {
                        this._events = new r(), this._eventsCount = 0;
                    }
                    Object.create && (r.prototype = Object.create(null), new r().__proto__ || (n = !1)), 
                    s.prototype.eventNames = function() {
                        var e, r, o = [];
                        if (0 === this._eventsCount) return o;
                        for (r in e = this._events) t.call(e, r) && o.push(n ? r.slice(1) : r);
                        return Object.getOwnPropertySymbols ? o.concat(Object.getOwnPropertySymbols(e)) : o;
                    }, s.prototype.listeners = function(e) {
                        var t = n ? n + e : e, r = this._events[t];
                        if (!r) return [];
                        if (r.fn) return [ r.fn ];
                        for (var o = 0, i = r.length, a = new Array(i); o < i; o++) a[o] = r[o].fn;
                        return a;
                    }, s.prototype.listenerCount = function(e) {
                        var t = n ? n + e : e, r = this._events[t];
                        return r ? r.fn ? 1 : r.length : 0;
                    }, s.prototype.emit = function(e, t, r, o, i, a) {
                        var s = n ? n + e : e;
                        if (!this._events[s]) return !1;
                        var c, u, l = this._events[s], p = arguments.length;
                        if (l.fn) {
                            switch (l.once && this.removeListener(e, l.fn, void 0, !0), p) {
                              case 1:
                                return l.fn.call(l.context), !0;

                              case 2:
                                return l.fn.call(l.context, t), !0;

                              case 3:
                                return l.fn.call(l.context, t, r), !0;

                              case 4:
                                return l.fn.call(l.context, t, r, o), !0;

                              case 5:
                                return l.fn.call(l.context, t, r, o, i), !0;

                              case 6:
                                return l.fn.call(l.context, t, r, o, i, a), !0;
                            }
                            for (u = 1, c = new Array(p - 1); u < p; u++) c[u - 1] = arguments[u];
                            l.fn.apply(l.context, c);
                        } else {
                            var h, f = l.length;
                            for (u = 0; u < f; u++) switch (l[u].once && this.removeListener(e, l[u].fn, void 0, !0), 
                            p) {
                              case 1:
                                l[u].fn.call(l[u].context);
                                break;

                              case 2:
                                l[u].fn.call(l[u].context, t);
                                break;

                              case 3:
                                l[u].fn.call(l[u].context, t, r);
                                break;

                              case 4:
                                l[u].fn.call(l[u].context, t, r, o);
                                break;

                              default:
                                if (!c) for (h = 1, c = new Array(p - 1); h < p; h++) c[h - 1] = arguments[h];
                                l[u].fn.apply(l[u].context, c);
                            }
                        }
                        return !0;
                    }, s.prototype.on = function(e, t, n) {
                        return i(this, e, t, n, !1);
                    }, s.prototype.once = function(e, t, n) {
                        return i(this, e, t, n, !0);
                    }, s.prototype.removeListener = function(e, t, r, o) {
                        var i = n ? n + e : e;
                        if (!this._events[i]) return this;
                        if (!t) return a(this, i), this;
                        var s = this._events[i];
                        if (s.fn) s.fn !== t || o && !s.once || r && s.context !== r || a(this, i); else {
                            for (var c = 0, u = [], l = s.length; c < l; c++) (s[c].fn !== t || o && !s[c].once || r && s[c].context !== r) && u.push(s[c]);
                            u.length ? this._events[i] = 1 === u.length ? u[0] : u : a(this, i);
                        }
                        return this;
                    }, s.prototype.removeAllListeners = function(e) {
                        var t;
                        return e ? (t = n ? n + e : e, this._events[t] && a(this, t)) : (this._events = new r(), 
                        this._eventsCount = 0), this;
                    }, s.prototype.off = s.prototype.removeListener, s.prototype.addListener = s.prototype.on, 
                    s.prefixed = n, s.EventEmitter = s, e.exports = s;
                });
                function Dy(e) {
                    var t = e.context || null;
                    return {
                        platform: mf,
                        websdkappid: gf,
                        v: df,
                        a2: t && t.a2Key || void 0,
                        tinyid: t && t.tinyID || void 0,
                        sdkappid: t && t.SDKAppID || 0,
                        contentType: t && t.contentType || 0,
                        apn: t && t.apn || 1,
                        accounttype: t && t.accountType || 0
                    };
                }
                var ky = function() {
                    function e(t) {
                        Ln(this, e), this.tim = t, this.tim.innerEmitter.on(Ef, this._update, this), this.tim.innerEmitter.on(Af, this._update, this), 
                        this.tim.innerEmitter.on(xf, this._updateSpecifiedConfig, this), this._initConfig();
                    }
                    return Pn(e, [ {
                        key: "_update",
                        value: function(e) {
                            this._initConfig();
                        }
                    }, {
                        key: "_updateSpecifiedConfig",
                        value: function(e) {
                            var t = this;
                            e.data.forEach(function(e) {
                                t._set(e);
                            });
                        }
                    }, {
                        key: "get",
                        value: function(e) {
                            var t = e.name, n = e.action, r = e.param, o = e.tjgID;
                            if (Ds(this.config[t]) || Ds(this.config[t][n])) throw new Vp({
                                code: Bp.NETWORK_PACKAGE_UNDEFINED,
                                message: "".concat(Vh, ": PackageConfig.").concat(t)
                            });
                            var i = function e(t) {
                                if (0 === Object.getOwnPropertyNames(t).length) return Object.create(null);
                                var n = Array.isArray(t) ? [] : Object.create(null), r = "";
                                for (var o in t) null !== t[o] ? void 0 !== t[o] ? (r = On(t[o]), [ "string", "number", "function", "boolean" ].indexOf(r) >= 0 ? n[o] = t[o] : n[o] = e(t[o])) : n[o] = void 0 : n[o] = null;
                                return n;
                            }(this.config[t][n]);
                            return i.requestData = this._initRequestData(r, i), i.encode = this._initEncoder(i), 
                            i.decode = this._initDecoder(i), o && (i.queryString.tjg_id = o), i;
                        }
                    }, {
                        key: "_set",
                        value: function(e) {
                            var t = e.key, n = e.value;
                            if (0 != !!t) {
                                var r = t.split(".");
                                r.length <= 0 || function e(t, n, r, o) {
                                    var i = n[r];
                                    "object" === On(t[i]) ? e(t[i], n, r + 1, o) : t[i] = o;
                                }(this.config, r, 0, n);
                            }
                        }
                    }, {
                        key: "_initConfig",
                        value: function() {
                            var e;
                            this.config = {}, this.config.accessLayer = (e = this.tim, {
                                create: null,
                                query: {
                                    serverName: Cf.NAME.WEB_IM,
                                    cmd: Cf.CMD.ACCESS_LAYER,
                                    channel: Cf.CHANNEL.XHR,
                                    protocol: yf,
                                    method: "POST",
                                    queryString: Fn(Fn({}, Dy(e)), {}, {
                                        identifier: e.context.identifier,
                                        usersig: e.context.userSig
                                    }),
                                    requestData: {}
                                },
                                update: null,
                                delete: null
                            }), this.config.login = function(e) {
                                return {
                                    create: null,
                                    query: {
                                        serverName: Cf.NAME.OPEN_IM,
                                        cmd: Cf.CMD.LOGIN,
                                        channel: Cf.CHANNEL.XHR,
                                        protocol: yf,
                                        method: "POST",
                                        queryString: Fn(Fn({}, Dy(e)), {}, {
                                            identifier: e.loginInfo.identifier,
                                            usersig: e.loginInfo.userSig,
                                            sdkappid: e.loginInfo.SDKAppID,
                                            accounttype: e.loginInfo.accountType,
                                            reqtime: +new Date() / 1e3
                                        }),
                                        requestData: {
                                            state: "Online"
                                        },
                                        keyMaps: {
                                            request: {
                                                tinyID: "tinyId"
                                            },
                                            response: {
                                                TinyId: "tinyID"
                                            }
                                        }
                                    },
                                    update: null,
                                    delete: null
                                };
                            }(this.tim), this.config.logout = function(e) {
                                return {
                                    create: null,
                                    query: {
                                        serverName: Cf.NAME.OPEN_IM,
                                        cmd: Cf.CMD.LOGOUT_ALL,
                                        channel: Cf.CHANNEL.XHR,
                                        protocol: yf,
                                        method: "POST",
                                        queryString: Fn(Fn({}, Dy(e)), {}, {
                                            reqtime: +new Date() / 1e3
                                        }),
                                        requestData: {}
                                    },
                                    update: null,
                                    delete: null
                                };
                            }(this.tim), this.config.longPollLogout = function(e) {
                                return {
                                    create: null,
                                    query: {
                                        serverName: Cf.NAME.OPEN_IM,
                                        cmd: Cf.CMD.LOGOUT_LONG_POLL,
                                        channel: Cf.CHANNEL.XHR,
                                        protocol: yf,
                                        method: "POST",
                                        queryString: Fn(Fn({}, Dy(e)), {}, {
                                            reqtime: +new Date()
                                        }),
                                        requestData: {
                                            longPollID: ""
                                        },
                                        keyMaps: {
                                            request: {
                                                longPollID: "LongPollingId"
                                            }
                                        }
                                    },
                                    update: null,
                                    delete: null
                                };
                            }(this.tim), this.config.profile = function(e) {
                                var t = Dy(e), n = {
                                    serverName: Cf.NAME.PROFILE,
                                    channel: Cf.CHANNEL.XHR,
                                    protocol: yf,
                                    method: "POST",
                                    queryString: t
                                };
                                return {
                                    query: Fn(Fn({}, n), {}, {
                                        cmd: Cf.CMD.PORTRAIT_GET,
                                        requestData: {
                                            fromAccount: "",
                                            userItem: []
                                        },
                                        keyMaps: {
                                            request: {
                                                toAccount: "To_Account",
                                                standardSequence: "StandardSequence",
                                                customSequence: "CustomSequence"
                                            }
                                        }
                                    }),
                                    update: Fn(Fn({}, n), {}, {
                                        cmd: Cf.CMD.PORTRAIT_SET,
                                        requestData: {
                                            fromAccount: "",
                                            profileItem: [ {
                                                tag: Mp.NICK,
                                                value: ""
                                            }, {
                                                tag: Mp.GENDER,
                                                value: ""
                                            }, {
                                                tag: Mp.ALLOWTYPE,
                                                value: ""
                                            }, {
                                                tag: Mp.AVATAR,
                                                value: ""
                                            } ]
                                        }
                                    })
                                };
                            }(this.tim), this.config.group = function(e) {
                                var t = Cf.NAME.GROUP, n = Dy(e);
                                if (e.context.login !== Zc.IS_LOGIN || !e.context.a2Key) {
                                    t = Cf.NAME.BIG_GROUP_NO_AUTH;
                                    var r = Dy(e);
                                    r.a2, r.tinyid, n = Hn(r, [ "a2", "tinyid" ]);
                                }
                                var o = {
                                    request: {
                                        ownerID: "Owner_Account",
                                        userID: "Member_Account",
                                        newOwnerID: "NewOwner_Account",
                                        maxMemberNum: "MaxMemberCount",
                                        groupCustomField: "AppDefinedData",
                                        memberCustomField: "AppMemberDefinedData",
                                        groupCustomFieldFilter: "AppDefinedDataFilter_Group",
                                        memberCustomFieldFilter: "AppDefinedDataFilter_GroupMember",
                                        messageRemindType: "MsgFlag",
                                        userIDList: "MemberList",
                                        groupIDList: "GroupIdList",
                                        applyMessage: "ApplyMsg",
                                        muteTime: "ShutUpTime",
                                        muteAllMembers: "ShutUpAllMember",
                                        joinOption: "ApplyJoinOption"
                                    },
                                    response: {
                                        GroupIdList: "groups",
                                        MsgFlag: "messageRemindType",
                                        AppDefinedData: "groupCustomField",
                                        AppMemberDefinedData: "memberCustomField",
                                        AppDefinedDataFilter_Group: "groupCustomFieldFilter",
                                        AppDefinedDataFilter_GroupMember: "memberCustomFieldFilter",
                                        InfoSeq: "infoSequence",
                                        MemberList: "members",
                                        GroupInfo: "groups",
                                        ShutUpUntil: "muteUntil",
                                        ShutUpAllMember: "muteAllMembers",
                                        ApplyJoinOption: "joinOption"
                                    }
                                }, i = {
                                    serverName: Cf.NAME.GROUP,
                                    channel: Cf.CHANNEL.XHR,
                                    protocol: yf,
                                    queryString: n
                                };
                                return {
                                    create: Fn(Fn({}, i), {}, {
                                        cmd: Cf.CMD.CREATE_GROUP,
                                        requestData: {
                                            type: Tn.GRP_WORK,
                                            name: void 0,
                                            groupID: void 0,
                                            ownerID: e.loginInfo.identifier,
                                            introduction: void 0,
                                            notification: void 0,
                                            avatar: void 0,
                                            maxMemberNum: void 0,
                                            joinOption: void 0,
                                            memberList: void 0,
                                            groupCustomField: void 0
                                        },
                                        keyMaps: o
                                    }),
                                    list: Fn(Fn({}, i), {}, {
                                        cmd: Cf.CMD.GET_JOINED_GROUPS,
                                        requestData: {
                                            userID: e.loginInfo.identifier,
                                            limit: void 0,
                                            offset: void 0,
                                            groupType: void 0,
                                            responseFilter: void 0
                                        },
                                        keyMaps: o
                                    }),
                                    query: Fn(Fn({}, i), {}, {
                                        cmd: Cf.CMD.GET_GROUP_INFO,
                                        requestData: {
                                            groupIDList: void 0,
                                            responseFilter: void 0
                                        },
                                        keyMaps: o
                                    }),
                                    getGroupMemberProfile: Fn(Fn({}, i), {}, {
                                        cmd: Cf.CMD.GET_GROUP_MEMBER_INFO,
                                        requestData: {
                                            groupID: void 0,
                                            userIDList: void 0,
                                            memberInfoFilter: void 0,
                                            memberCustomFieldFilter: void 0
                                        },
                                        keyMaps: {
                                            request: Fn(Fn({}, o.request), {}, {
                                                userIDList: "Member_List_Account"
                                            }),
                                            response: o.response
                                        }
                                    }),
                                    getGroupMemberList: Fn(Fn({}, i), {}, {
                                        cmd: Cf.CMD.GET_GROUP_MEMBER_LIST,
                                        requestData: {
                                            groupID: void 0,
                                            limit: 0,
                                            offset: 0,
                                            memberRoleFilter: void 0,
                                            memberInfoFilter: void 0
                                        },
                                        keyMaps: o
                                    }),
                                    quitGroup: Fn(Fn({}, i), {}, {
                                        cmd: Cf.CMD.QUIT_GROUP,
                                        requestData: {
                                            groupID: void 0
                                        }
                                    }),
                                    changeGroupOwner: Fn(Fn({}, i), {}, {
                                        cmd: Cf.CMD.CHANGE_GROUP_OWNER,
                                        queryString: n,
                                        requestData: {
                                            groupID: void 0,
                                            newOwnerID: void 0
                                        },
                                        keyMaps: o
                                    }),
                                    destroyGroup: Fn(Fn({}, i), {}, {
                                        cmd: Cf.CMD.DESTROY_GROUP,
                                        requestData: {
                                            groupID: void 0
                                        }
                                    }),
                                    updateGroupProfile: Fn(Fn({}, i), {}, {
                                        cmd: Cf.CMD.MODIFY_GROUP_INFO,
                                        requestData: {
                                            groupID: void 0,
                                            name: void 0,
                                            introduction: void 0,
                                            notification: void 0,
                                            avatar: void 0,
                                            maxMemberNum: void 0,
                                            joinOption: void 0,
                                            groupCustomField: void 0,
                                            muteAllMembers: void 0
                                        },
                                        keyMaps: {
                                            request: Fn(Fn({}, o.request), {}, {
                                                groupCustomField: "AppDefinedData"
                                            }),
                                            response: o.response
                                        }
                                    }),
                                    modifyGroupMemberInfo: Fn(Fn({}, i), {}, {
                                        cmd: Cf.CMD.MODIFY_GROUP_MEMBER_INFO,
                                        requestData: {
                                            groupID: void 0,
                                            userID: void 0,
                                            messageRemindType: void 0,
                                            nameCard: void 0,
                                            role: void 0,
                                            memberCustomField: void 0,
                                            muteTime: void 0
                                        },
                                        keyMaps: o
                                    }),
                                    addGroupMember: Fn(Fn({}, i), {}, {
                                        cmd: Cf.CMD.ADD_GROUP_MEMBER,
                                        requestData: {
                                            groupID: void 0,
                                            silence: void 0,
                                            userIDList: void 0
                                        },
                                        keyMaps: o
                                    }),
                                    deleteGroupMember: Fn(Fn({}, i), {}, {
                                        cmd: Cf.CMD.DELETE_GROUP_MEMBER,
                                        requestData: {
                                            groupID: void 0,
                                            userIDList: void 0,
                                            reason: void 0
                                        },
                                        keyMaps: {
                                            request: {
                                                userIDList: "MemberToDel_Account"
                                            }
                                        }
                                    }),
                                    searchGroupByID: Fn(Fn({}, i), {}, {
                                        cmd: Cf.CMD.SEARCH_GROUP_BY_ID,
                                        requestData: {
                                            groupIDList: void 0,
                                            responseFilter: {
                                                groupBasePublicInfoFilter: [ "Type", "Name", "Introduction", "Notification", "FaceUrl", "CreateTime", "Owner_Account", "LastInfoTime", "LastMsgTime", "NextMsgSeq", "MemberNum", "MaxMemberNum", "ApplyJoinOption" ]
                                            }
                                        },
                                        keyMaps: {
                                            request: {
                                                groupIDList: "GroupIdList"
                                            }
                                        }
                                    }),
                                    applyJoinGroup: Fn(Fn({}, i), {}, {
                                        cmd: Cf.CMD.APPLY_JOIN_GROUP,
                                        requestData: {
                                            groupID: void 0,
                                            applyMessage: void 0,
                                            userDefinedField: void 0
                                        },
                                        keyMaps: o
                                    }),
                                    applyJoinAVChatRoom: Fn(Fn({}, i), {}, {
                                        serverName: Cf.NAME.BIG_GROUP_NO_AUTH,
                                        cmd: Cf.CMD.APPLY_JOIN_GROUP,
                                        requestData: {
                                            groupID: void 0,
                                            applyMessage: void 0,
                                            userDefinedField: void 0
                                        },
                                        keyMaps: o
                                    }),
                                    handleApplyJoinGroup: Fn(Fn({}, i), {}, {
                                        cmd: Cf.CMD.HANDLE_APPLY_JOIN_GROUP,
                                        requestData: {
                                            groupID: void 0,
                                            applicant: void 0,
                                            handleAction: void 0,
                                            handleMessage: void 0,
                                            authentication: void 0,
                                            messageKey: void 0,
                                            userDefinedField: void 0
                                        },
                                        keyMaps: {
                                            request: {
                                                applicant: "Applicant_Account",
                                                handleAction: "HandleMsg",
                                                handleMessage: "ApprovalMsg",
                                                messageKey: "MsgKey"
                                            },
                                            response: {
                                                MsgKey: "messageKey"
                                            }
                                        }
                                    }),
                                    deleteGroupSystemNotice: Fn(Fn({}, i), {}, {
                                        serverName: Cf.NAME.OPEN_IM,
                                        cmd: Cf.CMD.DELETE_GROUP_SYSTEM_MESSAGE,
                                        requestData: {
                                            messageListToDelete: void 0
                                        },
                                        keyMaps: {
                                            request: {
                                                messageListToDelete: "DelMsgList",
                                                messageSeq: "MsgSeq",
                                                messageRandom: "MsgRandom"
                                            }
                                        }
                                    }),
                                    getGroupPendency: Fn(Fn({}, i), {}, {
                                        cmd: Cf.CMD.GET_GROUP_PENDENCY,
                                        requestData: {
                                            startTime: void 0,
                                            limit: void 0,
                                            handleAccount: void 0
                                        },
                                        keyMaps: {
                                            request: {
                                                handleAccount: "Handle_Account"
                                            }
                                        }
                                    }),
                                    getOnlineMemberNum: {
                                        serverName: t,
                                        cmd: Cf.CMD.GET_ONLINE_MEMBER_NUM,
                                        channel: Cf.CHANNEL.XHR,
                                        protocol: yf,
                                        queryString: n,
                                        requestData: {
                                            groupID: void 0
                                        }
                                    }
                                };
                            }(this.tim), this.config.longPollID = function(e) {
                                return {
                                    create: {},
                                    query: {
                                        serverName: Cf.NAME.OPEN_IM,
                                        cmd: Cf.CMD.GET_LONG_POLL_ID,
                                        channel: Cf.CHANNEL.XHR,
                                        protocol: yf,
                                        queryString: Fn(Fn({}, Dy(e)), {}, {
                                            instanceid: e.context.instanceID,
                                            reqtime: +new Date() / 1e3
                                        }),
                                        requestData: {},
                                        keyMaps: {
                                            response: {
                                                LongPollingId: "longPollingID"
                                            }
                                        }
                                    },
                                    update: {},
                                    delete: {}
                                };
                            }(this.tim), this.config.longPoll = function(e) {
                                var t = Fn(Fn({}, Dy(e)), {}, {
                                    instanceid: e.context.instanceID,
                                    reqtime: Math.ceil(+new Date() / 1e3)
                                });
                                return {
                                    create: {},
                                    query: {
                                        serverName: Cf.NAME.OPEN_IM,
                                        cmd: Cf.CMD.LONG_POLL,
                                        channel: Cf.CHANNEL.AUTO,
                                        protocol: yf,
                                        queryString: t,
                                        requestData: {
                                            timeout: null,
                                            cookie: {
                                                notifySeq: 0,
                                                noticeSeq: 0,
                                                longPollingID: 0
                                            }
                                        },
                                        keyMaps: {
                                            response: {
                                                C2cMsgArray: "C2CMessageArray",
                                                GroupMsgArray: "groupMessageArray",
                                                GroupTips: "groupTips",
                                                C2cNotifyMsgArray: "C2CNotifyMessageArray",
                                                ClientSeq: "clientSequence",
                                                MsgPriority: "priority",
                                                NoticeSeq: "noticeSequence",
                                                MsgContent: "content",
                                                MsgType: "type",
                                                MsgBody: "elements",
                                                ToGroupId: "to",
                                                Desc: "description",
                                                Ext: "extension"
                                            }
                                        }
                                    },
                                    update: {},
                                    delete: {}
                                };
                            }(this.tim), this.config.applyC2C = function(e) {
                                var t = Dy(e), n = {
                                    serverName: Cf.NAME.FRIEND,
                                    channel: Cf.CHANNEL.XHR,
                                    protocol: yf,
                                    queryString: t
                                };
                                return {
                                    create: Fn(Fn({}, n), {}, {
                                        cmd: Cf.CMD.FRIEND_ADD,
                                        requestData: {
                                            fromAccount: "",
                                            addFriendItem: []
                                        }
                                    }),
                                    get: Fn(Fn({}, n), {}, {
                                        cmd: Cf.CMD.GET_PENDENCY,
                                        requestData: {
                                            fromAccount: "",
                                            pendencyType: "Pendency_Type_ComeIn"
                                        }
                                    }),
                                    update: Fn(Fn({}, n), {}, {
                                        cmd: Cf.CMD.RESPONSE_PENDENCY,
                                        requestData: {
                                            fromAccount: "",
                                            responseFriendItem: []
                                        }
                                    }),
                                    delete: Fn(Fn({}, n), {}, {
                                        cmd: Cf.CMD.DELETE_PENDENCY,
                                        requestData: {
                                            fromAccount: "",
                                            toAccount: [],
                                            pendencyType: "Pendency_Type_ComeIn"
                                        }
                                    })
                                };
                            }(this.tim), this.config.friend = function(e) {
                                var t = Fn(Fn({}, Dy(e)), {}, {
                                    reqtime: function() {
                                        return +new Date();
                                    }
                                }), n = {
                                    serverName: Cf.NAME.FRIEND,
                                    channel: Cf.CHANNEL.XHR,
                                    protocol: yf,
                                    method: "POST",
                                    queryString: t
                                };
                                return {
                                    get: Fn(Fn({}, n), {}, {
                                        cmd: Cf.CMD.FRIEND_GET_ALL,
                                        requestData: {
                                            fromAccount: "",
                                            timeStamp: 0,
                                            tagList: [ Mp.NICK, "Tag_SNS_IM_Remark", Mp.AVATAR ]
                                        },
                                        keyMaps: {
                                            request: {},
                                            response: {}
                                        }
                                    }),
                                    delete: Fn(Fn({}, n), {}, {
                                        cmd: Cf.CMD.FRIEND_DELETE,
                                        requestData: {
                                            fromAccount: "",
                                            toAccount: [],
                                            deleteType: "Delete_Type_Single"
                                        }
                                    })
                                };
                            }(this.tim), this.config.blacklist = function(e) {
                                var t = Dy(e), n = {
                                    serverName: Cf.NAME.FRIEND,
                                    channel: Cf.CHANNEL.XHR,
                                    protocol: yf,
                                    method: "POST",
                                    queryString: t
                                };
                                return {
                                    create: Fn(Fn({}, n), {}, {
                                        cmd: Cf.CMD.ADD_BLACKLIST,
                                        requestData: {
                                            fromAccount: "",
                                            toAccount: []
                                        }
                                    }),
                                    get: Fn(Fn({}, n), {}, {
                                        cmd: Cf.CMD.GET_BLACKLIST,
                                        requestData: {
                                            fromAccount: "",
                                            startIndex: 0,
                                            maxLimited: 30,
                                            lastSequence: 0
                                        }
                                    }),
                                    delete: Fn(Fn({}, n), {}, {
                                        cmd: Cf.CMD.DELETE_BLACKLIST,
                                        requestData: {
                                            fromAccount: "",
                                            toAccount: []
                                        }
                                    }),
                                    update: {}
                                };
                            }(this.tim), this.config.c2cMessage = function(e) {
                                var t = Fn(Fn({}, Dy(e)), {}, {
                                    reqtime: function() {
                                        return +new Date();
                                    }
                                }), n = {
                                    request: {
                                        fromAccount: "From_Account",
                                        toAccount: "To_Account",
                                        msgTimeStamp: "MsgTimeStamp",
                                        msgSeq: "MsgSeq",
                                        msgRandom: "MsgRandom",
                                        msgBody: "MsgBody",
                                        count: "MaxCnt",
                                        lastMessageTime: "LastMsgTime",
                                        messageKey: "MsgKey",
                                        peerAccount: "Peer_Account",
                                        data: "Data",
                                        description: "Desc",
                                        extension: "Ext",
                                        type: "MsgType",
                                        content: "MsgContent",
                                        sizeType: "Type",
                                        uuid: "UUID",
                                        imageUrl: "URL",
                                        fileUrl: "Url",
                                        remoteAudioUrl: "Url",
                                        remoteVideoUrl: "VideoUrl",
                                        thumbUUID: "ThumbUUID",
                                        videoUUID: "VideoUUID",
                                        videoUrl: "",
                                        downloadFlag: "Download_Flag"
                                    },
                                    response: {
                                        MsgContent: "content",
                                        MsgTime: "time",
                                        Data: "data",
                                        Desc: "description",
                                        Ext: "extension",
                                        MsgKey: "messageKey",
                                        MsgType: "type",
                                        MsgBody: "elements",
                                        Download_Flag: "downloadFlag",
                                        ThumbUUID: "thumbUUID",
                                        VideoUUID: "videoUUID"
                                    }
                                }, r = {
                                    serverName: Cf.NAME.OPEN_IM,
                                    channel: Cf.CHANNEL.XHR,
                                    protocol: yf,
                                    method: "POST",
                                    queryString: t
                                };
                                return {
                                    create: Fn(Fn({}, r), {}, {
                                        cmd: Cf.CMD.SEND_MESSAGE,
                                        requestData: {
                                            fromAccount: e.loginInfo.identifier,
                                            toAccount: "",
                                            msgTimeStamp: Math.ceil(+new Date() / 1e3),
                                            msgSeq: 0,
                                            msgRandom: 0,
                                            msgBody: [],
                                            msgLifeTime: void 0,
                                            offlinePushInfo: {
                                                pushFlag: 0,
                                                title: "",
                                                desc: "",
                                                ext: "",
                                                apnsInfo: {
                                                    badgeMode: 0
                                                },
                                                androidInfo: {
                                                    OPPOChannelID: ""
                                                }
                                            }
                                        },
                                        keyMaps: n
                                    }),
                                    query: Fn(Fn({}, r), {}, {
                                        cmd: Cf.CMD.GET_C2C_ROAM_MESSAGES,
                                        requestData: {
                                            peerAccount: "",
                                            count: 15,
                                            lastMessageTime: 0,
                                            messageKey: "",
                                            withRecalledMsg: 1
                                        },
                                        keyMaps: n
                                    })
                                };
                            }(this.tim), this.config.c2cMessageWillBeRevoked = function(e) {
                                var t = Fn(Fn({}, Dy(e)), {}, {
                                    reqtime: function() {
                                        return +new Date();
                                    }
                                });
                                return {
                                    create: {
                                        serverName: Cf.NAME.OPEN_IM,
                                        cmd: Cf.CMD.REVOKE_C2C_MESSAGE,
                                        channel: Cf.CHANNEL.XHR,
                                        protocol: yf,
                                        method: "POST",
                                        queryString: t,
                                        requestData: {
                                            msgInfo: {
                                                fromAccount: "",
                                                toAccount: "",
                                                msgTimeStamp: Math.ceil(+new Date() / 1e3),
                                                msgSeq: 0,
                                                msgRandom: 0
                                            }
                                        },
                                        keyMaps: {
                                            request: {
                                                msgInfo: "MsgInfo",
                                                fromAccount: "From_Account",
                                                toAccount: "To_Account",
                                                msgTimeStamp: "MsgTimeStamp",
                                                msgSeq: "MsgSeq",
                                                msgRandom: "MsgRandom",
                                                msgBody: "MsgBody"
                                            }
                                        }
                                    }
                                };
                            }(this.tim), this.config.c2cPeerReadTime = function(e) {
                                var t = Fn(Fn({}, Dy(e)), {}, {
                                    reqtime: function() {
                                        return +new Date();
                                    }
                                });
                                return {
                                    get: {
                                        serverName: Cf.NAME.OPEN_IM,
                                        cmd: Cf.CMD.GET_PEER_READ_TIME,
                                        channel: Cf.CHANNEL.XHR,
                                        protocol: yf,
                                        method: "POST",
                                        queryString: t,
                                        requestData: {
                                            userIDList: void 0
                                        },
                                        keyMaps: {
                                            request: {
                                                userIDList: "To_Account"
                                            },
                                            response: {
                                                ReadTime: "peerReadTimeList"
                                            }
                                        }
                                    }
                                };
                            }(this.tim), this.config.groupMessage = function(e) {
                                var t = Fn(Fn({}, Dy(e)), {}, {
                                    reqtime: function() {
                                        return +new Date();
                                    }
                                }), n = {
                                    request: {
                                        to: "GroupId",
                                        extension: "Ext",
                                        data: "Data",
                                        description: "Desc",
                                        random: "Random",
                                        sequence: "ReqMsgSeq",
                                        count: "ReqMsgNumber",
                                        type: "MsgType",
                                        priority: "MsgPriority",
                                        content: "MsgContent",
                                        elements: "MsgBody",
                                        sizeType: "Type",
                                        uuid: "UUID",
                                        imageUrl: "URL",
                                        fileUrl: "Url",
                                        remoteAudioUrl: "Url",
                                        remoteVideoUrl: "VideoUrl",
                                        thumbUUID: "ThumbUUID",
                                        videoUUID: "VideoUUID",
                                        videoUrl: "",
                                        downloadFlag: "Download_Flag",
                                        clientSequence: "ClientSeq"
                                    },
                                    response: {
                                        Random: "random",
                                        MsgTime: "time",
                                        MsgSeq: "sequence",
                                        ReqMsgSeq: "sequence",
                                        RspMsgList: "messageList",
                                        IsPlaceMsg: "isPlaceMessage",
                                        IsSystemMsg: "isSystemMessage",
                                        ToGroupId: "to",
                                        EnumFrom_AccountType: "fromAccountType",
                                        EnumTo_AccountType: "toAccountType",
                                        GroupCode: "groupCode",
                                        MsgPriority: "priority",
                                        MsgBody: "elements",
                                        MsgType: "type",
                                        MsgContent: "content",
                                        IsFinished: "complete",
                                        Download_Flag: "downloadFlag",
                                        ClientSeq: "clientSequence",
                                        ThumbUUID: "thumbUUID",
                                        VideoUUID: "videoUUID"
                                    }
                                }, r = {
                                    serverName: Cf.NAME.GROUP,
                                    channel: Cf.CHANNEL.XHR,
                                    protocol: yf,
                                    method: "POST",
                                    queryString: t
                                };
                                return {
                                    create: Fn(Fn({}, r), {}, {
                                        cmd: Cf.CMD.SEND_GROUP_MESSAGE,
                                        requestData: {
                                            groupID: "",
                                            fromAccount: e.loginInfo.identifier,
                                            random: 0,
                                            clientSequence: 0,
                                            priority: "",
                                            msgBody: [],
                                            onlineOnlyFlag: 0,
                                            offlinePushInfo: {
                                                pushFlag: 0,
                                                title: "",
                                                desc: "",
                                                ext: "",
                                                apnsInfo: {
                                                    badgeMode: 0
                                                },
                                                androidInfo: {
                                                    OPPOChannelID: ""
                                                }
                                            },
                                            groupAtInfo: []
                                        },
                                        keyMaps: n
                                    }),
                                    query: Fn(Fn({}, r), {}, {
                                        cmd: Cf.CMD.GET_GROUP_ROAM_MESSAGES,
                                        requestData: {
                                            withRecalledMsg: 1,
                                            groupID: "",
                                            count: 15,
                                            sequence: ""
                                        },
                                        keyMaps: n
                                    }),
                                    update: null,
                                    delete: null
                                };
                            }(this.tim), this.config.groupMessageWillBeRevoked = function(e) {
                                var t = Fn(Fn({}, Dy(e)), {}, {
                                    reqtime: function() {
                                        return +new Date();
                                    }
                                });
                                return {
                                    create: {
                                        serverName: Cf.NAME.GROUP,
                                        cmd: Cf.CMD.REVOKE_GROUP_MESSAGE,
                                        channel: Cf.CHANNEL.XHR,
                                        protocol: yf,
                                        method: "POST",
                                        queryString: t,
                                        requestData: {
                                            to: "",
                                            msgSeqList: []
                                        },
                                        keyMaps: {
                                            request: {
                                                to: "GroupId",
                                                msgSeqList: "MsgSeqList",
                                                msgSeq: "MsgSeq"
                                            }
                                        }
                                    }
                                };
                            }(this.tim), this.config.conversation = function(e) {
                                var t = Dy(e), n = {
                                    serverName: Cf.NAME.RECENT_CONTACT,
                                    channel: Cf.CHANNEL.XHR,
                                    protocol: yf,
                                    method: "POST",
                                    queryString: t
                                };
                                return {
                                    query: Fn(Fn({}, n), {}, {
                                        cmd: Cf.CMD.GET_CONVERSATION_LIST,
                                        requestData: {
                                            fromAccount: e.loginInfo.identifier,
                                            count: 0
                                        },
                                        keyMaps: {
                                            request: {},
                                            response: {
                                                SessionItem: "conversations",
                                                ToAccount: "groupID",
                                                To_Account: "userID",
                                                UnreadMsgCount: "unreadCount",
                                                MsgGroupReadedSeq: "messageReadSeq"
                                            }
                                        }
                                    }),
                                    pagingQuery: Fn(Fn({}, n), {}, {
                                        cmd: Cf.CMD.PAGING_GET_CONVERSATION_LIST,
                                        requestData: {
                                            fromAccount: void 0,
                                            timeStamp: void 0,
                                            orderType: void 0
                                        },
                                        keyMaps: {
                                            request: {},
                                            response: {
                                                SessionItem: "conversations",
                                                ToAccount: "groupID",
                                                To_Account: "userID",
                                                UnreadMsgCount: "unreadCount",
                                                MsgGroupReadedSeq: "messageReadSeq",
                                                C2cPeerReadTime: "c2cPeerReadTime"
                                            }
                                        }
                                    }),
                                    delete: Fn(Fn({}, n), {}, {
                                        cmd: Cf.CMD.DELETE_CONVERSATION,
                                        requestData: {
                                            fromAccount: e.loginInfo.identifier,
                                            toAccount: void 0,
                                            type: 1,
                                            toGroupID: void 0
                                        },
                                        keyMaps: {
                                            request: {
                                                toGroupID: "ToGroupid"
                                            }
                                        }
                                    }),
                                    setC2CMessageRead: Fn(Fn({}, n), {}, {
                                        serverName: Cf.NAME.OPEN_IM,
                                        cmd: Cf.CMD.SET_C2C_MESSAGE_READ,
                                        requestData: {
                                            C2CMsgReaded: void 0
                                        },
                                        keyMaps: {
                                            request: {
                                                lastMessageTime: "LastedMsgTime"
                                            }
                                        }
                                    }),
                                    setGroupMessageRead: Fn(Fn({}, n), {}, {
                                        serverName: Cf.NAME.GROUP,
                                        cmd: Cf.CMD.SET_GROUP_MESSAGE_READ,
                                        requestData: {
                                            groupID: void 0,
                                            messageReadSeq: void 0
                                        },
                                        keyMaps: {
                                            request: {
                                                messageReadSeq: "MsgReadedSeq"
                                            }
                                        }
                                    }),
                                    deleteGroupAtTips: Fn(Fn({}, n), {}, {
                                        serverName: Cf.NAME.OPEN_IM,
                                        cmd: Cf.CMD.DELETE_GROUP_AT_TIPS,
                                        requestData: {
                                            messageListToDelete: void 0
                                        },
                                        keyMaps: {
                                            request: {
                                                messageListToDelete: "DelMsgList",
                                                messageSeq: "MsgSeq",
                                                messageRandom: "MsgRandom"
                                            }
                                        }
                                    })
                                };
                            }(this.tim), this.config.syncMessage = function(e) {
                                var t = Fn(Fn({}, Dy(e)), {}, {
                                    reqtime: function() {
                                        return [ Math.ceil(+new Date()), Math.random() ].join("");
                                    }
                                });
                                return {
                                    create: null,
                                    query: {
                                        serverName: Cf.NAME.OPEN_IM,
                                        cmd: Cf.CMD.GET_MESSAGES,
                                        channel: Cf.CHANNEL.XHR,
                                        protocol: yf,
                                        method: "POST",
                                        queryString: t,
                                        requestData: {
                                            cookie: "",
                                            syncFlag: 0,
                                            needAbstract: 1
                                        },
                                        keyMaps: {
                                            request: {
                                                fromAccount: "From_Account",
                                                toAccount: "To_Account",
                                                from: "From_Account",
                                                to: "To_Account",
                                                time: "MsgTimeStamp",
                                                sequence: "MsgSeq",
                                                random: "MsgRandom",
                                                elements: "MsgBody"
                                            },
                                            response: {
                                                MsgList: "messageList",
                                                SyncFlag: "syncFlag",
                                                To_Account: "to",
                                                From_Account: "from",
                                                ClientSeq: "clientSequence",
                                                MsgSeq: "sequence",
                                                NoticeSeq: "noticeSequence",
                                                NotifySeq: "notifySequence",
                                                MsgRandom: "random",
                                                MsgTimeStamp: "time",
                                                MsgContent: "content",
                                                ToGroupId: "groupID",
                                                MsgKey: "messageKey",
                                                GroupTips: "groupTips",
                                                MsgBody: "elements",
                                                MsgType: "type",
                                                C2CRemainingUnreadCount: "C2CRemainingUnreadList"
                                            }
                                        }
                                    },
                                    update: null,
                                    delete: null
                                };
                            }(this.tim), this.config.AVChatRoom = function(e) {
                                var t = Cf.NAME.BIG_GROUP_LONG_POLLING_NO_AUTH, n = Fn(Fn({}, Dy(e)), {}, {
                                    accounttype: "792",
                                    reqtime: function() {
                                        return +new Date();
                                    }
                                });
                                return (e.context.login === Zc.IS_LOGIN || e.context.a2Key) && (t = Cf.NAME.BIG_GROUP_LONG_POLLING), 
                                {
                                    startLongPoll: {
                                        serverName: t,
                                        cmd: Cf.CMD.AVCHATROOM_LONG_POLL,
                                        channel: Cf.CHANNEL.XHR,
                                        protocol: yf,
                                        method: "POST",
                                        queryString: n,
                                        requestData: {
                                            USP: 1,
                                            startSeq: 1,
                                            holdTime: 90,
                                            key: void 0
                                        },
                                        keyMaps: {
                                            request: {
                                                USP: "USP"
                                            },
                                            response: {
                                                ToGroupId: "groupID",
                                                MsgPriority: "priority"
                                            }
                                        }
                                    }
                                };
                            }(this.tim), this.config.cosUpload = function(e) {
                                var t = Fn(Fn({}, Dy(e)), {}, {
                                    reqtime: function() {
                                        return +new Date();
                                    }
                                });
                                return {
                                    create: {
                                        serverName: Cf.NAME.OPEN_IM,
                                        cmd: Cf.CMD.FILE_UPLOAD,
                                        channel: Cf.CHANNEL.XHR,
                                        protocol: yf,
                                        method: "POST",
                                        queryString: t,
                                        requestData: {
                                            appVersion: "2.1",
                                            fromAccount: "",
                                            toAccount: "",
                                            sequence: 0,
                                            time: function() {
                                                return Math.ceil(Date.now() / 1e3);
                                            },
                                            random: function() {
                                                return $s();
                                            },
                                            fileStrMd5: "",
                                            fileSize: "",
                                            serverVer: 1,
                                            authKey: "",
                                            busiId: 1,
                                            pkgFlag: 1,
                                            sliceOffset: 0,
                                            sliceSize: 0,
                                            sliceData: "",
                                            contentType: "application/x-www-form-urlencoded"
                                        },
                                        keyMaps: {
                                            request: {},
                                            response: {}
                                        }
                                    },
                                    update: null,
                                    delete: null
                                };
                            }(this.tim), this.config.cosSig = function(e) {
                                var t = {
                                    sdkappid: e.loginInfo.SDKAppID,
                                    identifier: e.loginInfo.identifier,
                                    userSig: e.context.userSig
                                };
                                return {
                                    create: null,
                                    query: {
                                        serverName: Cf.NAME.IM_COS_SIGN,
                                        cmd: Cf.CMD.COS_SIGN,
                                        channel: Cf.CHANNEL.XHR,
                                        protocol: yf,
                                        method: "POST",
                                        queryString: t,
                                        requestData: {
                                            cmd: "open_im_cos_svc",
                                            subCmd: "get_cos_token",
                                            duration: 300,
                                            version: 2
                                        },
                                        keyMaps: {
                                            request: {
                                                userSig: "usersig",
                                                subCmd: "sub_cmd",
                                                cmd: "cmd",
                                                duration: "duration",
                                                version: "version"
                                            },
                                            response: {
                                                expired_time: "expiredTime",
                                                bucket_name: "bucketName",
                                                session_token: "sessionToken",
                                                tmp_secret_id: "secretId",
                                                tmp_secret_key: "secretKey"
                                            }
                                        }
                                    },
                                    update: null,
                                    delete: null
                                };
                            }(this.tim), this.config.bigDataHallwayAuthKey = function(e) {
                                return {
                                    create: null,
                                    query: {
                                        serverName: Cf.NAME.OPEN_IM,
                                        cmd: Cf.CMD.BIG_DATA_HALLWAY_AUTH_KEY,
                                        channel: Cf.CHANNEL.XHR,
                                        protocol: yf,
                                        method: "POST",
                                        queryString: Fn(Fn({}, Dy(e)), {}, {
                                            accounttype: "792",
                                            reqtime: function() {
                                                return +new Date();
                                            }
                                        }),
                                        requestData: {}
                                    }
                                };
                            }(this.tim), this.config.ssoEventStat = function(e) {
                                var t = {
                                    sdkappid: e.loginInfo.SDKAppID,
                                    reqtime: Math.ceil(+new Date() / 1e3)
                                };
                                return {
                                    create: {
                                        serverName: Cf.NAME.IM_OPEN_STAT,
                                        cmd: Cf.CMD.TIM_WEB_REPORT,
                                        channel: Cf.CHANNEL.AUTO,
                                        protocol: yf,
                                        queryString: t,
                                        requestData: {
                                            table: "",
                                            report: []
                                        },
                                        keyMaps: {
                                            request: {
                                                table: "table",
                                                report: "report",
                                                SDKAppID: "sdkappid",
                                                version: "version",
                                                tinyID: "tinyid",
                                                userID: "userid",
                                                platform: "platform",
                                                method: "method",
                                                time: "time",
                                                start: "start",
                                                end: "end",
                                                cost: "cost",
                                                status: "status",
                                                codeint: "codeint",
                                                message: "message",
                                                pointer: "pointer",
                                                text: "text",
                                                msgType: "msgtype",
                                                networkType: "networktype",
                                                startts: "startts",
                                                endts: "endts",
                                                timespan: "timespan"
                                            }
                                        }
                                    },
                                    query: {},
                                    update: {},
                                    delete: {}
                                };
                            }(this.tim), this.config.ssoSumStat = function(e) {
                                var t = null;
                                return null !== e.context && (t = {
                                    sdkappid: e.context.SDKAppID,
                                    reqtime: Math.ceil(+new Date() / 1e3)
                                }), {
                                    create: {
                                        serverName: Cf.NAME.IM_OPEN_STAT,
                                        cmd: Cf.CMD.TIM_WEB_REPORT,
                                        channel: Cf.CHANNEL.AUTO,
                                        protocol: yf,
                                        queryString: t,
                                        requestData: {
                                            table: "",
                                            report: []
                                        },
                                        keyMaps: {
                                            request: {
                                                table: "table",
                                                report: "report",
                                                SDKAppID: "sdkappid",
                                                version: "version",
                                                tinyID: "tinyid",
                                                userID: "userid",
                                                item: "item",
                                                lpID: "lpid",
                                                platform: "platform",
                                                scene: "scene",
                                                networkType: "networktype",
                                                total: "total",
                                                successRate: "successrate",
                                                avg: "avg",
                                                timespan: "timespan",
                                                time: "time"
                                            }
                                        }
                                    },
                                    query: {},
                                    update: {},
                                    delete: {}
                                };
                            }(this.tim);
                        }
                    }, {
                        key: "_initRequestData",
                        value: function(e, t) {
                            if (void 0 === e) return Id(t.requestData, this._getRequestMap(t), this.tim);
                            var n = t.requestData, r = Object.create(null);
                            for (var o in n) if (Object.prototype.hasOwnProperty.call(n, o)) {
                                if (r[o] = "function" == typeof n[o] ? n[o]() : n[o], void 0 === e[o]) continue;
                                r[o] = e[o];
                            }
                            return Id(r, this._getRequestMap(t), this.tim);
                        }
                    }, {
                        key: "_getRequestMap",
                        value: function(e) {
                            if (e.keyMaps && e.keyMaps.request && Object.keys(e.keyMaps.request).length > 0) return e.keyMaps.request;
                        }
                    }, {
                        key: "_initEncoder",
                        value: function(e) {
                            switch (e.protocol) {
                              case yf:
                                return function(e) {
                                    if ("string" === On(e)) try {
                                        return JSON.parse(e);
                                    } catch (f_) {
                                        return e;
                                    }
                                    return e;
                                };

                              case vf:
                                return function(e) {
                                    return e;
                                };

                              default:
                                return function(e) {
                                    return Cs.warn("PackageConfig._initEncoder(), unknow response type, data: ", JSON.stringify(e)), 
                                    e;
                                };
                            }
                        }
                    }, {
                        key: "_initDecoder",
                        value: function(e) {
                            switch (e.protocol) {
                              case yf:
                                return function(e) {
                                    if ("string" === On(e)) try {
                                        return JSON.parse(e);
                                    } catch (f_) {
                                        return e;
                                    }
                                    return e;
                                };

                              case vf:
                                return function(e) {
                                    return e;
                                };

                              default:
                                return function(e) {
                                    return Cs.warn("PackageConfig._initDecoder(), unknow response type, data: ", e), 
                                    e;
                                };
                            }
                        }
                    } ]), e;
                }(), Oy = Math.floor;
                Oe({
                    target: "Number",
                    stat: !0
                }, {
                    isInteger: function(e) {
                        return !v(e) && isFinite(e) && Oy(e) === e;
                    }
                });
                var Ly = function() {
                    for (var e = [], t = Ry(arguments), n = 0; n < arguments.length; n++) Number.isInteger(arguments[n]) ? e.push(arguments[n]) : e.push(1 == !!arguments[n] ? "1" : "0");
                    return e.join(t);
                }, Ry = function(e) {
                    var t = e.length, n = e[t - 1];
                    if ("string" != typeof n) return "";
                    if (n.length > 1) return "";
                    var r = e[t - 1];
                    return delete e[t - 1], e.length -= t === e.length ? 1 : 0, r;
                }, Py = {
                    C2CMessageArray: 1,
                    groupMessageArray: 1,
                    groupTips: 1,
                    C2CNotifyMessageArray: 1,
                    profileModify: 1,
                    friendListMod: 1
                }, Ny = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n(e) {
                        var r;
                        return Ln(this, n), (r = t.call(this, e))._initialization(), r;
                    }
                    return Pn(n, [ {
                        key: "_initialization",
                        value: function() {
                            this._syncOffset = "", this._syncNoticeList = [], this._syncEventArray = [], this._syncMessagesIsRunning = !1, 
                            this._syncMessagesFinished = !1, this._isLongPoll = !1, this._longPollID = "0", 
                            this._noticeSequence = 0, this._initializeListener(), this._runLoop = null, this._initShuntChannels();
                        }
                    }, {
                        key: "_initShuntChannels",
                        value: function() {
                            this._shuntChannels = Object.create(null), this._shuntChannels.C2CMessageArray = this._C2CMessageArrayChannel.bind(this), 
                            this._shuntChannels.groupMessageArray = this._groupMessageArrayChannel.bind(this), 
                            this._shuntChannels.groupTips = this._groupTipsChannel.bind(this), this._shuntChannels.C2CNotifyMessageArray = this._C2CNotifyMessageArrayChannel.bind(this), 
                            this._shuntChannels.profileModify = this._profileModifyChannel.bind(this), this._shuntChannels.friendListMod = this._friendListModChannel.bind(this);
                        }
                    }, {
                        key: "_C2CMessageArrayChannel",
                        value: function(e, t, n) {
                            this.emitInnerEvent(Vf, t);
                        }
                    }, {
                        key: "_groupMessageArrayChannel",
                        value: function(e, t, n) {
                            this.emitInnerEvent(Bf, t);
                        }
                    }, {
                        key: "_groupTipsChannel",
                        value: function(e, t, n) {
                            var r = this;
                            switch (e) {
                              case 4:
                              case 6:
                                this.emitInnerEvent(Hf, t);
                                break;

                              case 5:
                                t.forEach(function(e) {
                                    ws(e.elements.revokedInfos) ? r.emitInnerEvent(Jf, t) : r.emitInnerEvent(zf, {
                                        groupSystemNotices: t,
                                        type: n
                                    });
                                });
                                break;

                              case 12:
                                this.emitInnerEvent(Kf, t);
                                break;

                              default:
                                Cs.log("NotificationController._groupTipsChannel unknown event=".concat(e, " type=").concat(n), t);
                            }
                        }
                    }, {
                        key: "_C2CNotifyMessageArrayChannel",
                        value: function(e, t, n) {
                            if (t[0]) {
                                var r = t[0];
                                r.hasOwnProperty("kickoutMsgNotify") ? this.emitInnerEvent($f) : r.hasOwnProperty("c2cMessageRevokedNotify") ? this.emitInnerEvent(Xf, t) : r.hasOwnProperty("c2cMessageReadReceipt") && this.emitInnerEvent(Qf, t);
                            }
                        }
                    }, {
                        key: "_profileModifyChannel",
                        value: function(e, t, n) {
                            this.emitInnerEvent(Yf, t);
                        }
                    }, {
                        key: "_friendListModChannel",
                        value: function(e, t, n) {
                            this.emitInnerEvent(Wf, t);
                        }
                    }, {
                        key: "_dispatchNotice",
                        value: function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "poll";
                            if (ws(e)) for (var n = null, r = null, o = "", i = 0, a = 0, s = e.length; a < s; a++) i = (n = e[a]).event, 
                            o = Object.keys(n).find(function(e) {
                                return void 0 !== Py[e];
                            }), Os(this._shuntChannels[o]) ? (r = n[o], "poll" === t && this._updatenoticeSequence(r), 
                            this._shuntChannels[o](i, r, t)) : ("poll" === t && this._updatenoticeSequence(), 
                            Cs.log("NotificationController._dispatchNotice unknown eventItem=", n));
                        }
                    }, {
                        key: "getLongPollID",
                        value: function() {
                            return this._longPollID;
                        }
                    }, {
                        key: "_IAmReady",
                        value: function() {
                            this.triggerReady();
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            this._noticeSequence = 0, this._resetSync(), this.closeNoticeChannel();
                        }
                    }, {
                        key: "_resetSync",
                        value: function() {
                            this._syncOffset = "", this._syncNoticeList = [], this._syncEventArray = [], this._syncMessagesIsRunning = !1, 
                            this._syncMessagesFinished = !1;
                        }
                    }, {
                        key: "_setNoticeSeqInRequestData",
                        value: function(e) {
                            e.Cookie.NoticeSeq = this._noticeSequence, this.tim.sumStatController.addTotalCount(Fd);
                        }
                    }, {
                        key: "_updatenoticeSequence",
                        value: function(e) {
                            if (e) {
                                var t = e[e.length - 1].noticeSequence;
                                t && "number" == typeof t ? t <= this._noticeSequence || (this._noticeSequence = t) : this._noticeSequence++;
                            } else this._noticeSequence++;
                        }
                    }, {
                        key: "_initializeListener",
                        value: function() {
                            var e = this.tim.innerEmitter;
                            e.on(bf, this._startSyncMessages, this), e.on(od, this.closeNoticeChannel, this);
                        }
                    }, {
                        key: "openNoticeChannel",
                        value: function() {
                            Cs.log("NotificationController.openNoticeChannel"), this._getLongPollID();
                        }
                    }, {
                        key: "closeNoticeChannel",
                        value: function() {
                            Cs.log("NotificationController.closeNoticeChannel"), (this._runLoop instanceof Iv || this._runLoop instanceof Mv) && (this._runLoop.abort(), 
                            this._runLoop.stop()), this._longPollID = "0", this._isLongPoll = !1;
                        }
                    }, {
                        key: "_getLongPollID",
                        value: function() {
                            var e = this;
                            if ("0" === this._longPollID) {
                                var t = new Xd(Bg);
                                this.request({
                                    name: "longPollID",
                                    action: "query"
                                }).then(function(n) {
                                    var r = n.data.longPollingID;
                                    e._onGetLongPollIDSuccess(r), t.setText("longPollingID=".concat(r)).setNetworkType(e.getNetworkType()).setEnd();
                                }).catch(function(n) {
                                    var r = new Vp({
                                        code: n.code || Bp.GET_LONGPOLL_ID_FAILED,
                                        message: n.message || zh
                                    });
                                    e.emitInnerEvent(Ff), e.emitInnerEvent(ad, r), e.probeNetwork().then(function(e) {
                                        var n = Yn(e, 2), o = n[0], i = n[1];
                                        t.setError(r, o, i).setEnd();
                                    });
                                });
                            } else this._onGetLongPollIDSuccess(this._longPollID);
                        }
                    }, {
                        key: "_onGetLongPollIDSuccess",
                        value: function(e) {
                            this.emitInnerEvent(xf, [ {
                                key: "long_poll_logout.query.requestData.longPollingID",
                                value: e
                            }, {
                                key: "longPoll.query.requestData.cookie.longPollingID",
                                value: e
                            } ]), this._longPollID = e, this._startLongPoll(), this._IAmReady(), this.tim.sumStatController.recordLongPollingID(this._longPollID);
                        }
                    }, {
                        key: "_startLongPoll",
                        value: function() {
                            if (!0 !== this._isLongPoll) {
                                Cs.log("NotificationController._startLongPoll...");
                                var e = this.tim.connectionController, t = this.createTransportCapsule({
                                    name: "longPoll",
                                    action: "query"
                                });
                                this._isLongPoll = !0, this._runLoop = e.createRunLoop({
                                    pack: t,
                                    before: this._setNoticeSeqInRequestData.bind(this),
                                    success: this._onNoticeReceived.bind(this),
                                    fail: this._onNoticeFail.bind(this)
                                }), this._runLoop.start();
                            } else Cs.log("NotificationController._startLongPoll is running...");
                        }
                    }, {
                        key: "_onNoticeReceived",
                        value: function(e) {
                            var t = e.data;
                            t.errorCode !== Qc.SUCCESS ? (new Xd(Hg).setMessage(t.errorInfo || JSON.stringify(t)).setCode(t.errorCode).setNetworkType(this.getNetworkType()).setEnd(!0), 
                            this._onResponseError(t)) : this.emitInnerEvent(qf), this.tim.sumStatController.addSuccessCount(Fd), 
                            this.tim.sumStatController.addCost(Fd, t.timecost), e.data.eventArray && this._dispatchNotice(e.data.eventArray);
                        }
                    }, {
                        key: "_onResponseError",
                        value: function(e) {
                            switch (e.errorCode) {
                              case Bp.LONG_POLL_KICK_OUT:
                                Cs.warn("NotificationController._onResponseError, longPollingID=".concat(this._longPollID, " was kicked out")), 
                                this.emitInnerEvent(jf), this.closeNoticeChannel();
                                break;

                              case Bp.MESSAGE_A2KEY_EXPIRED:
                              case Bp.ACCOUNT_A2KEY_EXPIRED:
                                this.emitInnerEvent(id);
                                break;

                              default:
                                Ds(e.errorCode) || Ds(e.errorInfo) ? Cs.log("NotificationController._onResponseError, errorCode or errorInfo undefined!", e) : this.emitInnerEvent(ad, new Vp({
                                    code: e.errorCode,
                                    message: e.errorInfo
                                }));
                            }
                        }
                    }, {
                        key: "_onNoticeFail",
                        value: function(e) {
                            if (e.error) if ("ECONNABORTED" === e.error.code || e.error.code === Bp.NETWORK_TIMEOUT) if (e.error.config) {
                                var t = e.error.config.url, n = e.error.config.data;
                                Cs.log("NotificationController._onNoticeFail request timed out. url=".concat(t, " data=").concat(n));
                            } else Cs.log("NotificationController._onNoticeFail request timed out."); else Cs.log("NotificationController._onNoticeFail request failed due to network error");
                            this.emitInnerEvent(Uf);
                        }
                    }, {
                        key: "_startSyncMessages",
                        value: function(e) {
                            !0 !== this._syncMessagesFinished && this.syncMessage();
                        }
                    }, {
                        key: "syncMessage",
                        value: function() {
                            var e = this, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                            this._syncMessagesIsRunning = !0, this.request({
                                name: "syncMessage",
                                action: "query",
                                param: {
                                    cookie: t,
                                    syncFlag: n
                                }
                            }).then(function(t) {
                                var n = t.data;
                                switch (Ly(n.cookie, n.syncFlag)) {
                                  case "00":
                                  case "01":
                                    e.emitInnerEvent(ad, {
                                        code: Bp.NOTICE_RUNLOOP_OFFSET_LOST,
                                        message: Kh
                                    });
                                    break;

                                  case "10":
                                  case "11":
                                    n.eventArray && e._dispatchNotice(n.eventArray, "sync"), e._syncNoticeList = e._syncNoticeList.concat(n.messageList), 
                                    e.emitInnerEvent(wf, {
                                        data: n.messageList,
                                        C2CRemainingUnreadList: n.C2CRemainingUnreadList
                                    }), e._syncOffset = n.cookie, e.syncMessage(n.cookie, n.syncFlag);
                                    break;

                                  case "12":
                                    n.eventArray && e._dispatchNotice(n.eventArray, "sync"), e.openNoticeChannel(), 
                                    e._syncNoticeList = e._syncNoticeList.concat(n.messageList), e.emitInnerEvent(Df, {
                                        messageList: n.messageList,
                                        C2CRemainingUnreadList: n.C2CRemainingUnreadList
                                    }), e._syncOffset = n.cookie, e._syncNoticeList = [], e._syncMessagesIsRunning = !1, 
                                    e._syncMessagesFinished = !0;
                                }
                            }).catch(function(t) {
                                e._syncMessagesIsRunning = !1, Cs.error("NotificationController.syncMessage failed. error:", t);
                            });
                        }
                    } ]), n;
                }(xd), Gy = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n(e) {
                        var r;
                        return Ln(this, n), (r = t.call(this, e)).COSSDK = null, r._cosUploadMethod = null, 
                        r.expiredTimeLimit = 600, r.appid = 0, r.bucketName = "", r.ciUrl = "", r.directory = "", 
                        r.downloadUrl = "", r.uploadUrl = "", r.expiredTimeOut = r.expiredTimeLimit, r.region = "ap-shanghai", 
                        r.cos = null, r.cosOptions = {
                            secretId: "",
                            secretKey: "",
                            sessionToken: "",
                            expiredTime: 0
                        }, r._timer = 0, r.tim.innerEmitter.on(bf, r._init, Kn(r)), r.triggerReady(), r;
                    }
                    return Pn(n, [ {
                        key: "_expiredTimer",
                        value: function() {
                            var e = this;
                            this._timer = setInterval(function() {
                                Math.ceil(Date.now() / 1e3) >= e.cosOptions.expiredTime - 120 && (e._getAuthorizationKey(), 
                                clearInterval(e._timer));
                            }, 6e4);
                        }
                    }, {
                        key: "_init",
                        value: function() {
                            var e = Ka ? "cos-wx-sdk" : "cos-js-sdk";
                            this.COSSDK = this.tim.getPlugin(e), this.COSSDK ? this._getAuthorizationKey() : Cs.warn("UploadController._init 没有检测到上传插件，将无法发送图片、音频、视频、文件等类型的消息。详细请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#registerPlugin");
                        }
                    }, {
                        key: "_getAuthorizationKey",
                        value: function() {
                            var e = this, t = Math.ceil(Date.now() / 1e3), n = new Xd(ig);
                            this.request({
                                name: "cosSig",
                                action: "query",
                                param: {
                                    duration: this.expiredTimeLimit
                                }
                            }).then(function(r) {
                                Cs.log("UploadController._getAuthorizationKey ok. data:", r.data);
                                var o = r.data, i = o.expiredTime - t;
                                n.setText("requestId=".concat(o.requestId, " requestTime=").concat(t, " expiredTime=").concat(o.expiredTime, " timeout=").concat(i, "s")).setNetworkType(e.getNetworkType()).setEnd(), 
                                !Ka && o.region && (e.region = o.region), e.appid = o.appid, e.bucketName = o.bucketName, 
                                e.ciUrl = o.ciUrl, e.directory = o.directory, e.downloadUrl = o.downloadUrl, e.uploadUrl = o.uploadUrl, 
                                e.expiredTimeOut = i, e.cosOptions = {
                                    secretId: o.secretId,
                                    secretKey: o.secretKey,
                                    sessionToken: o.sessionToken,
                                    expiredTime: o.expiredTime
                                }, Cs.log("UploadController._getAuthorizationKey cos.config:", "region=".concat(e.region, ",bucketName=").concat(e.bucketName)), 
                                e._initUploaderMethod(), e._expiredTimer();
                            }).catch(function(t) {
                                e.probeNetwork().then(function(e) {
                                    var r = Yn(e, 2), o = r[0], i = r[1];
                                    n.setError(t, o, i).setEnd();
                                }), Cs.warn("UploadController._getAuthorizationKey failed. error:", t);
                            });
                        }
                    }, {
                        key: "_initUploaderMethod",
                        value: function() {
                            var e = this;
                            this.appid && (this.cos = Ka ? new this.COSSDK({
                                ForcePathStyle: !0,
                                getAuthorization: this._getAuthorization.bind(this)
                            }) : new this.COSSDK({
                                getAuthorization: this._getAuthorization.bind(this)
                            }), this._cosUploadMethod = Ka ? function(t, n) {
                                e.cos.postObject(t, n);
                            } : function(t, n) {
                                e.cos.uploadFiles(t, n);
                            });
                        }
                    }, {
                        key: "_getAuthorization",
                        value: function(e, t) {
                            t({
                                TmpSecretId: this.cosOptions.secretId,
                                TmpSecretKey: this.cosOptions.secretKey,
                                XCosSecurityToken: this.cosOptions.sessionToken,
                                ExpiredTime: this.cosOptions.expiredTime
                            });
                        }
                    }, {
                        key: "uploadImage",
                        value: function(e) {
                            if (!e.file) return Pd(new Vp({
                                code: Bp.MESSAGE_IMAGE_SELECT_FILE_FIRST,
                                message: ah
                            }));
                            var t = this._checkImageType(e.file);
                            if (!0 !== t) return t;
                            var n = this._checkImageMime(e.file);
                            if (!0 !== n) return n;
                            var r = this._checkImageSize(e.file);
                            if (!0 !== r) return r;
                            var o = null;
                            return this.upload(e).then(function(e) {
                                return o = e, t = "https://".concat(e.location), Ka ? new Promise(function(e, n) {
                                    za.getImageInfo({
                                        src: t,
                                        success: function(t) {
                                            e({
                                                width: t.width,
                                                height: t.height
                                            });
                                        },
                                        fail: function() {
                                            e({
                                                width: 0,
                                                height: 0
                                            });
                                        }
                                    });
                                }) : rs && 9 === os ? Promise.resolve({
                                    width: 0,
                                    height: 0
                                }) : new Promise(function(e, n) {
                                    var r = new Image();
                                    r.onload = function() {
                                        e({
                                            width: this.width,
                                            height: this.height
                                        }), r = null;
                                    }, r.onerror = function() {
                                        e({
                                            width: 0,
                                            height: 0
                                        }), r = null;
                                    }, r.src = t;
                                });
                                var t;
                            }).then(function(e) {
                                return o.width = e.width, o.height = e.height, Promise.resolve(o);
                            });
                        }
                    }, {
                        key: "_checkImageType",
                        value: function(e) {
                            var t = "";
                            return t = Ka ? e.url.slice(e.url.lastIndexOf(".") + 1) : e.files[0].name.slice(e.files[0].name.lastIndexOf(".") + 1), 
                            Jh.indexOf(t.toLowerCase()) >= 0 || Pd(new Vp({
                                coe: Bp.MESSAGE_IMAGE_TYPES_LIMIT,
                                message: sh
                            }));
                        }
                    }, {
                        key: "_checkImageMime",
                        value: function(e) {
                            return !0;
                        }
                    }, {
                        key: "_checkImageSize",
                        value: function(e) {
                            var t = 0;
                            return 0 === (t = Ka ? e.size : e.files[0].size) ? Pd(new Vp({
                                code: Bp.MESSAGE_FILE_IS_EMPTY,
                                message: "".concat(rh)
                            })) : t < 20971520 || Pd(new Vp({
                                coe: Bp.MESSAGE_IMAGE_SIZE_LIMIT,
                                message: "".concat(ch)
                            }));
                        }
                    }, {
                        key: "uploadFile",
                        value: function(e) {
                            var t = null;
                            return e.file ? e.file.files[0].size > 104857600 ? (t = new Vp({
                                code: Bp.MESSAGE_FILE_SIZE_LIMIT,
                                message: mh
                            }), Pd(t)) : 0 === e.file.files[0].size ? (t = new Vp({
                                code: Bp.MESSAGE_FILE_IS_EMPTY,
                                message: "".concat(rh)
                            }), Pd(t)) : this.upload(e) : (t = new Vp({
                                code: Bp.MESSAGE_FILE_SELECT_FILE_FIRST,
                                message: gh
                            }), Pd(t));
                        }
                    }, {
                        key: "uploadVideo",
                        value: function(e) {
                            return e.file.videoFile.size > 104857600 ? Pd(new Vp({
                                code: Bp.MESSAGE_VIDEO_SIZE_LIMIT,
                                message: "".concat(hh)
                            })) : 0 === e.file.videoFile.size ? Pd(new Vp({
                                code: Bp.MESSAGE_FILE_IS_EMPTY,
                                message: "".concat(rh)
                            })) : -1 === Xh.indexOf(e.file.videoFile.type) ? Pd(new Vp({
                                code: Bp.MESSAGE_VIDEO_TYPES_LIMIT,
                                message: "".concat(fh)
                            })) : Ka ? this.handleVideoUpload({
                                file: e.file.videoFile
                            }) : qa ? this.handleVideoUpload(e) : void 0;
                        }
                    }, {
                        key: "handleVideoUpload",
                        value: function(e) {
                            var t = this;
                            return new Promise(function(n, r) {
                                t.upload(e).then(function(e) {
                                    n(e);
                                }).catch(function() {
                                    t.upload(e).then(function(e) {
                                        n(e);
                                    }).catch(function() {
                                        r(new Vp({
                                            code: Bp.MESSAGE_VIDEO_UPLOAD_FAIL,
                                            message: ph
                                        }));
                                    });
                                });
                            });
                        }
                    }, {
                        key: "uploadAudio",
                        value: function(e) {
                            return e.file ? e.file.size > 20971520 ? Pd(new Vp({
                                code: Bp.MESSAGE_AUDIO_SIZE_LIMIT,
                                message: "".concat(lh)
                            })) : 0 === e.file.size ? Pd(new Vp({
                                code: Bp.MESSAGE_FILE_IS_EMPTY,
                                message: "".concat(rh)
                            })) : this.upload(e) : Pd(new Vp({
                                code: Bp.MESSAGE_AUDIO_UPLOAD_FAIL,
                                message: uh
                            }));
                        }
                    }, {
                        key: "upload",
                        value: function(e) {
                            var t = this;
                            if (!Os(this._cosUploadMethod)) return Cs.warn("UploadController.upload 没有检测到上传插件，将无法发送图片、音频、视频、文件等类型的消息。详细请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#registerPlugin"), 
                            Pd(new Vp({
                                code: Bp.COS_UNDETECTED,
                                message: Qp
                            }));
                            var n = new Xd(ag);
                            Cs.time(Jd);
                            var r = Ka ? e.file : e.file.files[0];
                            return new Promise(function(o, i) {
                                var a = Ka ? t._createCosOptionsWXMiniApp(e) : t._createCosOptionsWeb(e), s = t;
                                t._cosUploadMethod(a, function(e, a) {
                                    var c = Object.create(null);
                                    if (a) {
                                        if (e || ws(a.files) && a.files[0].error) {
                                            var u = new Vp({
                                                code: Bp.MESSAGE_FILE_UPLOAD_FAIL,
                                                message: dh
                                            });
                                            return n.setError(u, !0, t.getNetworkType()).setEnd(), Cs.log("UploadController.upload failed, error:", a.files[0].error), 
                                            403 === a.files[0].error.statusCode && (Cs.warn("UploadController.upload failed. cos AccessKeyId was invalid, regain auth key!"), 
                                            t._getAuthorizationKey()), void i(u);
                                        }
                                        c.fileName = r.name, c.fileSize = r.size, c.fileType = r.type.slice(r.type.indexOf("/") + 1).toLowerCase(), 
                                        c.location = Ka ? a.Location : a.files[0].data.Location;
                                        var l = Cs.timeEnd(Jd), p = s._formatFileSize(r.size), h = s._formatSpeed(1e3 * r.size / l), f = "size=".concat(p, ",time=").concat(l, "ms,speed=").concat(h);
                                        return Cs.log("UploadController.upload success name=".concat(r.name, ",").concat(f)), 
                                        o(c), void n.setNetworkType(t.getNetworkType()).setText(f).setEnd();
                                    }
                                    var d = new Vp({
                                        code: Bp.MESSAGE_FILE_UPLOAD_FAIL,
                                        message: dh
                                    });
                                    n.setError(d, !0, s.getNetworkType()).setEnd(), Cs.warn("UploadController.upload failed, error:", e), 
                                    403 === e.statusCode && (Cs.warn("UploadController.upload failed. cos AccessKeyId was invalid, regain auth key!"), 
                                    t._getAuthorizationKey()), i(d);
                                });
                            });
                        }
                    }, {
                        key: "_formatFileSize",
                        value: function(e) {
                            return e < 1024 ? e + "B" : e < 1048576 ? Math.floor(e / 1024) + "KB" : Math.floor(e / 1048576) + "MB";
                        }
                    }, {
                        key: "_formatSpeed",
                        value: function(e) {
                            return e <= 1048576 ? (e / 1024).toFixed(1) + "KB/s" : (e / 1048576).toFixed(1) + "MB/s";
                        }
                    }, {
                        key: "_createCosOptionsWeb",
                        value: function(e) {
                            var t = this.tim.context.identifier, n = this._genFileName(t, e.to, e.file.files[0].name);
                            return {
                                files: [ {
                                    Bucket: "".concat(this.bucketName, "-").concat(this.appid),
                                    Region: this.region,
                                    Key: "".concat(this.directory, "/").concat(n),
                                    Body: e.file.files[0]
                                } ],
                                SliceSize: 1048576,
                                onProgress: function(t) {
                                    if ("function" == typeof e.onProgress) try {
                                        e.onProgress(t.percent);
                                    } catch (n) {
                                        Cs.warn("onProgress callback error:", n), Cs.error(n);
                                    }
                                },
                                onFileFinish: function(e, t, n) {}
                            };
                        }
                    }, {
                        key: "_createCosOptionsWXMiniApp",
                        value: function(e) {
                            var t = this.tim.context.identifier, n = this._genFileName(t, e.to, e.file.name), r = e.file.url;
                            return {
                                Bucket: "".concat(this.bucketName, "-").concat(this.appid),
                                Region: this.region,
                                Key: "".concat(this.directory, "/").concat(n),
                                FilePath: r,
                                onProgress: function(t) {
                                    if (Cs.log(JSON.stringify(t)), "function" == typeof e.onProgress) try {
                                        e.onProgress(t.percent);
                                    } catch (n) {
                                        Cs.warn("onProgress callback error:", n), Cs.error(n);
                                    }
                                }
                            };
                        }
                    }, {
                        key: "_genFileName",
                        value: function(e, t, n) {
                            return "".concat(e, "-").concat(t, "-").concat($s(99999), "-").concat(n);
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            this._timer && (clearInterval(this._timer), this._timer = 0);
                        }
                    } ]), n;
                }(xd), Fy = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n(e) {
                        var r;
                        return Ln(this, n), (r = t.call(this, e)).FILETYPE = {
                            SOUND: 2106,
                            FILE: 2107,
                            VIDEO: 2113
                        }, r._bdh_download_server = "grouptalk.c2c.qq.com", r._BDHBizID = 10001, r._authKey = "", 
                        r._expireTime = 0, r.tim.innerEmitter.on(bf, r._getAuthKey, Kn(r)), r;
                    }
                    return Pn(n, [ {
                        key: "_getAuthKey",
                        value: function() {
                            var e = this;
                            this.request({
                                name: "bigDataHallwayAuthKey",
                                action: "query"
                            }).then(function(t) {
                                t.data.authKey && (e._authKey = t.data.authKey, e._expireTime = parseInt(t.data.expireTime));
                            });
                        }
                    }, {
                        key: "_isFromOlderVersion",
                        value: function(e) {
                            return 2 !== e.content.downloadFlag;
                        }
                    }, {
                        key: "parseElements",
                        value: function(e, t) {
                            if (!ws(e) || !t) return [];
                            for (var n = [], r = null, o = 0; o < e.length; o++) r = e[o], this._needParse(r) ? n.push(this._parseElement(r, t)) : n.push(e[o]);
                            return n;
                        }
                    }, {
                        key: "_needParse",
                        value: function(e) {
                            return !(!this._isFromOlderVersion(e) || e.type !== Tn.MSG_AUDIO && e.type !== Tn.MSG_FILE && e.type !== Tn.MSG_VIDEO);
                        }
                    }, {
                        key: "_parseElement",
                        value: function(e, t) {
                            switch (e.type) {
                              case Tn.MSG_AUDIO:
                                return this._parseAudioElement(e, t);

                              case Tn.MSG_FILE:
                                return this._parseFileElement(e, t);

                              case Tn.MSG_VIDEO:
                                return this._parseVideoElement(e, t);
                            }
                        }
                    }, {
                        key: "_parseAudioElement",
                        value: function(e, t) {
                            return e.content.url = this._genAudioUrl(e.content.uuid, t), e;
                        }
                    }, {
                        key: "_parseFileElement",
                        value: function(e, t) {
                            return e.content.url = this._genFileUrl(e.content.uuid, t, e.content.fileName), 
                            e;
                        }
                    }, {
                        key: "_parseVideoElement",
                        value: function(e, t) {
                            return e.content.url = this._genVideoUrl(e.content.uuid, t), e;
                        }
                    }, {
                        key: "_genAudioUrl",
                        value: function(e, t) {
                            return "" === this._authKey ? (Cs.warn("BigDataHallwayController._genAudioUrl no authKey!"), 
                            "") : "https://".concat(this._bdh_download_server, "/asn.com/stddownload_common_file?authkey=").concat(this._authKey, "&bid=").concat(this._BDHBizID, "&subbid=").concat(this.tim.context.SDKAppID, "&fileid=").concat(e, "&filetype=").concat(this.FILETYPE.SOUND, "&openid=").concat(t, "&ver=0");
                        }
                    }, {
                        key: "_genFileUrl",
                        value: function(e, t, n) {
                            return "" === this._authKey ? (Cs.warn("BigDataHallwayController._genFileUrl no authKey!"), 
                            "") : (n || (n = "".concat(Math.floor(1e5 * Math.random()), "-").concat(Date.now())), 
                            "https://".concat(this._bdh_download_server, "/asn.com/stddownload_common_file?authkey=").concat(this._authKey, "&bid=").concat(this._BDHBizID, "&subbid=").concat(this.tim.context.SDKAppID, "&fileid=").concat(e, "&filetype=").concat(this.FILETYPE.FILE, "&openid=").concat(t, "&ver=0&filename=").concat(encodeURIComponent(n)));
                        }
                    }, {
                        key: "_genVideoUrl",
                        value: function(e, t) {
                            return "" === this._authKey ? (Cs.warn("BigDataHallwayController._genVideoUrl no authKey!"), 
                            "") : "https://".concat(this._bdh_download_server, "/asn.com/stddownload_common_file?authkey=").concat(this._authKey, "&bid=").concat(this._BDHBizID, "&subbid=").concat(this.tim.context.SDKAppID, "&fileid=").concat(e, "&filetype=").concat(this.FILETYPE.VIDEO, "&openid=").concat(t, "&ver=0");
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            this._authKey = "", this.expireTime = 0;
                        }
                    } ]), n;
                }(xd);
                function Uy(e) {
                    return window.localStorage ? localStorage.getItem(e) || sessionStorage.getItem(e) : (e = document.cookie.match(new RegExp("(?:^|;\\s)" + e + "=(.*?)(?:;\\s|$)"))) ? e[1] : "";
                }
                function qy(e, t, n) {
                    if (window.localStorage) try {
                        n ? localStorage.setItem(e, t) : sessionStorage.setItem(e, t);
                    } catch (o) {} else document.cookie = e + "=" + t + ";path=/;domain=" + function() {
                        var e = window.location.host, t = e.split(".");
                        return 2 < t.length && (e = ({
                            "com.cn": 1,
                            "js.cn": 1,
                            "net.cn": 1,
                            "gov.cn": 1,
                            "com.hk": 1,
                            "co.nz": 1
                        }[t.slice(-2).join(".")] ? t.slice(-3) : t.slice(-2)).join(".")), e;
                    }() + (n ? ";expires=" + n : "");
                }
                function jy(e, t) {
                    var n, r = {};
                    if (void 0 === t) var o = window.location, i = o.host, a = o.pathname, s = o.search.substr(1), c = o.hash; else i = (o = t.match(/\w+:\/\/((?:[\w-]+\.)+\w+)(?::\d+)?(\/[^\?\\"'\|:<>]*)?(?:\?([^'"\\<>#]*))?(?:#(\w+))?/i) || [])[1], 
                    a = o[2], s = o[3], c = o[4];
                    return void 0 !== c && (c = c.replace(/"|'|<|>/gi, "M")), s && function() {
                        for (var e = s.split("&"), t = 0, n = e.length; t < n; t++) if (-1 != e[t].indexOf("=")) {
                            var o = e[t].indexOf("="), i = e[t].slice(0, o);
                            o = e[t].slice(o + 1), r[i] = o;
                        }
                    }(), s = function() {
                        if (void 0 === s) return s;
                        for (var t = s.split("&"), n = [], r = 0, o = t.length; r < o; r++) if (-1 != t[r].indexOf("=")) {
                            var i = t[r].indexOf("="), a = t[r].slice(0, i);
                            i = t[r].slice(i + 1), e.ignoreParams && -1 != e.ignoreParams.indexOf(a) || n.push(a + "=" + i);
                        }
                        return n.join("&");
                    }(), c && function() {
                        for (var e = 0 == c.indexOf("#") ? c.substr(1).split("&") : c.split("&"), t = 0, r = e.length; t < r; t++) if (-1 != e[t].indexOf("=")) {
                            var o = e[t].indexOf("="), i = e[t].slice(0, o);
                            if (o = e[t].slice(o + 1), "adtag" === i.toLowerCase()) {
                                n = o;
                                break;
                            }
                        }
                    }(), {
                        host: i,
                        path: a,
                        search: s,
                        hash: c,
                        param: r,
                        adtag: n
                    };
                }
                function $y(e) {
                    var t, n = jy(e), r = {
                        dm: n.host,
                        pvi: "",
                        si: "",
                        url: n.path,
                        arg: encodeURIComponent(n.search || "").substr(0, 512),
                        ty: 0
                    };
                    return r.pvi = function() {
                        var t = new Date(new Date().getTime() + 63072e6).toGMTString();
                        if (e.userReport) {
                            var n = Uy("pgv_uid");
                            n && n == e.user.user_id || (r.ty = 1, qy("pgv_uid", e.user.user_id, t)), n = e.user.user_id;
                        } else (n = Uy("pgv_pvi")) || (r.ty = 1, qy("pgv_pvi", n = Vy(), t));
                        return n;
                    }(), r.si = ((t = Uy("pgv_si")) || qy("pgv_si", t = Vy("s")), t), r.url = function() {
                        var t = n.path;
                        return e.senseQuery && (t += n.search ? "?" + encodeURIComponent(n.search || "").substr(0, 512) : ""), 
                        e.senseHash && (t += n.hash ? encodeURIComponent(n.hash) : ""), t;
                    }(), r;
                }
                function Vy(e) {
                    for (var t = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ], n = 10; 1 < n; n--) {
                        var r = Math.floor(10 * Math.random()), o = t[r];
                        t[r] = t[n - 1], t[n - 1] = o;
                    }
                    for (n = r = 0; 5 > n; n++) r = 10 * r + t[n];
                    return (e || "") + (r + "") + +new Date();
                }
                function By(e) {
                    return {
                        r2: e.sid
                    };
                }
                function Hy(e) {
                    var t = {};
                    if (e) {
                        var n, r = [];
                        for (n in e) e.hasOwnProperty(n) && r.push(encodeURIComponent(n) + "=" + encodeURIComponent(e[n]));
                        e = r.join(";"), t.ext = e;
                    }
                    return t;
                }
                function Ky(e) {
                    var t = jy(e, document.referrer);
                    return e = jy(e), {
                        rdm: t.host,
                        rurl: t.path,
                        rarg: encodeURIComponent(t.search || "").substr(0, 512),
                        adt: e.param.ADTAG || e.param.adtag || e.param.CKTAG || e.param.cktag || e.param.PTAG || e.param.ptag || e.adtag
                    };
                }
                function zy() {
                    try {
                        var e = navigator, t = screen || {
                            width: "",
                            height: "",
                            colorDepth: ""
                        }, n = {
                            scr: t.width + "x" + t.height,
                            scl: t.colorDepth + "-bit",
                            lg: (e.language || e.userLanguage).toLowerCase(),
                            tz: new Date().getTimezoneOffset() / 60
                        };
                    } catch (o) {
                        return {};
                    }
                    return n;
                }
                var Wy = {
                    conf: {},
                    version: "2.0.19",
                    init: function(e) {
                        var t = {
                            sid: 0,
                            cid: 0,
                            autoReport: 0,
                            senseHash: 0,
                            senseQuery: 0,
                            userReport: 0,
                            performanceMonitor: 0,
                            ignoreParams: []
                        };
                        if (e) for (var n in e) e.hasOwnProperty(n) && t.hasOwnProperty(n) && (t[n] = e[n]);
                        this.conf = t, this.conf.autoReport && this.pgv();
                    },
                    pgv: function() {
                        var e = this.conf, t = [], n = this.version;
                        if (e.sid) if (!e.userReport || e.user && e.user.user_id && !parseInt(e.user.user_id, 10) !== conf.user.user_id) {
                            for (var r = 0, o = [ $y(e), Ky(e), By(e), zy(), Hy({
                                version: n
                            }), {
                                random: +new Date()
                            } ], i = o.length; r < i; r++) for (var a in o[r]) o[r].hasOwnProperty(a) && t.push(a + "=" + (void 0 === o[r][a] ? "" : o[r][a]));
                            var s = function(e) {
                                e = "https://pingtas.qq.com/webview/pingd?" + e.join("&").toLowerCase();
                                var t = new Image();
                                t.onload = t.onerror = t.onabort = function() {
                                    t = t.onload = t.onerror = t.onabort = null;
                                }, t.src = e;
                            };
                            s(t), e.performanceMonitor && (t = function() {
                                for (var t = function() {
                                    if (window.performance) {
                                        var e = window.performance.timing, t = {
                                            value: e.domainLookupEnd - e.domainLookupStart
                                        }, n = {
                                            value: e.connectEnd - e.connectStart
                                        }, r = {
                                            value: e.responseStart - (e.requestStart || e.responseStart + 1)
                                        }, o = e.responseEnd - e.responseStart;
                                        e.domContentLoadedEventStart ? 0 > o && (o = 0) : o = -1, e = {
                                            domainLookupTime: t,
                                            connectTime: n,
                                            requestTime: r,
                                            resourcesLoadedTime: {
                                                value: o
                                            },
                                            domParsingTime: {
                                                value: e.domContentLoadedEventStart ? e.domInteractive - e.domLoading : -1
                                            },
                                            domContentLoadedTime: {
                                                value: e.domContentLoadedEventStart ? e.domContentLoadedEventStart - e.fetchStart : -1
                                            }
                                        };
                                    } else e = "";
                                    return e;
                                }(), r = [], o = [], i = 0, a = [ $y(e), {
                                    r2: e.cid
                                }, zy(), {
                                    random: +new Date()
                                } ], c = a.length; i < c; i++) for (var u in a[i]) a[i].hasOwnProperty(u) && o.push(u + "=" + (void 0 === a[i][u] ? "" : a[i][u]));
                                for (u in t) t.hasOwnProperty(u) && ("domContentLoadedTime" == u ? o.push("r3=" + t[u].value) : r.push(t[u].value));
                                t = Hy({
                                    pfm: r.join("_"),
                                    version: n
                                }), o.push("ext=" + t.ext), s(o);
                            }, void 0 !== window.performance && void 0 !== window.performance.timing && 0 != window.performance.timing.loadEventEnd ? t() : window.attachEvent ? window.attachEvent("onload", t) : window.addEventListener && window.addEventListener("load", t, !1));
                        } else console.log("MTA H5分析错误提示：您选择了用户统计uv，请设置业务的user_id，需为int类型"); else console.log("MTA H5分析错误提示：您没有设置sid");
                    },
                    clickStat: function(e, t) {
                        var n = this.conf, r = [], o = $y(n), i = By(n);
                        if (n.cid) {
                            o.dm = "taclick", o.url = e, i.r2 = n.cid, i.r5 = function(e) {
                                e = void 0 === e ? {} : e;
                                var t, n = [];
                                for (t in e) e.hasOwnProperty(t) && n.push(t + "=" + encodeURIComponent(e[t]));
                                return n.join(";");
                            }(t);
                            var a = 0;
                            for (o = (n = [ o, Ky(n), i, zy(), Hy({
                                version: this.version
                            }), {
                                random: +new Date()
                            } ]).length; a < o; a++) for (var s in n[a]) n[a].hasOwnProperty(s) && r.push(s + "=" + (void 0 === n[a][s] ? "" : n[a][s]));
                            r = "https://pingtas.qq.com/webview/pingd?" + r.join("&");
                            var c = new Image();
                            c.onload = c.onerror = c.onabort = function() {
                                c = c.onload = c.onerror = c.onabort = null;
                            }, c.src = r;
                        } else console.log("MTA H5分析错误提示：您没有设置cid,请到管理台开通自定义事件并更新统计代码");
                    },
                    clickShare: function(e) {
                        var t, n, r = this.conf, o = jy(r), i = void 0 === (o = o.param.CKTAG || o.param.ckatg) ? [] : o.split(".");
                        if (r.cid) {
                            o = [];
                            var a = $y(r), s = By(r);
                            for (a.dm = "taclick_share", a.url = "mtah5-share-" + e, s.r2 = r.cid, s.r5 = (n = [], 
                            2 === (t = i).length && "mtah5_share" == t[0] && n.push(t[0] + "=" + t[1]), n.join(";")), 
                            e = 0, a = (r = [ a, Ky(r), s, zy(), Hy({
                                version: this.version
                            }), {
                                random: +new Date()
                            } ]).length; e < a; e++) for (var c in r[e]) r[e].hasOwnProperty(c) && o.push(c + "=" + (void 0 === r[e][c] ? "" : r[e][c]));
                            c = "https://pingtas.qq.com/webview/pingd?" + o.join("&");
                            var u = new Image();
                            u.onload = u.onerror = u.onabort = function() {
                                u = u.onload = u.onerror = u.onabort = null;
                            }, u.src = c;
                        } else console.log("MTA H5分析错误提示：您没有设置cid,请到管理台开通自定义事件并更新统计代码");
                    }
                }, Yy = function() {
                    function e() {
                        Ln(this, e);
                        try {
                            Wy.init({
                                sid: "500690998",
                                cid: "500691017",
                                autoReport: 0,
                                senseHash: 0,
                                senseQuery: 0,
                                performanceMonitor: 0,
                                ignoreParams: []
                            });
                        } catch (f_) {}
                    }
                    return Pn(e, [ {
                        key: "report",
                        value: function(e, t) {
                            try {
                                Wy.clickStat(e, t);
                            } catch (f_) {}
                        }
                    }, {
                        key: "stat",
                        value: function() {
                            try {
                                Wy.pgv();
                            } catch (f_) {}
                        }
                    } ]), e;
                }(), Jy = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n(e) {
                        var r;
                        Ln(this, n), (r = t.call(this, e)).MTA = new Yy();
                        var o = r.tim.innerEmitter;
                        return o.on(fd, r._stat, Kn(r)), o.on(hd, r._stat, Kn(r)), r;
                    }
                    return Pn(n, [ {
                        key: "_stat",
                        value: function() {
                            this.MTA.report("sdkappid", {
                                value: this.tim.context.SDKAppID
                            }), this.MTA.report("version", {
                                value: "2.9.1"
                            }), this.MTA.stat();
                        }
                    } ]), n;
                }(xd), Xy = function() {
                    function e(t) {
                        Ln(this, e), this._table = "timwebii", this._report = [];
                    }
                    return Pn(e, [ {
                        key: "pushIn",
                        value: function(e) {
                            Cs.debug("SSOLogBody.pushIn", this._report.length, e), this._report.push(e);
                        }
                    }, {
                        key: "backfill",
                        value: function(e) {
                            var t;
                            ws(e) && 0 !== e.length && (Cs.debug("SSOLogBody.backfill", this._report.length, e.length), 
                            (t = this._report).unshift.apply(t, Jn(e)));
                        }
                    }, {
                        key: "getLogsNumInMemory",
                        value: function() {
                            return this._report.length;
                        }
                    }, {
                        key: "isEmpty",
                        value: function() {
                            return 0 === this._report.length;
                        }
                    }, {
                        key: "_reset",
                        value: function() {
                            this._report.length = 0, this._report = [];
                        }
                    }, {
                        key: "getTable",
                        value: function() {
                            return this._table;
                        }
                    }, {
                        key: "getLogsInMemory",
                        value: function() {
                            var e = this._report.slice();
                            return this._reset(), e;
                        }
                    } ]), e;
                }(), Qy = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n(e) {
                        var r;
                        return Ln(this, n), (r = t.call(this, e)).TAG = "im-ssolog-event", r._reportBody = new Xy(), 
                        r._version = "2.9.1", r.MIN_THRESHOLD = 20, r.MAX_THRESHOLD = 100, r.WAITING_TIME = 6e4, 
                        r.INTERVAL = 2e4, r._timerID = 0, r._resetLastReportTime(), r._startReportTimer(), 
                        r._retryCount = 0, r.MAX_RETRY_COUNT = 3, r.tim.innerEmitter.on(nd, r._onLoginSuccess, Kn(r)), 
                        r;
                    }
                    return Pn(n, [ {
                        key: "reportAtOnce",
                        value: function() {
                            Cs.debug("EventStatController.reportAtOnce"), this._report();
                        }
                    }, {
                        key: "_onLoginSuccess",
                        value: function() {
                            var e = this, t = this.tim.storage, n = t.getItem(this.TAG, !1);
                            !ac(n) && Os(n.forEach) && (Cs.log("EventStatController._onLoginSuccess get ssolog in storage, nums=" + n.length), 
                            n.forEach(function(t) {
                                e._reportBody.pushIn(t);
                            }), t.removeItem(this.TAG, !1));
                        }
                    }, {
                        key: "pushIn",
                        value: function(e) {
                            e instanceof Xd && (e.setCommonInfo({
                                SDKAppID: this.tim.context.SDKAppID,
                                version: this._version,
                                tinyID: this.tim.context.tinyID,
                                userID: this.tim.loginInfo.identifier,
                                platform: this.getPlatform(),
                                scene: this.tim.context.scene,
                                instanceID: this.tim.context.instanceID
                            }), this._reportBody.pushIn(e), this._reportBody.getLogsNumInMemory() >= this.MIN_THRESHOLD && this._report());
                        }
                    }, {
                        key: "_resetLastReportTime",
                        value: function() {
                            this._lastReportTime = Date.now();
                        }
                    }, {
                        key: "_startReportTimer",
                        value: function() {
                            var e = this;
                            this._timerID = setInterval(function() {
                                Date.now() < e._lastReportTime + e.WAITING_TIME || e._reportBody.isEmpty() || e._report();
                            }, this.INTERVAL);
                        }
                    }, {
                        key: "_stopReportTimer",
                        value: function() {
                            this._timerID > 0 && (clearInterval(this._timerID), this._timerID = 0);
                        }
                    }, {
                        key: "_report",
                        value: function() {
                            var e = this;
                            if (!this._reportBody.isEmpty()) {
                                var t = this._reportBody.getLogsInMemory();
                                this.request({
                                    name: "ssoEventStat",
                                    action: "create",
                                    param: {
                                        table: this._reportBody.getTable(),
                                        report: t
                                    }
                                }).then(function() {
                                    e._resetLastReportTime(), e._retryCount > 0 && (Cs.debug("EventStatController.report retry success"), 
                                    e._retryCount = 0);
                                }).catch(function(n) {
                                    if (Cs.warn("EventStatController.report, networkType:".concat(e.getNetworkType(), " error:").concat(Us(n))), 
                                    e._reportBody.backfill(t), e._reportBody.getLogsNumInMemory() > e.MAX_THRESHOLD || e._retryCount === e.MAX_RETRY_COUNT || 0 === e._timerID) return e._retryCount = 0, 
                                    void e._flushAtOnce();
                                    e._retryCount += 1;
                                });
                            }
                        }
                    }, {
                        key: "_flushAtOnce",
                        value: function() {
                            var e = this.tim.storage, t = e.getItem(this.TAG, !1), n = this._reportBody.getLogsInMemory();
                            if (ac(t)) Cs.log("EventStatController._flushAtOnce nums=" + n.length), e.setItem(this.TAG, n, !0, !1); else {
                                var r = n.concat(t);
                                r.length > this.MAX_THRESHOLD && (r = r.slice(0, this.MAX_THRESHOLD)), Cs.log("EventStatController._flushAtOnce nums=" + r.length), 
                                e.setItem(this.TAG, r, !0, !1);
                            }
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            Cs.log("EventStatController.reset"), this._stopReportTimer(), this._report();
                        }
                    } ]), n;
                }(xd), Zy = "none", e_ = "online", t_ = function() {
                    function e() {
                        Ln(this, e), this._networkType = "", this.maxWaitTime = 3e3;
                    }
                    return Pn(e, [ {
                        key: "start",
                        value: function() {
                            var e = this;
                            Ka ? (za.getNetworkType({
                                success: function(t) {
                                    e._networkType = t.networkType, t.networkType === Zy ? Cs.warn("NetMonitor no network, please check!") : Cs.info("NetMonitor networkType:".concat(t.networkType));
                                }
                            }), za.onNetworkStatusChange(this._onNetworkStatusChange.bind(this))) : this._networkType = e_;
                        }
                    }, {
                        key: "_onNetworkStatusChange",
                        value: function(e) {
                            this._networkType = e.networkType, e.isConnected ? Cs.info("NetMonitor networkType:".concat(e.networkType)) : Cs.warn("NetMonitor no network, please check!");
                        }
                    }, {
                        key: "probe",
                        value: function() {
                            var e = this;
                            return new Promise(function(t, n) {
                                if (Ka) za.getNetworkType({
                                    success: function(n) {
                                        e._networkType = n.networkType, n.networkType === Zy ? (Cs.warn("NetMonitor no network, please check!"), 
                                        t([ !1, n.networkType ])) : (Cs.info("NetMonitor networkType:".concat(n.networkType)), 
                                        t([ !0, n.networkType ]));
                                    }
                                }); else if (window && window.fetch) fetch("".concat(zs(), "//webim-1252463788.file.myqcloud.com/assets/test/speed.xml?random=").concat(Math.random())).then(function(e) {
                                    e.ok ? t([ !0, e_ ]) : t([ !1, Zy ]);
                                }).catch(function(e) {
                                    t([ !1, Zy ]);
                                }); else {
                                    var r = new XMLHttpRequest(), o = setTimeout(function() {
                                        Cs.warn("NetMonitor fetch timeout. Probably no network, please check!"), r.abort(), 
                                        e._networkType = Zy, t([ !1, Zy ]);
                                    }, e.maxWaitTime);
                                    r.onreadystatechange = function() {
                                        4 === r.readyState && (clearTimeout(o), 200 === r.status || 304 === r.status ? (this._networkType = e_, 
                                        t([ !0, e_ ])) : (Cs.warn("NetMonitor fetch status:".concat(r.status, ". Probably no network, please check!")), 
                                        this._networkType = Zy, t([ !1, Zy ])));
                                    }, r.open("GET", "".concat(zs(), "//webim-1252463788.file.myqcloud.com/assets/test/speed.xml?random=").concat(Math.random())), 
                                    r.send();
                                }
                            });
                        }
                    }, {
                        key: "getNetworkType",
                        value: function() {
                            return this._networkType;
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            this._networkType = "";
                        }
                    } ]), e;
                }(), n_ = function() {
                    function e(t) {
                        var n = this;
                        Ln(this, e), ws(t) ? (this._map = new Map(), t.forEach(function(e) {
                            n._map.set(e, []);
                        })) : Cs.warn("AverageCalculator.constructor need keys");
                    }
                    return Pn(e, [ {
                        key: "push",
                        value: function(e, t) {
                            return !(Ds(e) || !this._map.has(e) || !Es(t)) && (this._map.get(e).push(t), !0);
                        }
                    }, {
                        key: "getSize",
                        value: function(e) {
                            return Ds(e) || !this._map.has(e) ? -1 : this._map.get(e).length;
                        }
                    }, {
                        key: "getAvg",
                        value: function(e) {
                            if (Ds(e) || !this._map.has(e)) return -1;
                            var t = this._map.get(e), n = t.length;
                            if (0 === n) return 0;
                            var r = 0;
                            return t.forEach(function(e) {
                                r += e;
                            }), t.length = 0, this._map.set(e, []), parseInt(r / n);
                        }
                    }, {
                        key: "getMax",
                        value: function(e) {
                            return Ds(e) || !this._map.has(e) ? -1 : Math.max.apply(null, this._map.get(e));
                        }
                    }, {
                        key: "getMin",
                        value: function(e) {
                            return Ds(e) || !this._map.has(e) ? -1 : Math.min.apply(null, this._map.get(e));
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            this._map.forEach(function(e) {
                                e.length = 0;
                            });
                        }
                    } ]), e;
                }(), r_ = function() {
                    function e(t) {
                        var n = this;
                        Ln(this, e), ws(t) ? (this._map = new Map(), t.forEach(function(e) {
                            n._map.set(e, {
                                totalCount: 0,
                                successCount: 0
                            });
                        })) : Cs.warn("SuccessRateCalculator.constructor need keys");
                    }
                    return Pn(e, [ {
                        key: "addTotalCount",
                        value: function(e) {
                            return !(Ds(e) || !this._map.has(e)) && (this._map.get(e).totalCount += 1, !0);
                        }
                    }, {
                        key: "addSuccessCount",
                        value: function(e) {
                            return !(Ds(e) || !this._map.has(e)) && (this._map.get(e).successCount += 1, !0);
                        }
                    }, {
                        key: "getSuccessRate",
                        value: function(e) {
                            if (Ds(e) || !this._map.has(e)) return -1;
                            var t = this._map.get(e);
                            if (0 === t.totalCount) return 1;
                            var n = parseFloat((t.successCount / t.totalCount).toFixed(2));
                            return n > 1 && (n = 1), t.totalCount = t.successCount = 0, n;
                        }
                    }, {
                        key: "getTotalCount",
                        value: function(e) {
                            return Ds(e) || !this._map.has(e) ? -1 : this._map.get(e).totalCount;
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            this._map.forEach(function(e) {
                                e.totalCount = 0, e.successCount = 0;
                            });
                        }
                    } ]), e;
                }(), o_ = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n(e) {
                        var r;
                        return Ln(this, n), (r = t.call(this, e)).TABLE = "timwebsum", r.TAG = "im-ssolog-sumstat", 
                        r._items = [ Fd, Ud, qd, jd, $d, Vd, Bd, Hd, Kd, zd ], r._thresholdMap = new Map(), 
                        r._thresholdMap.set(Fd, 100), r._thresholdMap.set(Ud, 150), r._thresholdMap.set(qd, 15), 
                        r._thresholdMap.set(jd, 6), r._thresholdMap.set($d, 6), r._thresholdMap.set(Vd, 6), 
                        r._thresholdMap.set(Bd, 6), r._thresholdMap.set(Hd, 6), r._thresholdMap.set(Kd, 50), 
                        r._thresholdMap.set(zd, 50), r._lpID = "", r._platform = r.getPlatform(), r._lastReportTime = 0, 
                        r._statInfoArr = [], r._retryCount = 0, r._avgCalc = new n_(r._items), r._successRateCalc = new r_(r._items), 
                        r.tim.innerEmitter.on(nd, r._onLoginSuccess, Kn(r)), r;
                    }
                    return Pn(n, [ {
                        key: "_onLoginSuccess",
                        value: function() {
                            var e = this, t = this.tim.storage, n = t.getItem(this.TAG, !1);
                            !ac(n) && Os(n.forEach) && (Cs.log("SumStatController._onLoginSuccess get sumstatlog in storage, nums=" + n.length), 
                            n.forEach(function(t) {
                                e._statInfoArr.push(t);
                            }), t.removeItem(this.TAG, !1));
                        }
                    }, {
                        key: "recordLongPollingID",
                        value: function(e) {
                            this._lpID = e;
                        }
                    }, {
                        key: "addTotalCount",
                        value: function(e) {
                            this._successRateCalc.addTotalCount(e) ? 1 === this._successRateCalc.getTotalCount(e) && (this._lastReportTime = Date.now()) : Cs.warn("SumStatController.addTotalCount invalid key:", e);
                        }
                    }, {
                        key: "addSuccessCount",
                        value: function(e) {
                            this._successRateCalc.addSuccessCount(e) || Cs.warn("SumStatController.addSuccessCount invalid key:", e);
                        }
                    }, {
                        key: "addCost",
                        value: function(e, t) {
                            this._avgCalc.push(e, t) ? (Cs.debug("SumStatController.addCost", e, t, this._avgCalc.getSize(e)), 
                            this._avgCalc.getSize(e) >= this._thresholdMap.get(e) && this._report(e)) : Cs.warn("SumStatController.addCost invalid key or cost:", e, t);
                        }
                    }, {
                        key: "_getItemNum",
                        value: function(e) {
                            switch (e) {
                              case Fd:
                                return 1;

                              case Ud:
                                return 2;

                              case qd:
                                return 3;

                              case Kd:
                                return 4;

                              case zd:
                                return 5;

                              case jd:
                                return 6;

                              case $d:
                                return 7;

                              case Vd:
                                return 8;

                              case Bd:
                                return 9;

                              case Hd:
                                return 10;

                              default:
                                return 100;
                            }
                        }
                    }, {
                        key: "_getStatInfo",
                        value: function(e) {
                            var t = null;
                            return this._avgCalc.getSize(e) > 0 && (t = {
                                SDKAppID: "".concat(this.tim.context.SDKAppID),
                                version: "".concat("2.9.1"),
                                tinyID: this.tim.context.tinyID,
                                userID: this.tim.loginInfo.identifier,
                                item: this._getItemNum(e),
                                lpID: e === Fd ? this._lpID : "",
                                platform: this._platform,
                                scene: this.tim.context.scene,
                                networkType: this.getNetworkType(),
                                total: this._successRateCalc.getTotalCount(e),
                                successRate: this._successRateCalc.getSuccessRate(e),
                                avg: this._avgCalc.getAvg(e),
                                timespan: Date.now() - this._lastReportTime,
                                time: qs()
                            }), t;
                        }
                    }, {
                        key: "_report",
                        value: function(e) {
                            var t = this, n = [], r = null;
                            Ds(e) ? this._items.forEach(function(e) {
                                null !== (r = t._getStatInfo(e)) && n.push(r);
                            }) : null !== (r = this._getStatInfo(e)) && n.push(r), Cs.debug("SumStatController._report", n), 
                            this._statInfoArr.length > 0 && (n = n.concat(this.statInfoArr), this._statInfoArr = []), 
                            this._doReport(n);
                        }
                    }, {
                        key: "_doReport",
                        value: function(e) {
                            var t = this;
                            ac(e) ? Cs.warn("SumStatController._doReport statInfoArr is empty, do nothing") : this.request({
                                name: "ssoSumStat",
                                action: "create",
                                param: {
                                    table: this.TABLE,
                                    report: e
                                }
                            }).then(function() {
                                t._lastReportTime = Date.now(), t._retryCount > 0 && (Cs.debug("SumStatController._doReport retry success"), 
                                t._retryCount = 0);
                            }).catch(function(n) {
                                Cs.warn("SumStatController._doReport, online:".concat(t.getNetworkType(), " error:").concat(Us(n)), e), 
                                t._retryCount <= 1 ? setTimeout(function() {
                                    Cs.info("SumStatController._doReport retry", e), t._retryCount += 1, t._doReport(e);
                                }, 5e3) : (t._retryCount = 0, t._statInfoArr = t._statInfoArr.concat(e), t._flushAtOnce());
                            });
                        }
                    }, {
                        key: "_flushAtOnce",
                        value: function() {
                            var e = this.tim.storage, t = e.getItem(this.TAG, !1), n = this._statInfoArr;
                            if (ac(t)) Cs.log("SumStatController._flushAtOnce nums=" + n.length), e.setItem(this.TAG, n, !0, !1); else {
                                var r = n.concat(t);
                                r.length > 10 && (r = r.slice(0, 10)), Cs.log("SumStatController._flushAtOnce nums=" + r.length), 
                                e.setItem(this.TAG, r, !0, !1);
                            }
                            this._statInfoArr = [];
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            Cs.info("SumStatController.reset"), this._report(), this._avgCalc.reset(), this._successRateCalc.reset();
                        }
                    } ]), n;
                }(xd), i_ = function() {
                    function e() {
                        Ln(this, e), this._funcMap = new Map();
                    }
                    return Pn(e, [ {
                        key: "defense",
                        value: function(e, t) {
                            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;
                            if ("string" != typeof e) return null;
                            if (0 === e.length) return null;
                            if ("function" != typeof t) return null;
                            if (this._funcMap.has(e) && this._funcMap.get(e).has(t)) return this._funcMap.get(e).get(t);
                            this._funcMap.has(e) || this._funcMap.set(e, new Map());
                            var r = null;
                            return this._funcMap.get(e).has(t) ? r = this._funcMap.get(e).get(t) : (r = this._pack(e, t, n), 
                            this._funcMap.get(e).set(t, r)), r;
                        }
                    }, {
                        key: "defenseOnce",
                        value: function(e, t) {
                            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;
                            return "function" != typeof t ? null : this._pack(e, t, n);
                        }
                    }, {
                        key: "find",
                        value: function(e, t) {
                            return "string" != typeof e || 0 === e.length || "function" != typeof t ? null : this._funcMap.has(e) ? this._funcMap.get(e).has(t) ? this._funcMap.get(e).get(t) : (Cs.log("SafetyCallback.find: 找不到 func —— ".concat(e, "/").concat("" !== t.name ? t.name : "[anonymous]")), 
                            null) : (Cs.log("SafetyCallback.find: 找不到 eventName-".concat(e, " 对应的 func")), null);
                        }
                    }, {
                        key: "delete",
                        value: function(e, t) {
                            return "function" == typeof t && !!this._funcMap.has(e) && !!this._funcMap.get(e).has(t) && (this._funcMap.get(e).delete(t), 
                            0 === this._funcMap.get(e).size && this._funcMap.delete(e), !0);
                        }
                    }, {
                        key: "_pack",
                        value: function(e, t, n) {
                            return function() {
                                try {
                                    t.apply(n, Array.from(arguments));
                                } catch (s) {
                                    var r = Object.values(Cn).indexOf(e);
                                    if (-1 !== r) {
                                        var o = Object.keys(Cn)[r];
                                        Cs.warn("接入侧事件 TIM.EVENT.".concat(o, " 对应的回调函数逻辑存在问题，请检查！"), s);
                                    }
                                    var i = new Xd(nm);
                                    i.setText("eventName=".concat(e)).setMessage(s.message).setEnd();
                                }
                            };
                        }
                    } ]), e;
                }(), a_ = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n(e) {
                        var r;
                        return Ln(this, n), (r = t.call(this, e))._maybeLostSequencesMap = new Map(), r;
                    }
                    return Pn(n, [ {
                        key: "onMessageMaybeLost",
                        value: function(e, t, n) {
                            this._maybeLostSequencesMap.has(e) || this._maybeLostSequencesMap.set(e, []);
                            for (var r = this._maybeLostSequencesMap.get(e), o = 0; o < n; o++) r.push(t + o);
                            Cs.debug("MessageLossController.onMessageMaybeLost. maybeLostSequences:".concat(r));
                        }
                    }, {
                        key: "detectMessageLoss",
                        value: function(e, t) {
                            var n = this._maybeLostSequencesMap.get(e);
                            if (!ac(n) && !ac(t)) {
                                var r = t.filter(function(e) {
                                    return -1 !== n.indexOf(e);
                                });
                                if (Cs.debug("MessageLossController.detectMessageLoss. matchedSequences:".concat(r)), 
                                n.length === r.length) Cs.info("MessageLossController.detectMessageLoss no message loss. conversationID=".concat(e)); else {
                                    var o, i = n.filter(function(e) {
                                        return -1 === r.indexOf(e);
                                    }), a = i.length;
                                    a <= 5 ? o = e + "-" + i.join("-") : (i.sort(function(e, t) {
                                        return e - t;
                                    }), o = e + " start:" + i[0] + " end:" + i[a - 1] + " count:" + a), new Xd(Wg).setText(o).setNetworkType(this.getNetworkType()).setEnd(), 
                                    Cs.warn("MessageLossController.detectMessageLoss message loss detected. conversationID:".concat(e, " lostSequences:").concat(i));
                                }
                                n.length = 0;
                            }
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            Cs.log("MessageLossController.reset"), this._maybeLostSequencesMap.clear();
                        }
                    } ]), n;
                }(xd), s_ = function(e) {
                    Un(n, e);
                    var t = Wn(n);
                    function n(e) {
                        var r;
                        return Ln(this, n), (r = t.call(this, e))._request = Ka ? new vv() : new mv(), r;
                    }
                    return Pn(n, [ {
                        key: "sendMessage",
                        value: function(e) {
                            var t = this, n = this._constructMessageInstance(e);
                            if (null === n) return Pd({
                                code: Bp.MESSAGE_SEND_FAIL,
                                message: Zp
                            });
                            var r = Date.now(), o = ac(e.GroupId) ? "openim/sendmsg" : "group_open_http_svc/send_group_msg", i = this.tim.context, a = i.a2Key, s = i.tinyID, c = i.SDKAppID, u = i.identifier, l = {
                                url: "https://" + (!0 === this.tim.context.oversea ? "api.im.qcloud.com" : "webim.tim.qq.com") + "/v4/" + o + "?platform=10&websdkappid=537048168&v=1.7.3&a2=" + a + "&tinyid=" + s + "&sdkappid=" + c + "&contentType=json&apn=1&reqtime=" + Date.now() + "tjg_id=" + this._generateTjgID(n),
                                data: e,
                                method: "POST"
                            };
                            this._addSendMessageTotalCount(n);
                            var p = new Xd(cg);
                            return p.setText("".concat(this._generateTjgID(n), "-").concat(n.from, "-").concat(n.to, "-").concat(n.getElements().length)), 
                            this._request.request(l).then(function(e) {
                                var o = e.data, i = o.ErrorCode, a = o.ErrorInfo;
                                if (0 !== i) return p.setCode(i).setMessage(a).setNetworkType(t.getNetworkType()).setEnd(), 
                                n.status = eu.FAIL, Pd(new Vp({
                                    code: i,
                                    message: a || Zp,
                                    data: {
                                        message: n
                                    }
                                }));
                                t._addSendMessageSuccessCount(n, r), n.status = eu.SUCCESS;
                                var s = e.data, c = s.MsgTime, l = s.MsgSeq;
                                return n.time = c, l && (n.sequence = l), n.generateMessageID(u), t.tim.messageController.pushToMessageList(n), 
                                t.emitInnerEvent(kf, {
                                    eventDataList: [ {
                                        conversationID: n.conversationID,
                                        unreadCount: 0,
                                        type: n.conversationType,
                                        subType: n.conversationSubType,
                                        lastMessage: n
                                    } ]
                                }), Rd(n);
                            }).catch(function(e) {
                                return t.probeNetwork().then(function(t) {
                                    var n = Yn(t, 2), r = n[0], o = n[1];
                                    p.setError(e, r, o).setEnd();
                                }), Cs.warn("ComboMessageController.sendMessage failed. error:", e), n.status = eu.FAIL, 
                                Pd(new Vp({
                                    code: Bp.MESSAGE_SEND_FAIL,
                                    message: Zp,
                                    data: {
                                        message: n
                                    }
                                }));
                            });
                        }
                    }, {
                        key: "_constructMessageInstance",
                        value: function(e) {
                            var t = null;
                            try {
                                var n = this.tim.context.identifier, r = {};
                                r.currentUser = n, r.from = e.From_Account || n, e.GroupId ? (r.conversationID = "".concat(Tn.CONV_GROUP).concat(e.GroupId), 
                                r.conversationType = Tn.CONV_GROUP, r.to = e.GroupId) : e.To_Account && (r.conversationID = "".concat(Tn.CONV_C2C).concat(e.To_Account), 
                                r.conversationType = Tn.CONV_C2C, r.to = e.To_Account), r.time = e.MsgTimeStamp || 0, 
                                r.random = e.Random || e.MsgRandom || 0, r.priority = e.MsgPriority, (t = new rf(r)).status = eu.UNSEND;
                                for (var o, i = e.MsgBody.length, a = 0; a < i; a++) "TIMTextElem" === (o = e.MsgBody[a]).MsgType ? t.setTextElement(o.MsgContent.Text) : "TIMCustomElem" === o.MsgType ? t.setCustomElement({
                                    data: o.MsgContent.Data || "",
                                    description: o.MsgContent.Desc || "",
                                    extension: o.MsgContent.Ext || ""
                                }) : "TIMFaceElem" === o.MsgType && t.setFaceElement({
                                    index: o.MsgContent.Index,
                                    data: o.MsgContent.Data
                                });
                                var s = t.getElements();
                                t.payload = s[0].content, t.type = s[0].type;
                            } catch (f_) {
                                t = null, Cs.error("ComboMessageController._constructMessageInstance failed. error:", f_);
                            }
                            return t;
                        }
                    }, {
                        key: "_addSendMessageSuccessCount",
                        value: function(e, t) {
                            var n = this.tim.sumStatController, r = Math.abs(Date.now() - t);
                            n.addSuccessCount(qd), n.addCost(qd, r);
                            var o = this._getSendMessageSpecifiedKey(e);
                            o && (n.addSuccessCount(o), n.addCost(o, r));
                        }
                    }, {
                        key: "_addSendMessageTotalCount",
                        value: function(e) {
                            var t = this.tim.sumStatController;
                            t.addTotalCount(qd);
                            var n = this._getSendMessageSpecifiedKey(e);
                            n && t.addTotalCount(n);
                        }
                    }, {
                        key: "_getSendMessageSpecifiedKey",
                        value: function(e) {
                            if (e.conversationType === Tn.CONV_C2C) return jd;
                            if (e.conversationType === Tn.CONV_GROUP) {
                                var t = this.tim.groupController.getLocalGroupProfile(e.to);
                                if (!t) return;
                                var n = t.type;
                                if (Js(n)) return $d;
                                if (Xs(n)) return Vd;
                                if (Qs(n)) return Bd;
                                if (Zs(n)) return Hd;
                            }
                        }
                    }, {
                        key: "_generateTjgID",
                        value: function(e) {
                            return this.tim.context.tinyID + "-" + e.random;
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            Cs.info("ComboMessageController.reset");
                        }
                    } ]), n;
                }(xd), c_ = function() {
                    function e(t) {
                        Ln(this, e);
                        var n = new Xd(Qd);
                        bd.mixin(this), this._initOptions(t), this._initMemberVariables(), this._initControllers(), 
                        this._initListener(), Xd.bindController(this.eventStatController), n.setText("instanceID=".concat(this.loginInfo.instanceID, "-oversea=").concat(this.loginInfo.oversea, "-mp=").concat(Ka, "-ua=").concat(Ya)).setEnd(), 
                        Cs.info("SDK instanceID:".concat(this.loginInfo.instanceID, " oversea:").concat(this.loginInfo.oversea, " inMiniApp:").concat(Ka, ", SDKAppID:").concat(t.SDKAppID, ", UserAgent:").concat(Ya)), 
                        this._safetyCallbackFactory = new i_();
                    }
                    return Pn(e, [ {
                        key: "login",
                        value: function(e) {
                            return Cs.time(Nd), this._ssoLog = new Xd(Zd), this.netMonitor.start(), this.loginInfo.identifier = e.identifier || e.userID, 
                            this.loginInfo.userSig = e.userSig, this.signController.login(this.loginInfo);
                        }
                    }, {
                        key: "logout",
                        value: function() {
                            var e = this.signController.logout();
                            return this.resetSDK(), e;
                        }
                    }, {
                        key: "on",
                        value: function(e, t, n) {
                            e === Cn.GROUP_SYSTEM_NOTICE_RECEIVED && Cs.warn("！！！TIM.EVENT.GROUP_SYSTEM_NOTICE_RECEIVED v2.6.0起弃用，为了更好的体验，请在 TIM.EVENT.MESSAGE_RECEIVED 事件回调内接收处理群系统通知，详细请参考：https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/Message.html#.GroupSystemNoticePayload"), 
                            Cs.debug("on", "eventName:".concat(e)), this.outerEmitter.on(e, this._safetyCallbackFactory.defense(e, t, n), n);
                        }
                    }, {
                        key: "once",
                        value: function(e, t, n) {
                            Cs.debug("once", "eventName:".concat(e)), this.outerEmitter.once(e, this._safetyCallbackFactory.defenseOnce(e, t, n), n || this);
                        }
                    }, {
                        key: "off",
                        value: function(e, t, n, r) {
                            Cs.debug("off", "eventName:".concat(e));
                            var o = this._safetyCallbackFactory.find(e, t);
                            null !== o && (this.outerEmitter.off(e, o, n, r), this._safetyCallbackFactory.delete(e, t));
                        }
                    }, {
                        key: "registerPlugin",
                        value: function(e) {
                            var t = this;
                            this.plugins || (this.plugins = {}), Object.keys(e).forEach(function(n) {
                                t.plugins[n] = e[n];
                            }), new Xd(og).setText("key=".concat(Object.keys(e))).setEnd();
                        }
                    }, {
                        key: "getPlugin",
                        value: function(e) {
                            return this.plugins[e] || void 0;
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(e) {
                            e <= 0 && (console.log([ "", " ________  ______  __       __  __       __  ________  _______", "|        \\|      \\|  \\     /  \\|  \\  _  |  \\|        \\|       \\", " \\$$$$$$$$ \\$$$$$$| $$\\   /  $$| $$ / \\ | $$| $$$$$$$$| $$$$$$$\\", "   | $$     | $$  | $$$\\ /  $$$| $$/  $\\| $$| $$__    | $$__/ $$", "   | $$     | $$  | $$$$\\  $$$$| $$  $$$\\ $$| $$  \\   | $$    $$", "   | $$     | $$  | $$\\$$ $$ $$| $$ $$\\$$\\$$| $$$$$   | $$$$$$$\\", "   | $$    _| $$_ | $$ \\$$$| $$| $$$$  \\$$$$| $$_____ | $$__/ $$", "   | $$   |   $$ \\| $$  \\$ | $$| $$$    \\$$$| $$     \\| $$    $$", "    \\$$    \\$$$$$$ \\$$      \\$$ \\$$      \\$$ \\$$$$$$$$ \\$$$$$$$", "", "" ].join("\n")), 
                            console.log("%cIM 智能客服，随时随地解决您的问题 →_→ https://cloud.tencent.com/act/event/smarty-service?from=im-doc", "color:#ff0000"), 
                            console.log([ "", "参考以下文档，会更快解决问题哦！(#^.^#)\n", "SDK 更新日志: https://cloud.tencent.com/document/product/269/38492\n", "SDK 接口文档: https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html\n", "常见问题: https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/tutorial-01-faq.html\n", "反馈问题？戳我提 issue: https://github.com/tencentyun/TIMSDK/issues\n", "如果您需要在生产环境关闭上面的日志，请 tim.setLogLevel(1)\n" ].join("\n"))), 
                            Cs.setLevel(e);
                        }
                    }, {
                        key: "destroy",
                        value: function() {
                            var e = this;
                            return this.logout().finally(function() {
                                e.outerEmitter.emit(Cn.SDK_DESTROY, {
                                    SDKAppID: e.loginInfo.SDKAppID
                                });
                            });
                        }
                    }, {
                        key: "createTextMessage",
                        value: function(e) {
                            return this.messageController.createTextMessage(e);
                        }
                    }, {
                        key: "createTextAtMessage",
                        value: function(e) {
                            return this.messageController.createTextMessage(e);
                        }
                    }, {
                        key: "createImageMessage",
                        value: function(e) {
                            return this.messageController.createImageMessage(e);
                        }
                    }, {
                        key: "createAudioMessage",
                        value: function(e) {
                            return this.messageController.createAudioMessage(e);
                        }
                    }, {
                        key: "createVideoMessage",
                        value: function(e) {
                            return this.messageController.createVideoMessage(e);
                        }
                    }, {
                        key: "createCustomMessage",
                        value: function(e) {
                            return this.messageController.createCustomMessage(e);
                        }
                    }, {
                        key: "createFaceMessage",
                        value: function(e) {
                            return this.messageController.createFaceMessage(e);
                        }
                    }, {
                        key: "createFileMessage",
                        value: function(e) {
                            return this.messageController.createFileMessage(e);
                        }
                    }, {
                        key: "sendMessage",
                        value: function(e, t) {
                            return e instanceof rf ? this.messageController.sendMessageInstance(e, t) : Pd(new Vp({
                                code: Bp.MESSAGE_SEND_NEED_MESSAGE_INSTANCE,
                                message: th
                            }));
                        }
                    }, {
                        key: "callExperimentalAPI",
                        value: function(e, t) {
                            return "sendComboMessage" === e ? this.comboMessageController.sendMessage(t) : Pd(new Vp({
                                code: Bp.INVALID_OPERATION,
                                message: Wh
                            }));
                        }
                    }, {
                        key: "revokeMessage",
                        value: function(e) {
                            return this.messageController.revokeMessage(e);
                        }
                    }, {
                        key: "resendMessage",
                        value: function(e) {
                            return this.messageController.resendMessage(e);
                        }
                    }, {
                        key: "getMessageList",
                        value: function(e) {
                            return this.messageController.getMessageList(e);
                        }
                    }, {
                        key: "setMessageRead",
                        value: function(e) {
                            return this.messageController.setMessageRead(e);
                        }
                    }, {
                        key: "getConversationList",
                        value: function() {
                            return this.conversationController.getConversationList();
                        }
                    }, {
                        key: "getConversationProfile",
                        value: function(e) {
                            return this.conversationController.getConversationProfile(e);
                        }
                    }, {
                        key: "deleteConversation",
                        value: function(e) {
                            return this.conversationController.deleteConversation(e);
                        }
                    }, {
                        key: "getMyProfile",
                        value: function() {
                            return this.userController.getMyProfile();
                        }
                    }, {
                        key: "getUserProfile",
                        value: function(e) {
                            return this.userController.getUserProfile(e);
                        }
                    }, {
                        key: "updateMyProfile",
                        value: function(e) {
                            return this.userController.updateMyProfile(e);
                        }
                    }, {
                        key: "getFriendList",
                        value: function() {
                            return this.userController.getFriendList();
                        }
                    }, {
                        key: "deleteFriend",
                        value: function(e) {
                            return this.userController.deleteFriend(e);
                        }
                    }, {
                        key: "getBlacklist",
                        value: function() {
                            return this.userController.getBlacklist();
                        }
                    }, {
                        key: "addToBlacklist",
                        value: function(e) {
                            return this.userController.addBlacklist(e);
                        }
                    }, {
                        key: "removeFromBlacklist",
                        value: function(e) {
                            return this.userController.deleteBlacklist(e);
                        }
                    }, {
                        key: "getGroupList",
                        value: function(e) {
                            return this.groupController.getGroupList(e);
                        }
                    }, {
                        key: "getGroupProfile",
                        value: function(e) {
                            return this.groupController.getGroupProfile(e);
                        }
                    }, {
                        key: "createGroup",
                        value: function(e) {
                            return this.groupController.createGroup(e);
                        }
                    }, {
                        key: "dismissGroup",
                        value: function(e) {
                            return this.groupController.dismissGroup(e);
                        }
                    }, {
                        key: "updateGroupProfile",
                        value: function(e) {
                            return this.groupController.updateGroupProfile(e);
                        }
                    }, {
                        key: "joinGroup",
                        value: function(e) {
                            return this.groupController.joinGroup(e);
                        }
                    }, {
                        key: "quitGroup",
                        value: function(e) {
                            return this.groupController.quitGroup(e);
                        }
                    }, {
                        key: "searchGroupByID",
                        value: function(e) {
                            return this.groupController.searchGroupByID(e);
                        }
                    }, {
                        key: "changeGroupOwner",
                        value: function(e) {
                            return this.groupController.changeGroupOwner(e);
                        }
                    }, {
                        key: "handleGroupApplication",
                        value: function(e) {
                            return this.groupController.handleGroupApplication(e);
                        }
                    }, {
                        key: "setMessageRemindType",
                        value: function(e) {
                            return this.groupController.setMessageRemindType(e);
                        }
                    }, {
                        key: "getGroupMemberList",
                        value: function(e) {
                            return this.groupController.getGroupMemberList(e);
                        }
                    }, {
                        key: "getGroupMemberProfile",
                        value: function(e) {
                            return this.groupController.getGroupMemberProfile(e);
                        }
                    }, {
                        key: "getGroupOnlineMemberCount",
                        value: function(e) {
                            return this.groupController.getGroupOnlineMemberCount(e);
                        }
                    }, {
                        key: "addGroupMember",
                        value: function(e) {
                            return this.groupController.addGroupMember(e);
                        }
                    }, {
                        key: "deleteGroupMember",
                        value: function(e) {
                            return this.groupController.deleteGroupMember(e);
                        }
                    }, {
                        key: "setGroupMemberMuteTime",
                        value: function(e) {
                            return this.groupController.setGroupMemberMuteTime(e);
                        }
                    }, {
                        key: "setGroupMemberRole",
                        value: function(e) {
                            return this.groupController.setGroupMemberRole(e);
                        }
                    }, {
                        key: "setGroupMemberNameCard",
                        value: function(e) {
                            return this.groupController.setGroupMemberNameCard(e);
                        }
                    }, {
                        key: "setGroupMemberCustomField",
                        value: function(e) {
                            return this.groupController.setGroupMemberCustomField(e);
                        }
                    }, {
                        key: "_initOptions",
                        value: function(e) {
                            this.plugins = {}, this._sdkReloadFlag = !1;
                            var t = e.SDKAppID || 0, n = $s();
                            this.context = {
                                SDKAppID: t,
                                accountType: n
                            }, this.loginInfo = {
                                SDKAppID: t,
                                accountType: n,
                                identifier: null,
                                userSig: null,
                                unlimitedAVChatRoom: e.unlimitedAVChatRoom || !1,
                                scene: e.scene || "",
                                oversea: e.oversea || !1,
                                avchatroomIDList: [],
                                instanceID: nc()
                            }, this.options = {
                                runLoopNetType: e.runLoopNetType || _p,
                                enablePointer: e.enablePointer || !1
                            };
                        }
                    }, {
                        key: "_initMemberVariables",
                        value: function() {
                            this.innerEmitter = new wy(), this.outerEmitter = new wy(), Ld(this.outerEmitter), 
                            this.packageConfig = new ky(this), this.storage = new xy(this), this.netMonitor = new t_(), 
                            this.outerEmitter._emit = this.outerEmitter.emit, this.outerEmitter.emit = function(e, t) {
                                var n = arguments[0], r = [ n, {
                                    name: arguments[0],
                                    data: arguments[1]
                                } ];
                                this.outerEmitter._emit.apply(this.outerEmitter, r);
                            }.bind(this), this.innerEmitter._emit = this.innerEmitter.emit, this.innerEmitter.emit = function(e, t) {
                                var n;
                                xs(arguments[1]) && arguments[1].data ? (Cs.warn("inner eventData has data property, please check!"), 
                                n = [ e, {
                                    name: arguments[0],
                                    data: arguments[1].data
                                } ]) : n = [ e, {
                                    name: arguments[0],
                                    data: arguments[1]
                                } ], this.innerEmitter._emit.apply(this.innerEmitter, n);
                            }.bind(this);
                        }
                    }, {
                        key: "_initControllers",
                        value: function() {
                            this.exceptionController = new Tv(this), this.connectionController = new Cv(this), 
                            this.contextController = new Dd(this), this.context = this.contextController.getContext(), 
                            this.signController = new om(this), this.messageController = new fy(this), this.comboMessageController = new s_(this), 
                            this.conversationController = new Bv(this), this.userController = new Lv(this), 
                            this.groupController = new Ey(this), this.notificationController = new Ny(this), 
                            this.bigDataHallwayController = new Fy(this), this.statusController = new Ay(this), 
                            this.uploadController = new Gy(this), this.messageLossController = new a_(this), 
                            this.eventStatController = new Qy(this), this.sumStatController = new o_(this), 
                            this.mtaReportController = new Jy(this), this._initReadyListener();
                        }
                    }, {
                        key: "_initListener",
                        value: function() {
                            var e = this;
                            if (this.innerEmitter.on(dd, this._onSDKReload, this), Ka && "function" == typeof za.onAppShow && "function" == typeof za.onAppHide) {
                                var t = null;
                                za.onAppHide(function() {
                                    t = new Xd(tm);
                                }), za.onAppShow(function() {
                                    null !== t && t.setNetworkType(e.netMonitor.getNetworkType()).setEnd();
                                });
                            }
                        }
                    }, {
                        key: "_initReadyListener",
                        value: function() {
                            for (var e = this, t = this.readyList, n = 0, r = t.length; n < r; n++) this[t[n]].ready(function() {
                                return e._readyHandle();
                            });
                        }
                    }, {
                        key: "_onSDKReload",
                        value: function() {
                            var e = this;
                            Cs.log("sdk reloading..."), this.resetSDK(), this.login(this.loginInfo).then(function(t) {
                                e._sdkReloadFlag = !0;
                            });
                        }
                    }, {
                        key: "resetSDK",
                        value: function() {
                            var e = this;
                            this.initList.forEach(function(t) {
                                e[t].reset && e[t].reset();
                            }), this.netMonitor.reset(), this.storage.reset(), this.resetReady(), this._initReadyListener(), 
                            this.outerEmitter.emit(Cn.SDK_NOT_READY);
                        }
                    }, {
                        key: "_readyHandle",
                        value: function() {
                            for (var e = this.readyList, t = !0, n = 0, r = e.length; n < r; n++) if (!this[e[n]].isReady()) {
                                t = !1;
                                break;
                            }
                            if (t) {
                                var o = Cs.timeEnd(Nd);
                                Cs.warn("SDK is ready. cost=".concat(o, "ms")), this.triggerReady(), this.innerEmitter.emit(fd), 
                                this.outerEmitter.emit(Cn.SDK_READY), this._sdkReloadFlag && (this.outerEmitter.emit(Cn.SDK_RELOAD), 
                                this.groupController.AVChatRoomHandler.joinAVChatRoomSilently(), this._sdkReloadFlag = !1), 
                                this._ssoLog.setNetworkType(this.netMonitor.getNetworkType()).setText(o).setEnd();
                            }
                        }
                    } ]), e;
                }();
                c_.prototype.readyList = [ "conversationController" ], c_.prototype.initList = [ "exceptionController", "connectionController", "signController", "contextController", "messageController", "comboMessageController", "conversationController", "userController", "groupController", "notificationController", "eventStatController", "sumStatController", "messageLossController", "statusController" ];
                var u_ = {
                    login: "login",
                    logout: "logout",
                    destroy: "destroy",
                    on: "on",
                    off: "off",
                    ready: "ready",
                    setLogLevel: "setLogLevel",
                    joinGroup: "joinGroup",
                    quitGroup: "quitGroup",
                    registerPlugin: "registerPlugin",
                    getGroupOnlineMemberCount: "getGroupOnlineMemberCount"
                };
                function l_(e, t) {
                    return !(!e.isReady() && void 0 === u_[t]) || (e.innerEmitter.emit(ad, new Vp({
                        code: Bp.SDK_IS_NOT_READY,
                        message: "".concat(t, " ").concat(Yh, "，请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/module-EVENT.html#.SDK_READY")
                    })), !1);
                }
                var p_ = {}, h_ = {
                    create: function(e) {
                        if (e.SDKAppID && p_[e.SDKAppID]) return p_[e.SDKAppID];
                        Cs.log("TIM.create");
                        var t = new c_(e);
                        t.on(Cn.SDK_DESTROY, function(e) {
                            p_[e.data.SDKAppID] = null, delete p_[e.data.SDKAppID];
                        });
                        var n = function(e) {
                            var t = Object.create(null);
                            return Object.keys(hf).forEach(function(n) {
                                if (e[n]) {
                                    var r = hf[n], o = new rr();
                                    t[r] = function() {
                                        var t = Array.from(arguments);
                                        return o.use(function(t, r) {
                                            return l_(e, n) ? r() : Pd(new Vp({
                                                code: Bp.SDK_IS_NOT_READY,
                                                message: "".concat(n, " ").concat(Yh, "。")
                                            }));
                                        }).use(function(e, t) {
                                            if (!0 === sc(e, pf[n], r)) return t();
                                        }).use(function(t, r) {
                                            return e[n].apply(e, t);
                                        }), o.run(t);
                                    };
                                }
                            }), t;
                        }(t);
                        return p_[e.SDKAppID] = n, Cs.log("TIM.create ok"), n;
                    }
                };
                return h_.TYPES = Tn, h_.EVENT = Cn, h_.VERSION = "2.9.1", Cs.log("TIM.VERSION: ".concat(h_.VERSION)), 
                h_;
            });
        }).call(this, n("c8ba"));
    },
    a34a: function(e, t, n) {
        e.exports = n("bbdd");
    },
    bbdd: function(e, t, n) {
        var r = function() {
            return this || "object" === typeof self && self;
        }() || Function("return this")(), o = r.regeneratorRuntime && Object.getOwnPropertyNames(r).indexOf("regeneratorRuntime") >= 0, i = o && r.regeneratorRuntime;
        if (r.regeneratorRuntime = void 0, e.exports = n("96cf"), o) r.regeneratorRuntime = i; else try {
            delete r.regeneratorRuntime;
        } catch (a) {
            r.regeneratorRuntime = void 0;
        }
    },
    c8ba: function(e, t) {
        var n;
        n = function() {
            return this;
        }();
        try {
            n = n || new Function("return this")();
        } catch (r) {
            "object" === typeof window && (n = window);
        }
        e.exports = n;
    },
    e1de: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0;
        var r = {
            contact: "",
            person: "",
            personadd: "",
            "contact-filled": "",
            "person-filled": "",
            "personadd-filled": "",
            phone: "",
            email: "",
            chatbubble: "",
            chatboxes: "",
            "phone-filled": "",
            "email-filled": "",
            "chatbubble-filled": "",
            "chatboxes-filled": "",
            weibo: "",
            weixin: "",
            pengyouquan: "",
            chat: "",
            qq: "",
            videocam: "",
            camera: "",
            mic: "",
            location: "",
            "mic-filled": "",
            speech: "",
            "location-filled": "",
            micoff: "",
            image: "",
            map: "",
            compose: "",
            trash: "",
            upload: "",
            download: "",
            close: "",
            redo: "",
            undo: "",
            refresh: "",
            star: "",
            plus: "",
            minus: "",
            circle: "",
            checkbox: "",
            "close-filled": "",
            clear: "",
            "refresh-filled": "",
            "star-filled": "",
            "plus-filled": "",
            "minus-filled": "",
            "circle-filled": "",
            "checkbox-filled": "",
            closeempty: "",
            refreshempty: "",
            reload: "",
            starhalf: "",
            spinner: "",
            "spinner-cycle": "",
            search: "",
            plusempty: "",
            forward: "",
            back: "",
            "left-nav": "",
            checkmarkempty: "",
            home: "",
            navigate: "",
            gear: "",
            paperplane: "",
            info: "",
            help: "",
            locked: "",
            more: "",
            flag: "",
            "home-filled": "",
            "gear-filled": "",
            "info-filled": "",
            "help-filled": "",
            "more-filled": "",
            settings: "",
            list: "",
            bars: "",
            loop: "",
            paperclip: "",
            eye: "",
            arrowup: "",
            arrowdown: "",
            arrowleft: "",
            arrowright: "",
            arrowthinup: "",
            arrowthindown: "",
            arrowthinleft: "",
            arrowthinright: "",
            pulldown: "",
            closefill: "",
            sound: "",
            scan: ""
        };
        t.default = r;
    },
    f0c5: function(e, t, n) {
        "use strict";
        function r(e, t, n, r, o, i, a, s, c, u) {
            var l, p = "function" === typeof e ? e.options : e;
            if (c) {
                p.components || (p.components = {});
                var h = Object.prototype.hasOwnProperty;
                for (var f in c) h.call(c, f) && !h.call(p.components, f) && (p.components[f] = c[f]);
            }
            if (u && ((u.beforeCreate || (u.beforeCreate = [])).unshift(function() {
                this[u.__module] = this;
            }), (p.mixins || (p.mixins = [])).push(u)), t && (p.render = t, p.staticRenderFns = n, 
            p._compiled = !0), r && (p.functional = !0), i && (p._scopeId = "data-v-" + i), 
            a ? (l = function(e) {
                e = e || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext, 
                e || "undefined" === typeof __VUE_SSR_CONTEXT__ || (e = __VUE_SSR_CONTEXT__), o && o.call(this, e), 
                e && e._registeredComponents && e._registeredComponents.add(a);
            }, p._ssrRegister = l) : o && (l = s ? function() {
                o.call(this, this.$root.$options.shadowRoot);
            } : o), l) if (p.functional) {
                p._injectStyles = l;
                var d = p.render;
                p.render = function(e, t) {
                    return l.call(t), d(e, t);
                };
            } else {
                var g = p.beforeCreate;
                p.beforeCreate = g ? [].concat(g, l) : [ l ];
            }
            return {
                exports: e,
                options: p
            };
        }
        n.d(t, "a", function() {
            return r;
        });
    }
} ]);